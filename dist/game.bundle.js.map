{"version":3,"sources":["webpack:///webpack/bootstrap 5eb10e4a0ac62ac7b100","webpack:///./src/image-cache.js","webpack:///./src/game.js","webpack:///./src/utils/drawing-utils.js","webpack:///./src/geometry-utils.js","webpack:///./src/utils/random.js","webpack:///./src/cell.js","webpack:///./src/game-config.js","webpack:///./src/index.js","webpack:///./src/grid.js","webpack:///./src/coord.js","webpack:///./src/tower.js","webpack:///./src/bullet.js","webpack:///./src/goon-wave.js","webpack:///./src/goon.js","webpack:///./src/path-finder.js","webpack:///./src/score-board.js","webpack:///./src/renderer.js"],"names":["loadImageCache","imageUrls","imageCache","onLoadComplete","key","url","img","Image","onload","Object","keys","length","src","initGame","getGame","gameSingleton","canvas","scoreBoard","Game","Error","towers","goons","bullets","highlight","undefined","spawnedGoonCount","cash","initialCash","goonsInside","_isPaused","grid","width","height","pathFinder","goonWave","renderer","cellsWhereGoonCanSpawn","getCellsWhereGoonCanSpawn","gameInitialized","_init","start","stop","won","updateMessage","wavesEnded","position","cost","towerCells","getCellsAround","sizeInCells","rows","cols","some","cell","blocked","hasGoon","forEach","recalculate","doNotTrapCells","map","goon","concat","isInvalidPosition","reachable","towerBoundaries","_getCellsBoudaries","tower","push","mousePosition","isOcuppied","boundaries","valid","spawnCell","getRandomElementFromArray","setInitialCell","bounty","removeGoon","endGame","index","findIndex","aGoon","id","splice","bullet","aBullet","delta","update","updateHighlight","middle","Math","round","rowCount","count","min","row","cells","get","topLeft","getTopLeftPosition","bottomRight","getBottomRightPosition","buildSquarePath","roundRect","circle","polygon","startPosition","edgeSize","path","Path2D","startCorner","x","y","corners","moveTo","corner","lineTo","ctx","fill","stroke","radius","tl","tr","br","bl","defaultRadius","side","beginPath","quadraticCurveTo","closePath","arc","PI","calculateDistance","pointA","pointB","dx","dy","sqrt","pow","getPointInLine","origin","secondPointInLine","distance","maxOnSecondPoint","hyp","sin","cos","dyStep","dxStep","abs","nextX","nextY","getAngleRadians","asin","isEqualPoints","tolerance","Random","yesChance","random","max","ceil","floor","array","getRandomIntExclusive","currentIndex","temporaryValue","randomIndex","CELL_EDGE_SIZE","Cell","col","coord","dist","nextStep","isTarget","equals","pointInCell","zero","waves","intervalAfterWave","numberOfGoons","intervalBetweenSpawns","goonSpeed","goonLife","goonBounty","init","document","getElementById","game","initDebugPanel","onclick","e","stopPropagation","preventDefault","parseInt","value","spawnGoon","speed","pauseResume","drawGrid","Grid","canvasSize","colCount","Array","allCells","apply","any","filter","_isOutOfGrid","point","topLeftCell","getCellAtPosition","bottomRightCell","center","topRow","bottomRow","leftCol","rightCol","context","strokeStyle","fillStyle","fillRect","strokeRect","Coord","Tower","topLeftPosition","centerPosition","reloadTime","fireRange","damage","timeUntilReloaded","canonAngle","basePct","baseWidth","baseHeight","baseX","baseY","rotPct","rotRadius","rotCenterX","rotCenterY","canonPct","canonWidth","canonHeight","canonX","canonY","save","translate","rotate","restore","isLoaded","shoot","reload","getClosestGoonInRange","addBullet","life","towerCenter","goonsInRange","goonDist","sort","a","b","bottomRightPosition","SPEED","RADIUS","Bullet","initialPosition","targetGoon","Date","now","step","target","removeBullet","GoonWave","config","slice","currentWave","waveNumber","timeUntilNexWave","timeUntilNextSpawn","goonsLeft","startOrStopWave","deployGoons","onWavesEnd","shift","newGoon","GOON_IMAGE_SIZE","Goon","fullLife","_residualStep","drawImage","drawLifeBar","greenWidth","redWidth","greenX","redX","updatePosition","updateLife","killGoon","nextCell","offset","getOffset","targetPosition","intStep","nextPosition","nextPositionCell","goonArrived","PathFinder","reset","targetCell","getTarget","frontier","PriorityQueue","size","current","pop","adjacentCells","getAdjacentNeighbours","adjacentCell","distFromCurrent","diagonalCells","getDiagonalNeighbours","diagonalCell","currentCell","steps","higherPriorirtyFirst","data","priority","shouldComeFirst","priorityA","priorityB","ScoreBoard","containerEl","cashDisplay","querySelector","goonsInsideDisplay","waveNumberDisplay","messageDisplay","textContent","message","updateCash","updateGoonsInside","updateWaveNumber","Renderer","getContext","animationId","onCanvasClick","bind","onmousemove","onMouseMove","onmouseout","lastTick","requestAnimationFrame","tick","render","clearRect","_paintBoundaries","draw","blockedCells","getCells","getBoundaries","event","clientX","offsetLeft","clientY","offsetTop","onUserClick","w","h"],"mappings":"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","file":"game.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5eb10e4a0ac62ac7b100","/* global Image */\n\n/**\n * List of images to load.\n * @type {Object}\n */\nconst imageUrls = {\n  'tower-1': '../images/tower-1.png',\n  'goon-1': '../images/goon-1.png',\n  'landscape_sheet': '../images/landscape_sheet.png',\n  'towers_grey_sheet': '../images/towers_grey_sheet.png'\n}\n\n/**\n * Global image cache.\n * @type {Object}\n */\nexport const imageCache = {}\n\n/**\n * Load the images on the cache and call the callback when ready.\n * @param  {function} onLoadComplete\n */\nexport function loadImageCache (onLoadComplete) {\n  for (let key in imageUrls) {\n    let url = imageUrls[key]\n    let img = new Image()\n    img.onload = () => {\n      imageCache[key] = img\n      if (Object.keys(imageCache).length === Object.keys(imageUrls).length) {\n        onLoadComplete()\n      }\n    }\n    img.src = url\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/image-cache.js","/**\n * @typedef {Object} Point\n * @property {number} x - The X Coordinate.\n * @property {number} y - The Y Coordinate.\n */\n\nimport Grid from './grid'\nimport Tower from './tower'\nimport GoonWave from './goon-wave'\nimport PathFinder from './path-finder'\nimport random from './utils/random'\nimport gameConfig from './game-config.js'\nimport ScoreBoard from './score-board.js'\nimport Renderer from './renderer.js'\n\nlet gameSingleton\n\nexport function initGame (canvas, scoreBoard) {\n  if (!gameSingleton) {\n    gameSingleton = new Game(canvas, scoreBoard)\n  }\n  return gameSingleton\n}\n\nexport function getGame () {\n  if (!gameSingleton) {\n    throw new Error('Game not initialized')\n  }\n  return gameSingleton\n}\n\nclass Game {\n  constructor (canvas, scoreBoard) {\n    this.canvas = canvas\n    this.scoreBoard = scoreBoard\n    this.towers = []\n    this.goons = []\n    this.bullets = []\n    this.highlight = undefined\n    this.spawnedGoonCount = 0\n    this.cash = gameConfig.initialCash\n    this.goonsInside = 0\n    this._isPaused = false\n  }\n\n  _init () {\n    this.grid = new Grid({width: 1000, height: 600})\n    this.pathFinder = new PathFinder(this.grid)\n    this.goonWave = new GoonWave()\n    this.scoreBoard = new ScoreBoard(this.scoreBoard)\n    this.renderer = new Renderer(this.canvas)\n    this.cellsWhereGoonCanSpawn = this.getCellsWhereGoonCanSpawn()\n    this.gameInitialized = true\n  }\n\n  start () {\n    if (!this.gameInitialized) {\n      this._init()\n    }\n    this.renderer.start()\n  }\n\n  stop () {\n    this.renderer.stop()\n  }\n\n  endGame (won) {\n    this.stop()\n    this.scoreBoard.updateMessage(won ? 'You won!' : 'You lost!')\n  }\n\n  onWavesEnd () {\n    this.wavesEnded = true\n  }\n\n  pauseResume () {\n    this._isPaused = !this._isPaused\n  }\n\n  /**\n   * When a user click a cell.\n   * @param  {Point} position - Cell upper-left position.\n   */\n  onUserClick (position) {\n    if (this.cash < Tower.cost) {\n      // no money, no tower\n      return\n    }\n    const towerCells = this.grid.getCellsAround(position, Tower.sizeInCells.rows, Tower.sizeInCells.cols)\n    // occupied ?\n    if (!towerCells || towerCells.some(cell => cell.blocked || cell.hasGoon)) {\n      return\n    }\n    // 1: block\n    towerCells.forEach(cell => { cell.blocked = true })\n    // 2: recalculate paths\n    this.pathFinder.recalculate()\n    // 3: check for trapped goons and spawn locations\n    const doNotTrapCells = this.goons.map(goon => goon.cell)\n      .concat(this.cellsWhereGoonCanSpawn)\n    const isInvalidPosition = doNotTrapCells.some(cell => !cell.reachable)\n    // 4: if trapped, rollback\n    if (isInvalidPosition) {\n      towerCells.forEach(cell => { cell.blocked = false })\n      this.pathFinder.recalculate()\n      return\n    }\n\n    const towerBoundaries = this._getCellsBoudaries(towerCells)\n    const tower = new Tower(towerBoundaries)\n    this.towers.push(tower)\n    this.cash -= Tower.cost\n  }\n\n  onMouseMove (position) {\n    this.mousePosition = position\n  }\n\n  updateHighlight () {\n    if (!this.mousePosition) {\n      return\n    }\n    const towerCells = this.grid.getCellsAround(\n      this.mousePosition,\n      Tower.sizeInCells.rows,\n      Tower.sizeInCells.cols\n    )\n    if (!towerCells) {\n      this.highlight = undefined\n      return\n    }\n    const towerBoundaries = this._getCellsBoudaries(towerCells)\n    const isOcuppied = towerCells.some(cell => cell.blocked || cell.hasGoon)\n    this.highlight = {\n      boundaries: towerBoundaries,\n      valid: !isOcuppied\n    }\n  }\n\n  /**\n   * Spawn a new goon.\n   */\n  spawnGoon (goon) {\n    const spawnCell = random.getRandomElementFromArray(this.cellsWhereGoonCanSpawn)\n    goon.setInitialCell(spawnCell)\n    this.goons.push(goon)\n  }\n\n  killGoon (goon) {\n    this.cash += goon.bounty\n    this.removeGoon(goon)\n  }\n\n  goonArrived (goon) {\n    this.goonsInside++\n    this.removeGoon(goon)\n\n    if (this.goonsInside >= 5) {\n      this.endGame(false)\n    }\n  }\n\n  removeGoon (goon) {\n    goon.cell.hasGoon = false\n    const index = this.goons.findIndex((aGoon) => aGoon.id === goon.id)\n    if (index >= 0) {\n      this.goons.splice(index, 1)\n    }\n    if (this.goons.length <= 0 && this.wavesEnded) {\n      this.endGame(true)\n    }\n  }\n\n  addBullet (bullet) {\n    this.bullets.push(bullet)\n  }\n\n  removeBullet (bullet) {\n    const index = this.bullets.findIndex((aBullet) => aBullet.id === bullet.id)\n    if (index >= 0) {\n      this.bullets.splice(index, 1)\n    }\n  }\n\n  /**\n   * Update the state of the game entities.\n   * @param  {number} delta - ms since last update.\n   */\n  update (delta) {\n    if (!this._isPaused) {\n      this.goonWave.update(delta)\n      this.towers.forEach((tower) => tower.update(delta))\n      this.goons.forEach((goon) => goon.update(delta))\n      this.bullets.forEach((bullet) => bullet.update(delta))\n    }\n    this.updateHighlight()\n    this.scoreBoard.update()\n  }\n\n  getCellsWhereGoonCanSpawn () {\n    const middle = Math.round(this.grid.rowCount / 2)\n    let count = Math.min(10, Math.round(this.grid.rowCount / 3))\n    let row = middle - Math.round(count / 2)\n    const cells = []\n    while (count-- > 0) {\n      cells.push(\n        this.grid.get(row++, 0)\n      )\n    }\n    return cells\n  }\n\n  _getCellsBoudaries (cells) {\n    return {\n      topLeft: cells[0].getTopLeftPosition(),\n      bottomRight: cells[cells.length - 1].getBottomRightPosition()\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/game.js","/* global Path2D */\n\n/**\n * @typedef {Object} Point\n * @property {number} x - The X Coordinate.\n * @property {number} y - The Y Coordinate.\n */\n\n/**\n * Build a square path.\n * @param  {Point} startPosition\n * @param  {number} edgeSize\n * @return {Path2D}\n */\nexport function buildSquarePath (startPosition, edgeSize) {\n  const path = new Path2D()\n  const startCorner = [startPosition.x, startPosition.y]\n  const corners = [\n    [startPosition.x + edgeSize, startPosition.y],\n    [startPosition.x + edgeSize, startPosition.y + edgeSize],\n    [startPosition.x, startPosition.y + edgeSize],\n    [startPosition.x, startPosition.y]\n  ]\n  path.moveTo(...startCorner)\n  corners.forEach((corner) => {\n    path.lineTo(...corner)\n  })\n  return path\n}\n\n/**\n * Draws a rounded rectangle using the current state of the canvas.\n * If you omit the last three params, it will draw a rectangle\n * outline with a 5 pixel border radius\n * @param {CanvasRenderingContext2D} ctx\n * @param {Number} x The top left x coordinate\n * @param {Number} y The top left y coordinate\n * @param {Number} width The width of the rectangle\n * @param {Number} height The height of the rectangle\n * @param {Boolean} [fill = false] Whether to fill the rectangle.\n * @param {Boolean} [stroke = true] Whether to stroke the rectangle.\n * @param {Number} [radius = 5] The corner radius; It can also be an object\n *                 to specify different radii for corners\n * @param {Number} [radius.tl = 0] Top left\n * @param {Number} [radius.tr = 0] Top right\n * @param {Number} [radius.br = 0] Bottom right\n * @param {Number} [radius.bl = 0] Bottom left\n */\nexport function roundRect (ctx, x, y, width, height, fill, stroke, radius) {\n  if (typeof stroke === 'undefined') {\n    stroke = true\n  }\n  if (typeof radius === 'undefined') {\n    radius = 5\n  }\n  if (typeof radius === 'number') {\n    radius = {tl: radius, tr: radius, br: radius, bl: radius}\n  } else {\n    const defaultRadius = {tl: 0, tr: 0, br: 0, bl: 0}\n    for (var side in defaultRadius) {\n      radius[side] = radius[side] || defaultRadius[side]\n    }\n  }\n  ctx.beginPath()\n  ctx.moveTo(x + radius.tl, y)\n  ctx.lineTo(x + width - radius.tr, y)\n  ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr)\n  ctx.lineTo(x + width, y + height - radius.br)\n  ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height)\n  ctx.lineTo(x + radius.bl, y + height)\n  ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl)\n  ctx.lineTo(x, y + radius.tl)\n  ctx.quadraticCurveTo(x, y, x + radius.tl, y)\n  ctx.closePath()\n  if (fill) {\n    ctx.fill()\n  }\n  if (stroke) {\n    ctx.stroke()\n  }\n}\n\nexport function circle (ctx, x, y, radius, fill, stroke) {\n  ctx.beginPath()\n  ctx.arc(x, y, radius, 0, 2 * Math.PI)\n  fill && ctx.fill()\n  stroke && ctx.stroke()\n}\n\nexport function polygon (ctx, corners, fill, stroke) {\n  ctx.beginPath()\n  ctx.moveTo(corners[0].x, corners[0].y)\n  for (let corner of corners) {\n    ctx.lineTo(corner.x, corner.y)\n  }\n  ctx.closePath()\n  fill && ctx.fill()\n  stroke && ctx.stroke()\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/drawing-utils.js","/**\n * Calculate the distance between 2 points.\n * @param  {Point} pointA\n * @param  {Point} pointB\n * @return {number} distance\n */\nexport const calculateDistance = (pointA, pointB) => {\n  const dx = pointB.x - pointA.x\n  const dy = pointB.y - pointA.y\n  return Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2))\n}\n\n/**\n * Let L be the line formed by the 2 given points `origin` and `anyPointInLine`.\n * Return the point in L with the given distance to `origin`.\n * @param  {Point} origin - Origin point.\n * @param  {Point} secondPointInLine - Another point in the desired line (define direction).\n * @param  {number} distance - Distance from origin to the returned point in pixels.\n * @param  {boolean} maxOnSecondPoint - If true, returns the second point if the result is beyond it in the line..\n * @return {Point} Point in L with the given distance to `origin`.\n */\nexport const getPointInLine = (origin, secondPointInLine, distance, maxOnSecondPoint = false) => {\n  const hyp = calculateDistance(origin, secondPointInLine)\n  const dx = secondPointInLine.x - origin.x\n  const dy = secondPointInLine.y - origin.y\n  const sin = dy / hyp\n  const cos = dx / hyp\n\n  let dyStep = sin * distance\n  let dxStep = cos * distance\n\n  if (maxOnSecondPoint) {\n    if (Math.abs(dxStep) > Math.abs(dx)) {\n      dxStep = dx\n    }\n    if (Math.abs(dyStep) > Math.abs(dy)) {\n      dyStep = dy\n    }\n  }\n  const nextX = origin.x + dxStep\n  const nextY = origin.y + dyStep\n  return {x: nextX, y: nextY}\n}\n\n/**\n * Return the angle between the line conecting 2 points and the horizontal axis.\n *\n * Angle signal:\n *  B     |     B\n *    (-) | (-)\n * -------A-------\n *    (+) | (+)\n *  B     |     B\n *\n * @param  {Point} pointA\n * @param  {Point} pointB\n * @return {number} Angle in radians.\n */\nexport const getAngleRadians = (pointA, pointB) => {\n  const dy = pointB.y - pointA.y\n  const hyp = calculateDistance(pointA, pointB)\n  const sin = dy / hyp\n  return Math.asin(sin)\n}\n\n/**\n * Check is two points are in the same position given th tolerance.\n * @param  {Point} pointA\n * @param  {Point} pointB\n * @param  {number} tolerance\n * @return {boolean}\n */\nexport const isEqualPoints = (pointA, pointB, tolerance = 1) => {\n  return Math.abs(pointA.x - pointB.x) <= tolerance &&\n    Math.abs(pointA.y - pointB.y) <= tolerance\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/geometry-utils.js","class Random {\n  yesOrNo (yesChance) {\n    yesChance = yesChance || 0.5\n    return Math.random() < yesChance\n  }\n\n  getRandomIntExclusive (min, max) {\n    min = Math.ceil(min)\n    max = Math.floor(max)\n    // The maximum is exclusive and the minimum is inclusive\n    return Math.floor(Math.random() * (max - min)) + min\n  }\n\n  getRandomIntInclusive (min, max) {\n    min = Math.ceil(min)\n    max = Math.floor(max)\n    // The maximum is inclusive and the minimum is inclusive\n    return Math.floor(Math.random() * (max - min + 1)) + min\n  }\n\n  getRandomElementFromArray (array) {\n    var index = this.getRandomIntExclusive(0, array.length)\n    return array[index]\n  }\n\n  shuffle (array) {\n    let currentIndex = array.length\n    let temporaryValue, randomIndex\n\n    // While there remain elements to shuffle...\n    while (currentIndex !== 0) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex)\n      currentIndex -= 1\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex]\n      array[currentIndex] = array[randomIndex]\n      array[randomIndex] = temporaryValue\n    }\n  }\n}\n\nexport default new Random()\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/random.js","/**\n * @typedef {Object} Point\n * @property {number} x - The X Coordinate.\n * @property {number} y - The Y Coordinate.\n */\n\nimport Coord from './coord'\n\n/**\n * Size of the (square) cell edge.\n * @type {number}\n */\nexport const CELL_EDGE_SIZE = 20\n\n/**\n * Grid cell.\n */\nexport class Cell {\n  /**\n   * @param {number} row - Row number.\n   * @param {number} col - Column number.\n   */\n  constructor (row, col) {\n    this.coord = new Coord(row, col)\n    this.reachable = false\n    this.dist = undefined\n    this.nextStep = undefined\n    this.blocked = false\n    this.isTarget = false\n  }\n\n  /**\n   * Check cell coordinates.\n   * @param {Coord} coord\n   * @return {Boolean}\n   */\n  isOnCoord (coord) {\n    return this.coord.equals(coord)\n  }\n\n  /**\n   * Get the position of the center of the cell in pixels.\n   * @return {Point}\n   */\n  getCenterPosition () {\n    let x = Math.round((this.coord.col * CELL_EDGE_SIZE) + (CELL_EDGE_SIZE / 2))\n    let y = Math.round((this.coord.row * CELL_EDGE_SIZE) + (CELL_EDGE_SIZE / 2))\n    return {x, y}\n  }\n\n  /**\n   * Get the top-left position of the cell in pixels.\n   * @return {Point}\n   */\n  getTopLeftPosition () {\n    let x = this.coord.col * CELL_EDGE_SIZE\n    let y = this.coord.row * CELL_EDGE_SIZE\n    return {x, y}\n  }\n\n  /**\n   * Get the bottom-right position of the cell in pixels.\n   * @return {Point}\n   */\n  getBottomRightPosition () {\n    let x = (this.coord.col + 1) * CELL_EDGE_SIZE\n    let y = (this.coord.row + 1) * CELL_EDGE_SIZE\n    return {x, y}\n  }\n\n  /**\n   * Get the offset of a point inside the cell from the cell's top-left corner.\n   * @param  {Point} pointInCell\n   * @return {Point} offset\n   */\n  getOffset (pointInCell) {\n    const zero = this.getTopLeftPosition()\n    return {\n      x: pointInCell.x - zero.x,\n      y: pointInCell.y - zero.y\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/cell.js","export default {\n  initialCash: 50,\n  waves: [\n    {\n      intervalAfterWave: 20000,\n      numberOfGoons: 5,\n      intervalBetweenSpawns: 1500,\n      goonSpeed: 20,\n      goonLife: 100,\n      goonBounty: 20\n    },\n    {\n      intervalAfterWave: 20000,\n      numberOfGoons: 10,\n      intervalBetweenSpawns: 1500,\n      goonSpeed: 20,\n      goonLife: 100,\n      goonBounty: 20\n    },\n    {\n      intervalAfterWave: 20000,\n      numberOfGoons: 10,\n      intervalBetweenSpawns: 1500,\n      goonSpeed: 25,\n      goonLife: 120,\n      goonBounty: 20\n    },\n    {\n      intervalAfterWave: 20000,\n      numberOfGoons: 10,\n      intervalBetweenSpawns: 1000,\n      goonSpeed: 25,\n      goonLife: 120,\n      goonBounty: 20\n    }\n  ]\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/game-config.js","import {loadImageCache} from './image-cache.js'\nimport {initGame, getGame} from './game.js'\n\nloadImageCache(init)\n\nfunction init () {\n  const canvas = document.getElementById('canvas')\n  const scoreBoard = document.getElementById('scoreBoard')\n\n  const game = initGame(canvas, scoreBoard)\n  game.start()\n\n  initDebugPanel()\n}\n\nfunction initDebugPanel () {\n  document.getElementById('spawn').onclick = function (e) {\n    e.stopPropagation()\n    e.preventDefault()\n\n    const x = parseInt(document.getElementById('x').value)\n    const y = parseInt(document.getElementById('y').value)\n    getGame().spawnGoon(x, y)\n  }\n\n  document.getElementById('speedUpdate').onclick = function (e) {\n    e.stopPropagation()\n    e.preventDefault()\n\n    const speed = parseInt(document.getElementById('speed').value)\n    getGame().goons.forEach(goon => { goon.speed = speed })\n  }\n\n  document.getElementById('pause').onclick = function (e) {\n    e.stopPropagation()\n    e.preventDefault()\n    getGame().pauseResume()\n  }\n\n  document.getElementById('drawGrid').onclick = function (e) {\n    e.stopPropagation()\n    e.preventDefault()\n    getGame().drawGrid = !getGame().drawGrid\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/**\n * @typedef {Object} CellData\n * @property {number} x - The X Coordinate.\n * @property {number} y - The Y Coordinate.\n * @property {number} dist - Number of steps until target.\n * @property {number} nextStep - Next cell on the path to target.\n */\n\nimport {Cell, CELL_EDGE_SIZE} from './cell'\n\nexport default class Grid {\n  constructor (canvasSize) {\n    this.canvasSize = canvasSize\n    this.colCount = Math.floor(canvasSize.width / CELL_EDGE_SIZE)\n    this.rowCount = Math.floor(canvasSize.height / CELL_EDGE_SIZE)\n    this.init()\n  }\n\n  init () {\n    this.grid = new Array(this.rowCount)\n    for (var row = 0; row < this.rowCount; row++) {\n      this.grid[row] = Array(this.colCount)\n      for (var col = 0; col < this.colCount; col++) {\n        this.grid[row][col] = new Cell(row, col)\n      }\n    }\n    // flatten all cells on a single array\n    this.allCells = [].concat.apply([], this.grid)\n  }\n\n  /**\n   * Reset grid data.\n   */\n  reset () {\n    for (var row = 0; row < this.rowCount; row++) {\n      for (var col = 0; col < this.colCount; col++) {\n        this.grid[row][col].reachable = false\n        this.grid[row][col].dist = undefined\n        this.grid[row][col].nextStep = undefined\n      }\n    }\n  }\n\n  /**\n   * Get cell at position.\n   * @param  {number} x - X coordinate.\n   * @param  {number} y - Y coordinate.\n   * @return {Cell}\n   */\n  get (row, col) {\n    try {\n      return this.grid[row][col]\n    } catch (any) {\n      return undefined\n    }\n  }\n\n  /**\n   * Get target cell.\n   * @return {Cell}\n   */\n  getTarget () {\n    let row = Math.round(this.rowCount / 2)\n    let col = this.colCount - 1\n    return this.get(row, col)\n  }\n\n  /**\n   * Get the unvisited neighbour cells of the position.\n   * @param  {Cell} cell\n   * @return {Cell[]}\n   */\n  getUnvisitedNeighboursCells (cell) {\n    const coord = cell.coord\n    const grid = this\n    return [\n      {row: coord.row, col: coord.col - 1},\n      {row: coord.row - 1, col: coord.col},\n      {row: coord.row, col: coord.col + 1},\n      {row: coord.row + 1, col: coord.col}\n    ].filter(coord => (\n      !this._isOutOfGrid(coord)\n    )).map(coord => (\n      grid.get(coord.row, coord.col)\n    )).filter(cell => (\n      cell.dist === undefined &&\n      !cell.blocked\n    ))\n  }\n\n  getAdjacentNeighbours (cell) {\n    const coord = cell.coord\n    const grid = this\n    return [\n      {row: coord.row, col: coord.col - 1},\n      {row: coord.row - 1, col: coord.col},\n      {row: coord.row, col: coord.col + 1},\n      {row: coord.row + 1, col: coord.col}\n    ].filter(coord => (\n      !this._isOutOfGrid(coord)\n    )).map(coord => (\n      grid.get(coord.row, coord.col)\n    )).filter(cell => (\n      !cell.blocked\n    ))\n  }\n\n  getDiagonalNeighbours (cell) {\n    const coord = cell.coord\n    const grid = this\n    return [\n      {row: coord.row - 1, col: coord.col - 1},\n      {row: coord.row - 1, col: coord.col + 1},\n      {row: coord.row + 1, col: coord.col + 1},\n      {row: coord.row + 1, col: coord.col - 1}\n    ].filter(coord => (\n      !this._isOutOfGrid(coord)\n    )).map(coord => (\n      grid.get(coord.row, coord.col)\n    )).filter(cell => (\n      !cell.blocked\n    ))\n  }\n\n  /**\n   * Get the cell that contains the provided position.\n   * @param  {Point} point\n   * @return {Cell}\n   */\n  getCellAtPosition (point) {\n    if (point.x < 0 ||\n      point.x > this.canvasSize.width ||\n      point.y < 0 ||\n      point.y > this.canvasSize.height\n    ) {\n      return undefined\n    }\n    const col = Math.floor(point.x / CELL_EDGE_SIZE)\n    const row = Math.floor(point.y / CELL_EDGE_SIZE)\n    return this.get(row, col)\n  }\n\n  /**\n   * Get the cells that contains the boundaries area.\n   * @param  {Boundaries} boundaries\n   * @return {Cell[]}\n   */\n  getCellsInBoundaries (boundaries) {\n    const topLeftCell = this.getCellAtPosition(boundaries.topLeft)\n    const bottomRightCell = this.getCellAtPosition(boundaries.bottomRight)\n    const cells = []\n    for (let row = topLeftCell.coord.row; row <= bottomRightCell.coord.row; row++) {\n      for (let col = topLeftCell.coord.col; col <= bottomRightCell.coord.col; col++) {\n        cells.push(this.get(row, col))\n      }\n    }\n    return cells\n  }\n\n  /**\n   * Return an array containing all cells.\n   * @return {Cell[]}\n   */\n  getCells () {\n    return this.allCells\n  }\n\n  /**\n   * Return a block of cells containg the point approximately in the center\n   * @param  {Point} point - Point contained in the block,\n   * @param  {number} rowCount - Number of rows in the block.\n   * @param  {number} colCount - Number of cols in the block.\n   * @return {Cell[]}\n   */\n  getCellsAround (point, rowCount, colCount) {\n    const center = this.getCellAtPosition(point)\n    if (!center) {\n      return undefined\n    }\n    const topRow = center.coord.row - Math.floor(rowCount / 2)\n    const bottomRow = topRow + rowCount - 1\n    const leftCol = center.coord.col - Math.floor(colCount / 2)\n    const rightCol = leftCol + colCount - 1\n    if (this._isOutOfGrid({row: topRow, col: leftCol}) ||\n      this._isOutOfGrid({row: bottomRow, col: rightCol})) {\n      return undefined\n    }\n\n    const cells = []\n    for (let row = topRow; row <= bottomRow; row++) {\n      for (let col = leftCol; col <= rightCol; col++) {\n        cells.push(this.get(row, col))\n      }\n    }\n    return cells\n  }\n\n  /**\n   * Check if a coordinate is out of the grid.\n   * @param  {Coord} coord\n   * @return {Boolean}       [description]\n   */\n  _isOutOfGrid (coord) {\n    return coord.col < 0 ||\n      coord.col >= this.colCount ||\n      coord.row < 0 ||\n      coord.row >= this.rowCount\n  }\n\n  draw (context) {\n    context.strokeStyle = '#333333'\n    for (var row = 0; row < this.rowCount; row++) {\n      for (var col = 0; col < this.colCount; col++) {\n        let cell = this.get(row, col)\n        if (cell.isTarget) {\n          context.fillStyle = 'rgba(0, 0, 255, 0.7)'\n          context.fillRect(cell.getTopLeftPosition().x, cell.getTopLeftPosition().y, CELL_EDGE_SIZE, CELL_EDGE_SIZE)\n        } else if (cell.blocked) {\n          context.fillStyle = 'rgba(255, 118, 0, 0.7)'\n          context.fillRect(cell.getTopLeftPosition().x, cell.getTopLeftPosition().y, CELL_EDGE_SIZE, CELL_EDGE_SIZE)\n        } else if (!cell.reachable) {\n          context.fillStyle = 'rgba(255, 0, 0, 0.37)'\n          context.fillRect(cell.getTopLeftPosition().x, cell.getTopLeftPosition().y, CELL_EDGE_SIZE, CELL_EDGE_SIZE)\n        }\n        context.strokeRect(cell.getTopLeftPosition().x, cell.getTopLeftPosition().y, CELL_EDGE_SIZE, CELL_EDGE_SIZE)\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/grid.js","export default class Coord {\n  /**\n   * @param {number} row\n   * @param {number} col\n   */\n  constructor (row, col) {\n    this.row = row\n    this.col = col\n  }\n\n  /**\n   * Compare two coordinates.\n   * @param {Coord} coord\n   * @return {Boolean}\n   */\n  equals (coord) {\n    return coord && this.row === coord.row && this.col === coord.col\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/coord.js","import {calculateDistance, getAngleRadians} from './geometry-utils'\nimport {roundRect, circle} from './utils/drawing-utils'\nimport {getGame} from './game.js'\nimport Bullet from './bullet.js'\n/**\n * @typedef {Object} Point\n * @property {number} x - The X Coordinate.\n * @property {number} y - The Y Coordinate.\n */\n\n/**\n * @typedef {Object} Boundaries\n * @property {Point} topLeft - top-left point of the object.\n * @property {Point} bottomRight - bottom-right point of the object.\n */\n\nexport default class Tower {\n  constructor (boundaries) {\n    this.game = getGame()\n    this.topLeftPosition = boundaries.topLeft\n    this.width = boundaries.bottomRight.x - boundaries.topLeft.x\n    this.height = boundaries.bottomRight.y - boundaries.topLeft.y\n    this.centerPosition = {\n      x: Math.round(boundaries.topLeft.x + (this.width / 2)),\n      y: Math.round(boundaries.topLeft.y + (this.height / 2))\n    }\n    // shooting consts\n    this.reloadTime = 2000\n    this.fireRange = 150\n    this.damage = 5\n\n    // shoting props\n    this.timeUntilReloaded = 0\n    this.canonAngle = Math.PI\n  }\n\n  /**\n   * Draw the tower on position.\n   * @param  {CanvasRenderingContext2D} context - Canvas renderering context.\n   */\n  draw (context) {\n    // grass\n    let x = this.topLeftPosition.x\n    let y = this.topLeftPosition.y\n    let width = this.width\n    let height = this.height\n    context.fillStyle = '#B8E986'\n    context.strokeStyle = '#7ED321'\n    roundRect(context, x, y, width, height, true, true)\n\n    // base\n    const basePct = 3 / 5\n    const baseWidth = Math.round(width * basePct)\n    const baseHeight = Math.round(height * basePct)\n    const baseX = x + Math.round((width - baseWidth) / 2)\n    const baseY = y + Math.round((height - baseHeight) / 2)\n    context.fillStyle = '#D3D3D3'\n    context.strokeStyle = '#979797'\n    context.fillRect(baseX, baseY, baseWidth, baseHeight)\n    context.strokeRect(baseX, baseY, baseWidth, baseHeight)\n\n    // Rotatory device\n    const rotPct = 2 / 5\n    const rotRadius = Math.round(width * rotPct / 2)\n    const rotCenterX = x + Math.round(width / 2)\n    const rotCenterY = y + Math.round(height / 2)\n    context.fillStyle = '#9B9B9B'\n    context.strokeStyle = '#979797'\n    circle(context, rotCenterX, rotCenterY, rotRadius, true, true)\n\n    // canon\n    const canonPct = 22 / 50\n    const canonWidth = Math.round(width * canonPct)\n    const canonHeight = 8\n    const canonX = 0\n    const canonY = 0 - Math.round(canonHeight / 2)\n    context.save()\n    context.translate(rotCenterX, rotCenterY)\n    context.rotate(this.canonAngle)\n    context.fillStyle = '#9B9B9B'\n    context.strokeStyle = '#979797'\n    context.fillRect(canonX, canonY, canonWidth, canonHeight)\n    context.restore()\n  }\n\n  /**\n   * Update tower state.\n   * @param  {number} delta - ms since last update.\n   */\n  update (delta) {\n    if (this.isLoaded()) {\n      this.shoot()\n    } else {\n      this.reload(delta)\n    }\n  }\n\n  reload (delta) {\n    this.timeUntilReloaded -= delta\n  }\n\n  shoot () {\n    const goon = this.getClosestGoonInRange()\n    if (goon) {\n      this.game.addBullet(new Bullet(this.centerPosition, goon))\n      goon.life -= this.damage\n      this.timeUntilReloaded = this.reloadTime\n      this.canonAngle = getAngleRadians(this.centerPosition, goon.position)\n      if (goon.position.x < this.centerPosition.x) {\n        this.canonAngle = Math.PI - this.canonAngle\n      }\n    }\n  }\n\n  isLoaded () {\n    return this.timeUntilReloaded <= 0\n  }\n\n  getClosestGoonInRange () {\n    let towerCenter = this.centerPosition\n    const goonsInRange = this.game.goons\n      .map(goon => {\n        const dist = calculateDistance(towerCenter, goon.position)\n        return {goon, dist}\n      })\n      .filter(goonDist => goonDist.dist <= this.fireRange)\n      .sort((a, b) => a.dist - b.dist)\n    return goonsInRange.length > 0 ? goonsInRange[0].goon : undefined\n  }\n\n  /**\n   * Get to top-left and bottom-right points of the tower.\n   * @return {Boundaries}\n   */\n  getBoundaries () {\n    return {\n      'topLeft': this.topLeftPosition,\n      'bottomRight': this.bottomRightPosition\n    }\n  }\n}\nTower.cost = 10\nTower.sizeInCells = {\n  rows: 2,\n  cols: 2\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tower.js","import {getPointInLine, isEqualPoints} from './geometry-utils'\nimport {circle} from './utils/drawing-utils'\nimport {getGame} from './game.js'\n\nconst SPEED = 200\nconst RADIUS = 2\n\nexport default class Bullet {\n  constructor (initialPosition, targetGoon) {\n    this.id = Date.now()\n    this.position = initialPosition\n    this.targetGoon = targetGoon\n    this.game = getGame()\n  }\n\n  update (delta) {\n    const step = Math.round(SPEED * delta / 1000.0)\n    const target = this.targetGoon.position\n    this.position = getPointInLine(this.position, target, step, true)\n    if (isEqualPoints(target, this.position)) {\n      this.game.removeBullet(this)\n    }\n  }\n\n  draw (context) {\n    context.fillStyle = '#525252'\n    circle(context, this.position.x, this.position.y, RADIUS, true, false)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/bullet.js","import Goon from './goon'\nimport gameConfig from './game-config.js'\nimport {getGame} from './game.js'\n\nexport default class GoonWave {\n  constructor () {\n    this.game = getGame()\n    this.config = gameConfig.waves.slice(0)\n\n    this.currentWave = null\n    this.waveNumber = 0\n    this.timeUntilNexWave = 0\n    this.timeUntilNextSpawn = 0\n    this.goonsLeft = 0\n  }\n\n  update (delta) {\n    this.startOrStopWave(delta)\n    this.deployGoons(delta)\n  }\n\n  startOrStopWave (delta) {\n    if (this.currentWave) {\n      // no more goons, end wave\n      if (this.goonsLeft === 0) {\n        this.timeUntilNexWave = this.currentWave.intervalAfterWave\n        this.currentWave = null\n      }\n    } else {\n      this.timeUntilNexWave -= delta\n      // interval ended, start wave\n      if (this.timeUntilNexWave <= 0) {\n        if (this.config.length === 0) {\n          this.game.onWavesEnd()\n          return\n        }\n        this.currentWave = this.config.shift()\n        this.waveNumber++\n        this.timeUntilNextSpawn = this.currentWave.intervalBetweenSpawns\n        this.goonsLeft = this.currentWave.numberOfGoons\n      }\n    }\n  }\n\n  deployGoons (delta) {\n    // is wave running?\n    if (!this.currentWave || this.goonsLeft === 0) {\n      return\n    }\n    // is in interval between spawns? wait...\n    if (this.timeUntilNextSpawn > 0) {\n      this.timeUntilNextSpawn -= delta\n      return\n    }\n\n    // spawn!\n    this.timeUntilNextSpawn = this.currentWave.intervalBetweenSpawns\n    this.goonsLeft--\n    this.game.spawnGoon(this.newGoon())\n  }\n\n  newGoon () {\n    const id = Date.now()\n    const goon = new Goon(\n      id,\n      this.currentWave.goonSpeed,\n      this.currentWave.goonLife,\n      this.currentWave.goonBounty\n    )\n    return goon\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/goon-wave.js","import {imageCache} from './image-cache.js'\nimport {getPointInLine} from './geometry-utils'\nimport {getGame} from './game.js'\n\nconst GOON_IMAGE_SIZE = {\n  width: 14,\n  height: 20\n}\n\nexport default class Goon {\n  constructor (id, speed, life, bounty) {\n    this.id = id\n    this.game = getGame()\n    this.pathFinder = this.game.pathFinder\n    this.speed = speed // px/sec\n    this.fullLife = life\n    this.life = life\n    this.bounty = bounty\n\n    // store the decimals lost in the last step to maintain constant speed\n    this._residualStep = 0\n  }\n\n  setInitialCell (cell) {\n    this.cell = cell\n    this.cell.hasGoon = true\n    this.position = this.cell.getTopLeftPosition()\n  }\n\n  /**\n   * Draw the goon on position.\n   * @param  {CanvasRenderingContext2D} context - Canvas renderering context.\n   */\n  draw (context) {\n    // _Paint cell base:\n    // context.fillStyle = 'gold'\n    // const cellOrigin = this.cell.getTopLeftPosition()\n    // context.fillRect(cellOrigin.x, cellOrigin.y, CELL_EDGE_SIZE, CELL_EDGE_SIZE)\n\n    const img = imageCache['goon-1']\n    context.drawImage(img, this.position.x, this.position.y - Math.round(GOON_IMAGE_SIZE.height / 2))\n    this.drawLifeBar(context)\n  }\n\n  drawLifeBar (context) {\n    const height = 4\n    const width = 20\n    const greenWidth = Math.max(0, Math.round(width * this.life / this.fullLife))\n    const redWidth = width - greenWidth\n\n    const y = this.position.y - width\n    const greenX = this.position.x\n    const redX = this.position.x + greenWidth\n\n    context.fillStyle = 'green'\n    context.fillRect(greenX, y, greenWidth, height)\n    context.fillStyle = 'red'\n    context.fillRect(redX, y, redWidth, height)\n  }\n\n  /**\n   * Update goon state.\n   * @param  {number} delta - ms since last update.\n   */\n  update (delta) {\n    this.updatePosition(delta)\n    this.updateLife(delta)\n  }\n\n  updateLife (delta) {\n    if (this.life <= 0) {\n      this.game.killGoon(this)\n    }\n  }\n\n  updatePosition (delta) {\n    this.cell.hasGoon = false\n    const nextCell = this.pathFinder.nextCell(this.cell, 1)\n    if (!nextCell) {\n      throw new Error('Goon traped!')\n    }\n\n    // TODO: this logic is obscure, rewrite it\n    const offset = this.cell.getOffset(this.position)\n    const targetPosition = {\n      x: nextCell.getTopLeftPosition().x + offset.x,\n      y: nextCell.getTopLeftPosition().y + offset.y\n    }\n\n    const step = (this.speed * delta / 1000.0) + this._residualStep\n    const intStep = Math.floor(step)\n    this._residualStep = step - intStep\n\n    const nextPosition = getPointInLine(this.position, targetPosition, intStep)\n    // Might happen that step is not enought to change cell\n    let nextPositionCell = this.game.grid.getCellAtPosition(nextPosition)\n\n    // TODO: this is a hack to fix diagonal moves that passes through blocked cells. Rewrite it in a sane way.\n    if (nextPositionCell.blocked) {\n      nextPositionCell = this.cell\n    }\n\n    if (nextPositionCell.isTarget) {\n      this.game.goonArrived(this)\n    } else {\n      this.cell = nextPositionCell\n      this.cell.hasGoon = true\n      this.position = nextPosition\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/goon.js","export default class PathFinder {\n  constructor (grid) {\n    this.grid = grid\n    this.recalculate()\n  }\n\n  /**\n   * Recalculate all paths\n   */\n  recalculate () {\n    this.grid.reset()\n    let targetCell = this.grid.getTarget()\n    targetCell.dist = 0\n    targetCell.reachable = true\n    targetCell.isTarget = true\n    targetCell.nextStep = undefined\n    this.frontier = new PriorityQueue(false)\n    this.frontier.push(targetCell, targetCell.dist)\n\n    while (this.frontier.size() > 0) {\n      let current = this.frontier.pop()\n\n      // adjacent cells have cost of 1\n      let adjacentCells = this.grid.getAdjacentNeighbours(current)\n      for (let adjacentCell of adjacentCells) {\n        let distFromCurrent = current.dist + 1\n        if (adjacentCell.dist === undefined || adjacentCell.dist > distFromCurrent) {\n          adjacentCell.dist = distFromCurrent\n          adjacentCell.reachable = true\n          adjacentCell.nextStep = current\n          this.frontier.push(adjacentCell, distFromCurrent)\n        }\n      }\n\n      // diagonal cells have cost of 1.5\n      let diagonalCells = this.grid.getDiagonalNeighbours(current)\n      for (let diagonalCell of diagonalCells) {\n        let distFromCurrent = current.dist + 1.5\n        if (diagonalCell.dist === undefined || diagonalCell.dist > distFromCurrent) {\n          diagonalCell.dist = distFromCurrent\n          diagonalCell.reachable = true\n          diagonalCell.nextStep = current\n          this.frontier.push(diagonalCell, distFromCurrent)\n        }\n      }\n    }\n  }\n\n  /**\n   * Get the next position in the path to the target.\n   * @param  {Point} currentPosition - Current position.\n   * @param  {Number} steps - Number of steps to perform.\n   * @return {Point}\n   */\n  nextCell (currentCell, steps = 1) {\n    let nextCell = currentCell.nextStep\n    while (--steps > 0 && nextCell) {\n      nextCell = nextCell.nextStep\n    }\n    return nextCell\n  }\n}\n\nclass PriorityQueue {\n  constructor (higherPriorirtyFirst = true) {\n    this.data = []\n    this.higherPriorirtyFirst = higherPriorirtyFirst\n  }\n\n  push (value, priority) {\n    let index = 0\n    while (\n      this.data.length > index &&\n      !this.shouldComeFirst(priority, this.data[index].priority)\n    ) {\n      index++\n    }\n    this.data.splice(index, 0, {value: value, priority: priority})\n  }\n\n  pop () {\n    return this.data.shift().value\n  }\n\n  size () {\n    return this.data.length\n  }\n\n  shouldComeFirst (priorityA, priorityB) {\n    return this.higherPriorirtyFirst ? priorityA > priorityB : priorityB > priorityA\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/path-finder.js","import {getGame} from './game.js'\n\nexport default class ScoreBoard {\n  constructor (containerEl) {\n    this.game = getGame()\n    this.cashDisplay = containerEl.querySelector('#cashDisplay')\n    this.goonsInsideDisplay = containerEl.querySelector('#goonsInsideDisplay')\n    this.waveNumberDisplay = containerEl.querySelector('#waveNumberDisplay')\n    this.messageDisplay = containerEl.querySelector('#messageDisplay')\n    this.update()\n  }\n\n  updateCash (cash) {\n    if (this.cash !== cash) {\n      this.cash = cash\n      this.cashDisplay.textContent = cash\n    }\n  }\n\n  updateGoonsInside (goonsInside) {\n    if (this.goonsInside !== goonsInside) {\n      this.goonsInside = goonsInside\n      this.goonsInsideDisplay.textContent = goonsInside\n    }\n  }\n\n  updateWaveNumber (waveNumber) {\n    if (this.waveNumber !== waveNumber) {\n      this.waveNumber = waveNumber\n      this.waveNumberDisplay.textContent = waveNumber\n    }\n  }\n\n  updateMessage (message) {\n    this.messageDisplay.textContent = message\n  }\n\n  update () {\n    this.updateCash(this.game.cash)\n    this.updateGoonsInside(this.game.goonsInside)\n    this.updateWaveNumber(this.game.goonWave.waveNumber)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/score-board.js","/* global requestAnimationFrame */\nimport {getGame} from './game.js'\n\n/**\n * @typedef {Object} Point\n * @property {number} x - The X Coordinate.\n * @property {number} y - The Y Coordinate.\n */\n\nimport {CELL_EDGE_SIZE} from './cell'\n\nclass Renderer {\n  /**\n   * Grid constructor\n   * @param  {Game} game - Main game controller.\n   * @param  {HTMLCanvasElement} canvas - HTML canvas.\n   */\n  constructor (canvas) {\n    this.canvas = canvas\n    this.game = getGame()\n    this.canvas.width = this.game.grid.canvasSize.width\n    this.canvas.height = this.game.grid.canvasSize.height\n    this.context = this.canvas.getContext('2d')\n    this.animationId = null\n\n    // bind events\n    this.canvas.onclick = this.onCanvasClick.bind(this)\n    this.canvas.onmousemove = this.onMouseMove.bind(this)\n    this.canvas.onmouseout = this.onMouseMove.bind(this)\n  }\n\n  /**\n   * Start the game loop.\n   */\n  start () {\n    this.lastTick = Date.now()\n    this.animationId = requestAnimationFrame(this.tick.bind(this))\n  }\n\n  stop () {\n    this.animationId = null\n  }\n\n  isRunning () {\n    return this.animationId !== null\n  }\n\n  /**\n   * Update state, render and restart the game loop every X ms.\n   */\n  tick () {\n    if (!this.animationId) {\n      return\n    }\n\n    const now = Date.now()\n    const delta = (now - this.lastTick)\n\n    this.game.update(delta)\n\n    if (!this.animationId) {\n      return\n    }\n    this.lastTick = now\n\n    this.render()\n    this.animationId = requestAnimationFrame(this.tick.bind(this))\n  }\n\n  /**\n   * Draw the grid.\n   */\n  render () {\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height)\n    // 0: highlight\n    if (this.game.highlight) {\n      let stroke = 'green'\n      let fill = 'lightgreen'\n      if (!this.game.highlight.valid) {\n        stroke = 'red'\n        fill = 'lightcoral'\n      }\n      this._paintBoundaries(this.game.highlight.boundaries, stroke, fill)\n    }\n\n    // TODO: Merge drawables\n\n    // 1st layer: towers\n    this.game.towers.forEach((tower) => {\n      tower.draw(this.context)\n    })\n\n    // 2nd layer: goons\n    this.game.goons.forEach((goon) => {\n      goon.draw(this.context)\n    })\n\n    // 3rd layer: bullets\n    this.game.bullets.forEach((bullet) => {\n      bullet.draw(this.context)\n    })\n\n    if (this.game.drawGrid) {\n      this.game.grid.draw(this.context)\n    }\n  }\n\n  /**\n   * DEBUG: paint a blue square on blocked cells\n   */\n  paintBlockedCells () {\n    this.context.fillStyle = 'lightskyblue'\n    this.context.strokeStyle = 'azure'\n    const blockedCells = this.game.grid.getCells().filter((cell) => cell.blocked)\n    blockedCells.forEach((cell) => {\n      let position = cell.getTopLeftPosition()\n      this.context.strokeRect(position.x, position.y, CELL_EDGE_SIZE, CELL_EDGE_SIZE)\n      this.context.fillRect(position.x, position.y, CELL_EDGE_SIZE, CELL_EDGE_SIZE)\n    })\n\n    this.game.towers.forEach((tower) => {\n      this._paintBoundaries(tower.getBoundaries(), 'red')\n    })\n  }\n\n  /**\n   * Trigger onclick on canvas click.\n   * @param {MouseEvent} event\n   */\n  onCanvasClick (event) {\n    var mousePosition = {\n      x: event.clientX - event.target.offsetLeft,\n      y: event.clientY - event.target.offsetTop\n    }\n    this.game.onUserClick(mousePosition)\n  }\n\n  onMouseMove (event) {\n    var mousePosition = {\n      x: event.clientX - event.target.offsetLeft,\n      y: event.clientY - event.target.offsetTop\n    }\n    this.game.onMouseMove(mousePosition)\n  }\n\n  _paintBoundaries (boundaries, stroke, fill) {\n    let position = boundaries.topLeft\n    let w = boundaries.bottomRight.x - position.x\n    let h = boundaries.bottomRight.y - position.y\n    if (stroke) {\n      this.context.strokeStyle = stroke\n      this.context.strokeRect(position.x, position.y, w, h)\n    }\n    if (fill) {\n      this.context.fillStyle = fill\n      this.context.fillRect(position.x, position.y, w, h)\n    }\n  }\n}\n\nexport default Renderer\n\n\n\n// WEBPACK FOOTER //\n// ./src/renderer.js"],"sourceRoot":""}