{"version":3,"sources":["webpack:///webpack/bootstrap b62775dea8ab6137dfe4","webpack:///./src/image-cache.js","webpack:///./src/cell.js","webpack:///./src/index.js","webpack:///./src/game.js","webpack:///./src/grid.js","webpack:///./src/coord.js","webpack:///./src/tower.js","webpack:///./src/goon.js","webpack:///./src/path-finder.js","webpack:///./src/renderer.js"],"names":["loadImageCache","imageUrls","imageCache","onLoadComplete","key","url","img","Image","onload","Object","keys","length","src","CELL_EDGE_SIZE","Cell","row","col","coord","reachable","dist","undefined","nextStep","blocked","equals","x","Math","round","y","init","canvas","document","getElementById","game","renderer","start","Game","grid","width","height","pathFinder","towers","goons","highlight","spawnedGoons","intervalId","window","setInterval","spawnGoon","bind","position","towerCells","getCellsAround","rows","cols","some","cell","hasGoon","forEach","recalculate","goonCells","map","goon","trapped","towerBoundaries","_getCellsBoudaries","tower","push","mousePosition","isOcuppied","boundaries","valid","NUMBER_OF_GOONS_TO_SPAWN","spawnCoords","floor","random","rowCount","spawnCell","get","id","Date","now","clearInterval","index","findIndex","aGoon","splice","delta","update","updateHighlight","cells","topLeft","getTopLeftPosition","bottomRight","getBottomRightPosition","Grid","canvasSize","colCount","Array","allCells","concat","apply","any","filter","_isOutOfGrid","point","topLeftCell","getCellAtPosition","bottomRightCell","center","topRow","bottomRow","leftCol","rightCol","Coord","TOWER_SIZE","Tower","topLeftPosition","context","fillStyle","strokeStyle","fillRect","strokeRect","bottomRightPosition","Goon","initialCell","speed","drawImage","nextCell","removeGoon","stepSize","targetPosition","getCenterPosition","nextPosition","calculateNextPosition","nextPositionCell","current","target","dx","dy","hyp","sqrt","pow","sin","cos","dyStep","dxStep","nextX","ceil","nextY","PathFinder","reset","targetCell","getTarget","frontier","shift","neighboursCells","getUnvisitedNeighboursCells","neighbourCell","currentCell","steps","Renderer","getContext","onclick","onCanvasClick","onmousemove","onMouseMove","onmouseout","lastTick","animationId","requestAnimationFrame","tick","render","clearRect","stroke","fill","_paintBoundaries","draw","blockedCells","getCells","getBoundaries","event","clientX","offsetLeft","clientY","offsetTop","onUserClick","w","h"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b62775dea8ab6137dfe4","/* global Image */\n\n/**\n * List of images to load.\n * @type {Object}\n */\nconst imageUrls = {\n  'tower-1': '../images/tower-1.png',\n  'goon-1': '../images/goon-1.png'\n}\n\n/**\n * Global image cache.\n * @type {Object}\n */\nexport const imageCache = {}\n\n/**\n * Load the images on the cache and call the callback when ready.\n * @param  {function} onLoadComplete\n */\nexport function loadImageCache (onLoadComplete) {\n  for (let key in imageUrls) {\n    let url = imageUrls[key]\n    let img = new Image()\n    img.onload = () => {\n      imageCache[key] = img\n      if (Object.keys(imageCache).length === Object.keys(imageUrls).length) {\n        onLoadComplete()\n      }\n    }\n    img.src = url\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/image-cache.js","/**\n * @typedef {Object} Point\n * @property {number} x - The X Coordinate.\n * @property {number} y - The Y Coordinate.\n */\n\nimport Coord from './coord'\n\n/**\n * Size of the (square) cell edge.\n * @type {number}\n */\nexport const CELL_EDGE_SIZE = 20\n\n/**\n * Grid cell.\n */\nexport class Cell {\n  /**\n   * @param {number} row - Row number.\n   * @param {number} col - Column number.\n   */\n  constructor (row, col) {\n    this.coord = new Coord(row, col)\n    this.reachable = false\n    this.dist = undefined\n    this.nextStep = undefined\n    this.blocked = false\n  }\n\n  /**\n   * Check cell coordinates.\n   * @param {Coord} coord\n   * @return {Boolean}\n   */\n  isOnCoord (coord) {\n    return this.coord.equals(coord)\n  }\n\n  /**\n   * Get the position of the center of the cell in pixels.\n   * @return {Point}\n   */\n  getCenterPosition () {\n    let x = Math.round((this.coord.col * CELL_EDGE_SIZE) + (CELL_EDGE_SIZE / 2))\n    let y = Math.round((this.coord.row * CELL_EDGE_SIZE) + (CELL_EDGE_SIZE / 2))\n    return {x, y}\n  }\n\n  /**\n   * Get the top-left position of the cell in pixels.\n   * @return {Point}\n   */\n  getTopLeftPosition () {\n    let x = this.coord.col * CELL_EDGE_SIZE\n    let y = this.coord.row * CELL_EDGE_SIZE\n    return {x, y}\n  }\n\n  /**\n   * Get the bottom-right position of the cell in pixels.\n   * @return {Point}\n   */\n  getBottomRightPosition () {\n    let x = (this.coord.col + 1) * CELL_EDGE_SIZE\n    let y = (this.coord.row + 1) * CELL_EDGE_SIZE\n    return {x, y}\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/cell.js","import {loadImageCache} from './image-cache.js'\nimport Game from './game.js'\nimport Renderer from './renderer.js'\n\nloadImageCache(init)\n\nfunction init () {\n  const canvas = document.getElementById('canvas')\n  const game = new Game()\n  const renderer = new Renderer(canvas, game)\n  renderer.start()\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/**\n * @typedef {Object} Point\n * @property {number} x - The X Coordinate.\n * @property {number} y - The Y Coordinate.\n */\n\nimport Grid from './grid'\nimport {Tower, TOWER_SIZE} from './tower'\nimport Goon from './goon'\nimport PathFinder from './path-finder'\n\nexport default class Game {\n  constructor () {\n    this.grid = new Grid({width: 1000, height: 600})\n    this.pathFinder = new PathFinder(this.grid)\n    this.towers = []\n    this.goons = []\n    this.highlight = undefined\n    this.spawnedGoons = 0\n\n    this.intervalId = window.setInterval(this.spawnGoon.bind(this), 800)\n  }\n\n  /**\n   * When a user click a cell.\n   * @param  {Point} position - Cell upper-left position.\n   */\n  onUserClick (position) {\n    const towerCells = this.grid.getCellsAround(position, TOWER_SIZE.rows, TOWER_SIZE.cols)\n    // occupied ?\n    if (!towerCells || towerCells.some(cell => cell.blocked || cell.hasGoon)) {\n      return\n    }\n    // 1: block\n    towerCells.forEach(cell => { cell.blocked = true })\n    // 2: recalculate paths\n    this.pathFinder.recalculate()\n    // 3: check if there is any goon trapped\n    const goonCells = this.goons.map(goon => goon.cell)\n    // TODO: check the spawn locations as well\n    const trapped = goonCells.some(cell => !cell.reachable)\n    // 4: if trapped, rollback\n    if (trapped) {\n      towerCells.forEach(cell => { cell.blocked = false })\n      this.pathFinder.recalculate()\n      return\n    }\n\n    const towerBoundaries = this._getCellsBoudaries(towerCells)\n    const tower = new Tower(towerBoundaries)\n    this.towers.push(tower)\n  }\n\n  onMouseMove (position) {\n    this.mousePosition = position\n  }\n\n  updateHighlight () {\n    if (!this.mousePosition) {\n      return\n    }\n    const towerCells = this.grid.getCellsAround(this.mousePosition, TOWER_SIZE.rows, TOWER_SIZE.cols)\n    if (!towerCells) {\n      this.highlight = undefined\n      return\n    }\n    const towerBoundaries = this._getCellsBoudaries(towerCells)\n    const isOcuppied = towerCells.some(cell => cell.blocked || cell.hasGoon)\n    this.highlight = {\n      boundaries: towerBoundaries,\n      valid: !isOcuppied\n    }\n  }\n\n  /**\n   * Spawn a new goon.\n   */\n  spawnGoon () {\n    const NUMBER_OF_GOONS_TO_SPAWN = 10\n    // TODO: Use fixed spawn locations\n    const spawnCoords = {\n      row: Math.floor(Math.random() * this.grid.rowCount),\n      col: 0\n    }\n    const spawnCell = this.grid.get(spawnCoords.row, spawnCoords.col)\n    const id = Date.now()\n    const goon = new Goon(id, spawnCell, this, this.pathFinder)\n    this.goons.push(goon)\n    if (++this.spawnedGoons >= NUMBER_OF_GOONS_TO_SPAWN) {\n      window.clearInterval(this.intervalId)\n    }\n  }\n\n  removeGoon (goon) {\n    const index = this.goons.findIndex((aGoon) => aGoon.id === goon.id)\n    if (index >= 0) {\n      this.goons.splice(index, 1)\n    }\n  }\n\n  /**\n   * Update the state of the game entities.\n   * @param  {number} delta - ms since last update.\n   */\n  update (delta) {\n    this.goons.forEach((goon) => goon.update(delta))\n    this.updateHighlight()\n  }\n\n  _getCellsBoudaries (cells) {\n    return {\n      topLeft: cells[0].getTopLeftPosition(),\n      bottomRight: cells[cells.length - 1].getBottomRightPosition()\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/game.js","/**\n * @typedef {Object} CellData\n * @property {number} x - The X Coordinate.\n * @property {number} y - The Y Coordinate.\n * @property {number} dist - Number of steps until target.\n * @property {number} nextStep - Next cell on the path to target.\n */\n\nimport {Cell, CELL_EDGE_SIZE} from './cell'\n\nexport default class Grid {\n  constructor (canvasSize) {\n    this.canvasSize = canvasSize\n    this.colCount = Math.floor(canvasSize.width / CELL_EDGE_SIZE)\n    this.rowCount = Math.floor(canvasSize.height / CELL_EDGE_SIZE)\n    this.init()\n  }\n\n  init () {\n    this.grid = new Array(this.rowCount)\n    for (var row = 0; row < this.rowCount; row++) {\n      this.grid[row] = Array(this.colCount)\n      for (var col = 0; col < this.colCount; col++) {\n        this.grid[row][col] = new Cell(row, col)\n      }\n    }\n    // flatten all cells on a single array\n    this.allCells = [].concat.apply([], this.grid)\n  }\n\n  /**\n   * Reset grid data.\n   */\n  reset () {\n    for (var row = 0; row < this.rowCount; row++) {\n      for (var col = 0; col < this.colCount; col++) {\n        this.grid[row][col].reachable = false\n        this.grid[row][col].dist = undefined\n        this.grid[row][col].nextStep = undefined\n      }\n    }\n  }\n\n  /**\n   * Get cell at position.\n   * @param  {number} x - X coordinate.\n   * @param  {number} y - Y coordinate.\n   * @return {Cell}\n   */\n  get (row, col) {\n    try {\n      return this.grid[row][col]\n    } catch (any) {\n      return undefined\n    }\n  }\n\n  /**\n   * Get target cell.\n   * @return {Cell}\n   */\n  getTarget () {\n    let row = Math.round(this.rowCount / 2)\n    let col = this.colCount - 1\n    return this.get(row, col)\n  }\n\n  /**\n   * Get the unvisited neighbour cells of the position.\n   * @param  {Cell} cell\n   * @return {Cell[]}\n   */\n  getUnvisitedNeighboursCells (cell) {\n    const coord = cell.coord\n    const grid = this\n    return [\n      {row: coord.row, col: coord.col - 1},\n      {row: coord.row - 1, col: coord.col},\n      {row: coord.row, col: coord.col + 1},\n      {row: coord.row + 1, col: coord.col}\n    ].filter(coord => (\n      !this._isOutOfGrid(coord)\n    )).map(coord => (\n      grid.get(coord.row, coord.col)\n    )).filter(cell => (\n      cell.dist === undefined &&\n      !cell.blocked\n    ))\n  }\n\n  /**\n   * Get the cell that contains the provided position.\n   * @param  {Point} point\n   * @return {Cell}\n   */\n  getCellAtPosition (point) {\n    if (point.x < 0 ||\n      point.x > this.canvasSize.width ||\n      point.y < 0 ||\n      point.y > this.canvasSize.height\n    ) {\n      return undefined\n    }\n    const col = Math.floor(point.x / CELL_EDGE_SIZE)\n    const row = Math.floor(point.y / CELL_EDGE_SIZE)\n    return this.get(row, col)\n  }\n\n  /**\n   * Get the cells that contains the boundaries area.\n   * @param  {Boundaries} boundaries\n   * @return {Cell[]}\n   */\n  getCellsInBoundaries (boundaries) {\n    const topLeftCell = this.getCellAtPosition(boundaries.topLeft)\n    const bottomRightCell = this.getCellAtPosition(boundaries.bottomRight)\n    const cells = []\n    for (let row = topLeftCell.coord.row; row <= bottomRightCell.coord.row; row++) {\n      for (let col = topLeftCell.coord.col; col <= bottomRightCell.coord.col; col++) {\n        cells.push(this.get(row, col))\n      }\n    }\n    return cells\n  }\n\n  /**\n   * Return an array containing all cells.\n   * @return {Cell[]}\n   */\n  getCells () {\n    return this.allCells\n  }\n\n  /**\n   * Return a block of cells containg the point approximately in the center\n   * @param  {Point} point - Point contained in the block,\n   * @param  {number} rowCount - Number of rows in the block.\n   * @param  {number} colCount - Number of cols in the block.\n   * @return {Cell[]}\n   */\n  getCellsAround (point, rowCount, colCount) {\n    const center = this.getCellAtPosition(point)\n    if (!center) {\n      return undefined\n    }\n    const topRow = center.coord.row - Math.floor(rowCount / 2)\n    const bottomRow = topRow + rowCount - 1\n    const leftCol = center.coord.col - Math.floor(colCount / 2)\n    const rightCol = leftCol + colCount - 1\n    if (this._isOutOfGrid({row: topRow, col: leftCol}) ||\n      this._isOutOfGrid({row: bottomRow, col: rightCol})) {\n      return undefined\n    }\n\n    const cells = []\n    for (let row = topRow; row <= bottomRow; row++) {\n      for (let col = leftCol; col <= rightCol; col++) {\n        cells.push(this.get(row, col))\n      }\n    }\n    return cells\n  }\n\n  /**\n   * Check if a coordinate is out of the grid.\n   * @param  {Coord} coord\n   * @return {Boolean}       [description]\n   */\n  _isOutOfGrid (coord) {\n    return coord.col < 0 ||\n      coord.col >= this.colCount ||\n      coord.row < 0 ||\n      coord.row >= this.rowCount\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/grid.js","export default class Coord {\n  /**\n   * @param {number} row\n   * @param {number} col\n   */\n  constructor (row, col) {\n    this.row = row\n    this.col = col\n  }\n\n  /**\n   * Compare two coordinates.\n   * @param {Coord} coord\n   * @return {Boolean}\n   */\n  equals (coord) {\n    return coord && this.row === coord.row && this.col === coord.col\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/coord.js","/**\n * @typedef {Object} Point\n * @property {number} x - The X Coordinate.\n * @property {number} y - The Y Coordinate.\n */\n\n/**\n * @typedef {Object} Boundaries\n * @property {Point} topLeft - top-left point of the object.\n * @property {Point} bottomRight - bottom-right point of the object.\n */\nexport const TOWER_SIZE = {\n  rows: 2,\n  cols: 2\n}\n\nexport class Tower {\n  constructor (boundaries) {\n    this.topLeftPosition = boundaries.topLeft\n    this.width = boundaries.bottomRight.x - boundaries.topLeft.x\n    this.height = boundaries.bottomRight.y - boundaries.topLeft.y\n  }\n\n  /**\n   * Draw the tower on position.\n   * @param  {CanvasRenderingContext2D} context - Canvas renderering context.\n   */\n  draw (context) {\n    context.fillStyle = 'azure'\n    context.strokeStyle = 'lightskyblue'\n    context.fillRect(this.topLeftPosition.x, this.topLeftPosition.y, this.width, this.height)\n    context.strokeRect(this.topLeftPosition.x, this.topLeftPosition.y, this.width, this.height)\n  }\n\n  /**\n   * Get to top-left and bottom-right points of the tower.\n   * @return {Boundaries}\n   */\n  getBoundaries () {\n    return {\n      'topLeft': this.topLeftPosition,\n      'bottomRight': this.bottomRightPosition\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tower.js","import {imageCache} from './image-cache.js'\n\nexport default class Goon {\n  constructor (id, initialCell, game, pathFinder) {\n    this.id = id\n    this.game = game\n    this.pathFinder = pathFinder\n    this.cell = initialCell\n    this.cell.hasGoon = true\n    this.position = this.cell.getTopLeftPosition()\n    this.speed = 60 // px/sec\n  }\n\n  /**\n   * Draw the goon on position.\n   * @param  {CanvasRenderingContext2D} context - Canvas renderering context.\n   */\n  draw (context) {\n    var img = imageCache['goon-1']\n    context.drawImage(img, this.position.x, this.position.y)\n  }\n\n  /**\n   * Update goon state.\n   * @param  {number} delta - ms since last update.\n   */\n  update (delta) {\n    this.cell.hasGoon = false\n    const nextCell = this.pathFinder.nextCell(this.cell, 1)\n    if (!nextCell) {\n      this.game.removeGoon(this)\n      return\n    }\n    const stepSize = this.speed * delta / 1000.0\n    // TODO: change path from [pos -> center2] to [center1 -> center2 - offset(pos, center1)]\n    // this will make the size of path constant.\n    const targetPosition = nextCell.getCenterPosition()\n    const nextPosition = this.calculateNextPosition(this.position, targetPosition, stepSize)\n    const nextPositionCell = this.game.grid.getCellAtPosition(nextPosition)\n\n    if (nextPositionCell) {\n      this.cell = nextPositionCell\n      this.cell.hasGoon = true\n      this.position = nextPosition\n    } else {\n      this.game.removeGoon(this)\n    }\n  }\n\n  /**\n   * Given the current and target position and the size of a step, calculate the new position after one step.\n   * @param  {Point} current - Current position.\n   * @param  {Point} target - Target position.\n   * @param  {number} stepSize - Size of the step (in pixels).\n   * @return {Point} Position after one step.\n   */\n  calculateNextPosition (current, target, stepSize) {\n    // TODO: check this logic for negative dy\n    const dx = target.x - current.x\n    const dy = target.y - current.y\n    const hyp = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2))\n    const sin = dy / hyp\n    const cos = dx / hyp\n\n    const dyStep = sin * stepSize\n    const dxStep = cos * stepSize\n\n    const nextX = Math.ceil(current.x + dxStep)\n    const nextY = Math.ceil(current.y + dyStep)\n    return {x: nextX, y: nextY}\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/goon.js","\nexport default class PathFinder {\n  constructor (grid) {\n    this.grid = grid\n    this.recalculate()\n  }\n\n  /**\n   * Recalculate all paths\n   */\n  recalculate () {\n    this.grid.reset()\n    let targetCell = this.grid.getTarget()\n    targetCell.dist = 0\n    targetCell.reachable = true\n    targetCell.nextStep = undefined\n    this.frontier = [targetCell]\n\n    while (this.frontier.length > 0) {\n      let current = this.frontier.shift()\n      let neighboursCells = this.grid.getUnvisitedNeighboursCells(current)\n      for (let neighbourCell of neighboursCells) {\n        neighbourCell.dist = current.dist + 1\n        neighbourCell.reachable = true\n        neighbourCell.nextStep = current\n        this.frontier.push(neighbourCell)\n      }\n    }\n  }\n\n  /**\n   * Get the next position in the path to the target.\n   * @param  {Point} currentPosition - Current position.\n   * @param  {Number} steps - Number of steps to perform.\n   * @return {Point}\n   */\n  nextCell (currentCell, steps = 1) {\n    let nextCell = currentCell.nextStep\n    while (--steps > 0 && nextCell) {\n      nextCell = nextCell.nextStep\n    }\n    return nextCell\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/path-finder.js","/* global requestAnimationFrame */\n\n/**\n * @typedef {Object} Point\n * @property {number} x - The X Coordinate.\n * @property {number} y - The Y Coordinate.\n */\n\nimport {CELL_EDGE_SIZE} from './cell'\n\nclass Renderer {\n  /**\n   * Grid constructor\n   * @param  {HTMLCanvasElement} canvas - HTML canvas.\n   */\n  constructor (canvas, game) {\n    this.canvas = canvas\n    this.game = game\n    this.canvas.width = this.game.grid.canvasSize.width\n    this.canvas.height = this.game.grid.canvasSize.height\n    this.context = this.canvas.getContext('2d')\n\n    // bind events\n    this.canvas.onclick = this.onCanvasClick.bind(this)\n    this.canvas.onmousemove = this.onMouseMove.bind(this)\n    this.canvas.onmouseout = this.onMouseMove.bind(this)\n  }\n\n  /**\n   * Start the game loop.\n   */\n  start () {\n    this.lastTick = Date.now()\n    this.animationId = requestAnimationFrame(this.tick.bind(this))\n  }\n\n  /**\n   * Update state, render and restart the game loop every X ms.\n   */\n  tick () {\n    const now = Date.now()\n    const delta = (now - this.lastTick)\n\n    this.game.update(delta)\n    this.lastTick = now\n\n    this.render()\n    this.animationId = requestAnimationFrame(this.tick.bind(this))\n  }\n\n  /**\n   * Draw the grid.\n   */\n  render () {\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height)\n    // 0: highlight\n    if (this.game.highlight) {\n      let stroke = 'green'\n      let fill = 'lightgreen'\n      if (!this.game.highlight.valid) {\n        stroke = 'red'\n        fill = 'lightcoral'\n      }\n      this._paintBoundaries(this.game.highlight.boundaries, stroke, fill)\n    }\n\n    // 1st layer: towers\n    this.game.towers.forEach((tower) => {\n      tower.draw(this.context)\n    })\n\n    // 2nd layer: goons\n    this.game.goons.forEach((goon) => {\n      goon.draw(this.context)\n    })\n  }\n\n  /**\n   * DEBUG: paint a blue square on blocked cells\n   */\n  paintBlockedCells () {\n    this.context.fillStyle = 'lightskyblue'\n    this.context.strokeStyle = 'azure'\n    const blockedCells = this.game.grid.getCells().filter((cell) => cell.blocked)\n    blockedCells.forEach((cell) => {\n      let position = cell.getTopLeftPosition()\n      this.context.strokeRect(position.x, position.y, CELL_EDGE_SIZE, CELL_EDGE_SIZE)\n      this.context.fillRect(position.x, position.y, CELL_EDGE_SIZE, CELL_EDGE_SIZE)\n    })\n\n    this.game.towers.forEach((tower) => {\n      this._paintBoundaries(tower.getBoundaries(), 'red')\n    })\n  }\n\n  /**\n   * Trigger onclick on canvas click.\n   * @param {MouseEvent} event\n   */\n  onCanvasClick (event) {\n    var mousePosition = {\n      x: event.clientX - event.target.offsetLeft,\n      y: event.clientY - event.target.offsetTop\n    }\n    this.game.onUserClick(mousePosition)\n  }\n\n  onMouseMove (event) {\n    var mousePosition = {\n      x: event.clientX - event.target.offsetLeft,\n      y: event.clientY - event.target.offsetTop\n    }\n    this.game.onMouseMove(mousePosition)\n  }\n\n  _paintBoundaries (boundaries, stroke, fill) {\n    let position = boundaries.topLeft\n    let w = boundaries.bottomRight.x - position.x\n    let h = boundaries.bottomRight.y - position.y\n    if (stroke) {\n      this.context.strokeStyle = stroke\n      this.context.strokeRect(position.x, position.y, w, h)\n    }\n    if (fill) {\n      this.context.fillStyle = fill\n      this.context.fillRect(position.x, position.y, w, h)\n    }\n  }\n}\n\nexport default Renderer\n\n\n\n// WEBPACK FOOTER //\n// ./src/renderer.js"],"sourceRoot":""}