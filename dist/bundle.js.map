{"version":3,"sources":["webpack:///webpack/bootstrap af55fc448f790282a841","webpack:///./src/cell.js","webpack:///./src/image-cache.js","webpack:///./src/index.js","webpack:///./src/game.js","webpack:///./src/grid.js","webpack:///./src/coord.js","webpack:///./src/tower.js","webpack:///./src/goon.js","webpack:///./src/path-finder.js","webpack:///./src/random.js","webpack:///./src/renderer.js"],"names":["CELL_EDGE_SIZE","Cell","row","col","coord","reachable","dist","undefined","nextStep","blocked","equals","x","Math","round","y","pointInCell","zero","getTopLeftPosition","loadImageCache","imageUrls","imageCache","onLoadComplete","key","url","img","Image","onload","Object","keys","length","src","init","canvas","document","getElementById","game","renderer","start","initCtrlPanel","onclick","e","stopPropagation","preventDefault","value","spawnGoon","speed","parseInt","goons","forEach","goon","isRunning","stop","Game","grid","width","height","pathFinder","towers","highlight","spawnedGoons","spawnCells","getSpawnCells","intervalId","window","setInterval","spawnGoons","bind","position","towerCells","getCellsAround","rows","cols","some","cell","hasGoon","recalculate","doNotTrapCells","map","concat","isInvalidPosition","towerBoundaries","_getCellsBoudaries","tower","push","mousePosition","isOcuppied","boundaries","valid","NUMBER_OF_GOONS_TO_SPAWN","location","getRandomElementFromArray","clearInterval","spawnCell","get","id","Date","now","index","findIndex","aGoon","splice","delta","update","updateHighlight","middle","rowCount","count","min","cells","topLeft","bottomRight","getBottomRightPosition","Grid","canvasSize","colCount","floor","Array","allCells","apply","any","filter","_isOutOfGrid","point","topLeftCell","getCellAtPosition","bottomRightCell","center","topRow","bottomRow","leftCol","rightCol","Coord","TOWER_SIZE","Tower","topLeftPosition","context","fillStyle","strokeStyle","fillRect","strokeRect","bottomRightPosition","GOON_IMAGE_SIZE","Goon","initialCell","_residualStep","drawImage","nextCell","removeGoon","offset","getOffset","targetPosition","step","intStep","nextPosition","calculateNextPosition","nextPositionCell","current","target","stepSize","dx","dy","hyp","sqrt","pow","sin","cos","dyStep","dxStep","nextX","nextY","PathFinder","reset","targetCell","getTarget","frontier","shift","neighboursCells","getUnvisitedNeighboursCells","neighbourCell","currentCell","steps","Random","yesChance","random","max","ceil","array","getRandomIntExclusive","currentIndex","temporaryValue","randomIndex","Renderer","getContext","animationId","onCanvasClick","onmousemove","onMouseMove","onmouseout","lastTick","requestAnimationFrame","tick","render","clearRect","stroke","fill","_paintBoundaries","draw","blockedCells","getCells","getBoundaries","event","clientX","offsetLeft","clientY","offsetTop","onUserClick","w","h"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;;qjBC7DA;;;;;;AAMA;;;;;;;;AAEA;;;;AAIO,IAAMA,0CAAiB,EAAvB;;AAEP;;;;IAGaC,I,WAAAA,I;AACX;;;;AAIA,gBAAaC,GAAb,EAAkBC,GAAlB,EAAuB;AAAA;;AACrB,SAAKC,KAAL,GAAa,oBAAUF,GAAV,EAAeC,GAAf,CAAb;AACA,SAAKE,SAAL,GAAiB,KAAjB;AACA,SAAKC,IAAL,GAAYC,SAAZ;AACA,SAAKC,QAAL,GAAgBD,SAAhB;AACA,SAAKE,OAAL,GAAe,KAAf;AACD;;AAED;;;;;;;;;8BAKWL,K,EAAO;AAChB,aAAO,KAAKA,KAAL,CAAWM,MAAX,CAAkBN,KAAlB,CAAP;AACD;;AAED;;;;;;;wCAIqB;AACnB,UAAIO,IAAIC,KAAKC,KAAL,CAAY,KAAKT,KAAL,CAAWD,GAAX,GAAiBH,cAAlB,GAAqCA,iBAAiB,CAAjE,CAAR;AACA,UAAIc,IAAIF,KAAKC,KAAL,CAAY,KAAKT,KAAL,CAAWF,GAAX,GAAiBF,cAAlB,GAAqCA,iBAAiB,CAAjE,CAAR;AACA,aAAO,EAACW,IAAD,EAAIG,IAAJ,EAAP;AACD;;AAED;;;;;;;yCAIsB;AACpB,UAAIH,IAAI,KAAKP,KAAL,CAAWD,GAAX,GAAiBH,cAAzB;AACA,UAAIc,IAAI,KAAKV,KAAL,CAAWF,GAAX,GAAiBF,cAAzB;AACA,aAAO,EAACW,IAAD,EAAIG,IAAJ,EAAP;AACD;;AAED;;;;;;;6CAI0B;AACxB,UAAIH,IAAI,CAAC,KAAKP,KAAL,CAAWD,GAAX,GAAiB,CAAlB,IAAuBH,cAA/B;AACA,UAAIc,IAAI,CAAC,KAAKV,KAAL,CAAWF,GAAX,GAAiB,CAAlB,IAAuBF,cAA/B;AACA,aAAO,EAACW,IAAD,EAAIG,IAAJ,EAAP;AACD;;AAED;;;;;;;;8BAKWC,W,EAAa;AACtB,UAAMC,OAAO,KAAKC,kBAAL,EAAb;AACA,aAAO;AACLN,WAAGI,YAAYJ,CAAZ,GAAgBK,KAAKL,CADnB;AAELG,WAAGC,YAAYD,CAAZ,GAAgBE,KAAKF;AAFnB,OAAP;AAID;;;;;;;;;;;;;;;;QC3DaI,c,GAAAA,c;AArBhB;;AAEA;;;;AAIA,IAAMC,YAAY;AAChB,aAAW,uBADK;AAEhB,YAAU;;AAGZ;;;;AALkB,CAAlB,CASO,IAAMC,kCAAa,EAAnB;;AAEP;;;;AAIO,SAASF,cAAT,CAAyBG,cAAzB,EAAyC;AAAA,6BACrCC,GADqC;AAE5C,QAAIC,MAAMJ,UAAUG,GAAV,CAAV;AACA,QAAIE,MAAM,IAAIC,KAAJ,EAAV;AACAD,QAAIE,MAAJ,GAAa,YAAM;AACjBN,iBAAWE,GAAX,IAAkBE,GAAlB;AACA,UAAIG,OAAOC,IAAP,CAAYR,UAAZ,EAAwBS,MAAxB,KAAmCF,OAAOC,IAAP,CAAYT,SAAZ,EAAuBU,MAA9D,EAAsE;AACpER;AACD;AACF,KALD;AAMAG,QAAIM,GAAJ,GAAUP,GAAV;AAV4C;;AAC9C,OAAK,IAAID,GAAT,IAAgBH,SAAhB,EAA2B;AAAA,UAAlBG,GAAkB;AAU1B;AACF,C;;;;;;;;;ACjCD;;AACA;;;;AACA;;;;;;AAEA,gCAAeS,IAAf;;AAEA,SAASA,IAAT,GAAiB;AACf,MAAMC,SAASC,SAASC,cAAT,CAAwB,QAAxB,CAAf;AACA,MAAMC,OAAO,oBAAb;AACA,MAAMC,WAAW,uBAAaJ,MAAb,EAAqBG,IAArB,CAAjB;AACAC,WAASC,KAAT;AACAC,gBAAcH,IAAd,EAAoBC,QAApB;AACD;;AAED,SAASE,aAAT,CAAwBH,IAAxB,EAA8BC,QAA9B,EAAwC;AACtCH,WAASC,cAAT,CAAwB,OAAxB,EAAiCK,OAAjC,GAA2C,UAAUC,CAAV,EAAa;AACtDA,MAAEC,eAAF;AACAD,MAAEE,cAAF;;AAEA,QAAM/B,IAAIsB,SAASC,cAAT,CAAwB,GAAxB,EAA6BS,KAAvC;AACA,QAAM7B,IAAImB,SAASC,cAAT,CAAwB,GAAxB,EAA6BS,KAAvC;AACAR,SAAKS,SAAL,CAAejC,CAAf,EAAkBG,CAAlB;AACD,GAPD;;AASAmB,WAASC,cAAT,CAAwB,aAAxB,EAAuCK,OAAvC,GAAiD,UAAUC,CAAV,EAAa;AAC5DA,MAAEC,eAAF;AACAD,MAAEE,cAAF;;AAEA,QAAMG,QAAQC,SAASb,SAASC,cAAT,CAAwB,OAAxB,EAAiCS,KAA1C,CAAd;AACAR,SAAKY,KAAL,CAAWC,OAAX,CAAmB,gBAAQ;AAACC,WAAKJ,KAAL,GAAaA,KAAb;AAAmB,KAA/C;AACD,GAND;;AAQAZ,WAASC,cAAT,CAAwB,OAAxB,EAAiCK,OAAjC,GAA2C,UAAUC,CAAV,EAAa;AACtDA,MAAEC,eAAF;AACAD,MAAEE,cAAF;;AAEA,QAAIN,SAASc,SAAT,EAAJ,EAA0B;AACxBd,eAASe,IAAT;AACD,KAFD,MAEO;AACLf,eAASC,KAAT;AACD;AACF,GATD;AAUD,C;;;;;;;;;;;;;qjBC1CD;;;;;;AAMA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;;;IAEqBe,I;AACnB,kBAAe;AAAA;;AACb,SAAKC,IAAL,GAAY,mBAAS,EAACC,OAAO,IAAR,EAAcC,QAAQ,GAAtB,EAAT,CAAZ;AACA,SAAKC,UAAL,GAAkB,yBAAe,KAAKH,IAApB,CAAlB;AACA,SAAKI,MAAL,GAAc,EAAd;AACA,SAAKV,KAAL,GAAa,EAAb;AACA,SAAKW,SAAL,GAAiBnD,SAAjB;AACA,SAAKoD,YAAL,GAAoB,CAApB;AACA,SAAKC,UAAL,GAAkB,KAAKC,aAAL,EAAlB;;AAEA,SAAKC,UAAL,GAAkBC,OAAOC,WAAP,CAAmB,KAAKC,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAnB,EAA+C,GAA/C,CAAlB;AACD;;AAED;;;;;;;;gCAIaC,Q,EAAU;AACrB,UAAMC,aAAa,KAAKf,IAAL,CAAUgB,cAAV,CAAyBF,QAAzB,EAAmC,kBAAWG,IAA9C,EAAoD,kBAAWC,IAA/D,CAAnB;AACA;AACA,UAAI,CAACH,UAAD,IAAeA,WAAWI,IAAX,CAAgB;AAAA,eAAQC,KAAKhE,OAAL,IAAgBgE,KAAKC,OAA7B;AAAA,OAAhB,CAAnB,EAA0E;AACxE;AACD;AACD;AACAN,iBAAWpB,OAAX,CAAmB,gBAAQ;AAAEyB,aAAKhE,OAAL,GAAe,IAAf;AAAqB,OAAlD;AACA;AACA,WAAK+C,UAAL,CAAgBmB,WAAhB;AACA;AACA,UAAMC,iBAAiB,KAAK7B,KAAL,CAAW8B,GAAX,CAAe;AAAA,eAAQ5B,KAAKwB,IAAb;AAAA,OAAf,EACpBK,MADoB,CACb,KAAKlB,UADQ,CAAvB;AAEA,UAAMmB,oBAAoBH,eAAeJ,IAAf,CAAoB;AAAA,eAAQ,CAACC,KAAKpE,SAAd;AAAA,OAApB,CAA1B;AACA;AACA,UAAI0E,iBAAJ,EAAuB;AACrBX,mBAAWpB,OAAX,CAAmB,gBAAQ;AAAEyB,eAAKhE,OAAL,GAAe,KAAf;AAAsB,SAAnD;AACA,aAAK+C,UAAL,CAAgBmB,WAAhB;AACA;AACD;;AAED,UAAMK,kBAAkB,KAAKC,kBAAL,CAAwBb,UAAxB,CAAxB;AACA,UAAMc,QAAQ,iBAAUF,eAAV,CAAd;AACA,WAAKvB,MAAL,CAAY0B,IAAZ,CAAiBD,KAAjB;AACD;;;gCAEYf,Q,EAAU;AACrB,WAAKiB,aAAL,GAAqBjB,QAArB;AACD;;;sCAEkB;AACjB,UAAI,CAAC,KAAKiB,aAAV,EAAyB;AACvB;AACD;AACD,UAAMhB,aAAa,KAAKf,IAAL,CAAUgB,cAAV,CAAyB,KAAKe,aAA9B,EAA6C,kBAAWd,IAAxD,EAA8D,kBAAWC,IAAzE,CAAnB;AACA,UAAI,CAACH,UAAL,EAAiB;AACf,aAAKV,SAAL,GAAiBnD,SAAjB;AACA;AACD;AACD,UAAMyE,kBAAkB,KAAKC,kBAAL,CAAwBb,UAAxB,CAAxB;AACA,UAAMiB,aAAajB,WAAWI,IAAX,CAAgB;AAAA,eAAQC,KAAKhE,OAAL,IAAgBgE,KAAKC,OAA7B;AAAA,OAAhB,CAAnB;AACA,WAAKhB,SAAL,GAAiB;AACf4B,oBAAYN,eADG;AAEfO,eAAO,CAACF;AAFO,OAAjB;AAID;;AAED;;;;;;iCAGc;AACZ,UAAMG,2BAA2B,EAAjC;AACA,UAAMC,WAAW,iBAAOC,yBAAP,CAAiC,KAAK9B,UAAtC,EAAkDxD,KAAnE;AACA,WAAKwC,SAAL,CAAe6C,SAASvF,GAAxB,EAA6BuF,SAAStF,GAAtC;AACA,UAAI,EAAE,KAAKwD,YAAP,IAAuB6B,wBAA3B,EAAqD;AACnDzB,eAAO4B,aAAP,CAAqB,KAAK7B,UAA1B;AACD;AACF;;;8BAEU5D,G,EAAKC,G,EAAK;AACnB,UAAMyF,YAAY,KAAKvC,IAAL,CAAUwC,GAAV,CAAc3F,GAAd,EAAmBC,GAAnB,CAAlB;AACA,UAAM2F,KAAKC,KAAKC,GAAL,EAAX;AACA,UAAM/C,OAAO,mBAAS6C,EAAT,EAAaF,SAAb,EAAwB,IAAxB,EAA8B,KAAKpC,UAAnC,CAAb;AACA,WAAKT,KAAL,CAAWoC,IAAX,CAAgBlC,IAAhB;AACD;;;+BAEWA,I,EAAM;AAChB,UAAMgD,QAAQ,KAAKlD,KAAL,CAAWmD,SAAX,CAAqB,UAACC,KAAD;AAAA,eAAWA,MAAML,EAAN,KAAa7C,KAAK6C,EAA7B;AAAA,OAArB,CAAd;AACA,UAAIG,SAAS,CAAb,EAAgB;AACd,aAAKlD,KAAL,CAAWqD,MAAX,CAAkBH,KAAlB,EAAyB,CAAzB;AACD;AACF;;AAED;;;;;;;2BAIQI,K,EAAO;AACb,WAAKtD,KAAL,CAAWC,OAAX,CAAmB,UAACC,IAAD;AAAA,eAAUA,KAAKqD,MAAL,CAAYD,KAAZ,CAAV;AAAA,OAAnB;AACA,WAAKE,eAAL;AACD;;;oCAEgB;AACf,UAAMC,SAAS5F,KAAKC,KAAL,CAAW,KAAKwC,IAAL,CAAUoD,QAAV,GAAqB,CAAhC,CAAf;AACA,UAAIC,QAAQ9F,KAAK+F,GAAL,CAAS,EAAT,EAAa/F,KAAKC,KAAL,CAAW,KAAKwC,IAAL,CAAUoD,QAAV,GAAqB,CAAhC,CAAb,CAAZ;AACA,UAAIvG,MAAMsG,SAAS5F,KAAKC,KAAL,CAAW6F,QAAQ,CAAnB,CAAnB;AACA,UAAME,QAAQ,EAAd;AACA,aAAOF,UAAU,CAAjB,EAAoB;AAClBE,cAAMzB,IAAN,CACE,KAAK9B,IAAL,CAAUwC,GAAV,CAAc3F,KAAd,EAAqB,CAArB,CADF;AAGD;AACD,aAAO0G,KAAP;AACD;;;uCAEmBA,K,EAAO;AACzB,aAAO;AACLC,iBAASD,MAAM,CAAN,EAAS3F,kBAAT,EADJ;AAEL6F,qBAAaF,MAAMA,MAAM/E,MAAN,GAAe,CAArB,EAAwBkF,sBAAxB;AAFR,OAAP;AAID;;;;;;kBArHkB3D,I;;;;;;;;;;;;;qjBCZrB;;;;;;;;AAQA;;;;IAEqB4D,I;AACnB,gBAAaC,UAAb,EAAyB;AAAA;;AACvB,SAAKA,UAAL,GAAkBA,UAAlB;AACA,SAAKC,QAAL,GAAgBtG,KAAKuG,KAAL,CAAWF,WAAW3D,KAAX,uBAAX,CAAhB;AACA,SAAKmD,QAAL,GAAgB7F,KAAKuG,KAAL,CAAWF,WAAW1D,MAAX,uBAAX,CAAhB;AACA,SAAKxB,IAAL;AACD;;;;2BAEO;AACN,WAAKsB,IAAL,GAAY,IAAI+D,KAAJ,CAAU,KAAKX,QAAf,CAAZ;AACA,WAAK,IAAIvG,MAAM,CAAf,EAAkBA,MAAM,KAAKuG,QAA7B,EAAuCvG,KAAvC,EAA8C;AAC5C,aAAKmD,IAAL,CAAUnD,GAAV,IAAiBkH,MAAM,KAAKF,QAAX,CAAjB;AACA,aAAK,IAAI/G,MAAM,CAAf,EAAkBA,MAAM,KAAK+G,QAA7B,EAAuC/G,KAAvC,EAA8C;AAC5C,eAAKkD,IAAL,CAAUnD,GAAV,EAAeC,GAAf,IAAsB,eAASD,GAAT,EAAcC,GAAd,CAAtB;AACD;AACF;AACD;AACA,WAAKkH,QAAL,GAAgB,GAAGvC,MAAH,CAAUwC,KAAV,CAAgB,EAAhB,EAAoB,KAAKjE,IAAzB,CAAhB;AACD;;AAED;;;;;;4BAGS;AACP,WAAK,IAAInD,MAAM,CAAf,EAAkBA,MAAM,KAAKuG,QAA7B,EAAuCvG,KAAvC,EAA8C;AAC5C,aAAK,IAAIC,MAAM,CAAf,EAAkBA,MAAM,KAAK+G,QAA7B,EAAuC/G,KAAvC,EAA8C;AAC5C,eAAKkD,IAAL,CAAUnD,GAAV,EAAeC,GAAf,EAAoBE,SAApB,GAAgC,KAAhC;AACA,eAAKgD,IAAL,CAAUnD,GAAV,EAAeC,GAAf,EAAoBG,IAApB,GAA2BC,SAA3B;AACA,eAAK8C,IAAL,CAAUnD,GAAV,EAAeC,GAAf,EAAoBK,QAApB,GAA+BD,SAA/B;AACD;AACF;AACF;;AAED;;;;;;;;;wBAMKL,G,EAAKC,G,EAAK;AACb,UAAI;AACF,eAAO,KAAKkD,IAAL,CAAUnD,GAAV,EAAeC,GAAf,CAAP;AACD,OAFD,CAEE,OAAOoH,GAAP,EAAY;AACZ,eAAOhH,SAAP;AACD;AACF;;AAED;;;;;;;gCAIa;AACX,UAAIL,MAAMU,KAAKC,KAAL,CAAW,KAAK4F,QAAL,GAAgB,CAA3B,CAAV;AACA,UAAItG,MAAM,KAAK+G,QAAL,GAAgB,CAA1B;AACA,aAAO,KAAKrB,GAAL,CAAS3F,GAAT,EAAcC,GAAd,CAAP;AACD;;AAED;;;;;;;;gDAK6BsE,I,EAAM;AAAA;;AACjC,UAAMrE,QAAQqE,KAAKrE,KAAnB;AACA,UAAMiD,OAAO,IAAb;AACA,aAAO,CACL,EAACnD,KAAKE,MAAMF,GAAZ,EAAiBC,KAAKC,MAAMD,GAAN,GAAY,CAAlC,EADK,EAEL,EAACD,KAAKE,MAAMF,GAAN,GAAY,CAAlB,EAAqBC,KAAKC,MAAMD,GAAhC,EAFK,EAGL,EAACD,KAAKE,MAAMF,GAAZ,EAAiBC,KAAKC,MAAMD,GAAN,GAAY,CAAlC,EAHK,EAIL,EAACD,KAAKE,MAAMF,GAAN,GAAY,CAAlB,EAAqBC,KAAKC,MAAMD,GAAhC,EAJK,EAKLqH,MALK,CAKE;AAAA,eACP,CAAC,MAAKC,YAAL,CAAkBrH,KAAlB,CADM;AAAA,OALF,EAOJyE,GAPI,CAOA;AAAA,eACLxB,KAAKwC,GAAL,CAASzF,MAAMF,GAAf,EAAoBE,MAAMD,GAA1B,CADK;AAAA,OAPA,EASJqH,MATI,CASG;AAAA,eACR/C,KAAKnE,IAAL,KAAcC,SAAd,IACA,CAACkE,KAAKhE,OAFE;AAAA,OATH,CAAP;AAaD;;AAED;;;;;;;;sCAKmBiH,K,EAAO;AACxB,UAAIA,MAAM/G,CAAN,GAAU,CAAV,IACF+G,MAAM/G,CAAN,GAAU,KAAKsG,UAAL,CAAgB3D,KADxB,IAEFoE,MAAM5G,CAAN,GAAU,CAFR,IAGF4G,MAAM5G,CAAN,GAAU,KAAKmG,UAAL,CAAgB1D,MAH5B,EAIE;AACA,eAAOhD,SAAP;AACD;AACD,UAAMJ,MAAMS,KAAKuG,KAAL,CAAWO,MAAM/G,CAAN,uBAAX,CAAZ;AACA,UAAMT,MAAMU,KAAKuG,KAAL,CAAWO,MAAM5G,CAAN,uBAAX,CAAZ;AACA,aAAO,KAAK+E,GAAL,CAAS3F,GAAT,EAAcC,GAAd,CAAP;AACD;;AAED;;;;;;;;yCAKsBmF,U,EAAY;AAChC,UAAMqC,cAAc,KAAKC,iBAAL,CAAuBtC,WAAWuB,OAAlC,CAApB;AACA,UAAMgB,kBAAkB,KAAKD,iBAAL,CAAuBtC,WAAWwB,WAAlC,CAAxB;AACA,UAAMF,QAAQ,EAAd;AACA,WAAK,IAAI1G,MAAMyH,YAAYvH,KAAZ,CAAkBF,GAAjC,EAAsCA,OAAO2H,gBAAgBzH,KAAhB,CAAsBF,GAAnE,EAAwEA,KAAxE,EAA+E;AAC7E,aAAK,IAAIC,MAAMwH,YAAYvH,KAAZ,CAAkBD,GAAjC,EAAsCA,OAAO0H,gBAAgBzH,KAAhB,CAAsBD,GAAnE,EAAwEA,KAAxE,EAA+E;AAC7EyG,gBAAMzB,IAAN,CAAW,KAAKU,GAAL,CAAS3F,GAAT,EAAcC,GAAd,CAAX;AACD;AACF;AACD,aAAOyG,KAAP;AACD;;AAED;;;;;;;+BAIY;AACV,aAAO,KAAKS,QAAZ;AACD;;AAED;;;;;;;;;;mCAOgBK,K,EAAOjB,Q,EAAUS,Q,EAAU;AACzC,UAAMY,SAAS,KAAKF,iBAAL,CAAuBF,KAAvB,CAAf;AACA,UAAI,CAACI,MAAL,EAAa;AACX,eAAOvH,SAAP;AACD;AACD,UAAMwH,SAASD,OAAO1H,KAAP,CAAaF,GAAb,GAAmBU,KAAKuG,KAAL,CAAWV,WAAW,CAAtB,CAAlC;AACA,UAAMuB,YAAYD,SAAStB,QAAT,GAAoB,CAAtC;AACA,UAAMwB,UAAUH,OAAO1H,KAAP,CAAaD,GAAb,GAAmBS,KAAKuG,KAAL,CAAWD,WAAW,CAAtB,CAAnC;AACA,UAAMgB,WAAWD,UAAUf,QAAV,GAAqB,CAAtC;AACA,UAAI,KAAKO,YAAL,CAAkB,EAACvH,KAAK6H,MAAN,EAAc5H,KAAK8H,OAAnB,EAAlB,KACF,KAAKR,YAAL,CAAkB,EAACvH,KAAK8H,SAAN,EAAiB7H,KAAK+H,QAAtB,EAAlB,CADF,EACsD;AACpD,eAAO3H,SAAP;AACD;;AAED,UAAMqG,QAAQ,EAAd;AACA,WAAK,IAAI1G,MAAM6H,MAAf,EAAuB7H,OAAO8H,SAA9B,EAAyC9H,KAAzC,EAAgD;AAC9C,aAAK,IAAIC,MAAM8H,OAAf,EAAwB9H,OAAO+H,QAA/B,EAAyC/H,KAAzC,EAAgD;AAC9CyG,gBAAMzB,IAAN,CAAW,KAAKU,GAAL,CAAS3F,GAAT,EAAcC,GAAd,CAAX;AACD;AACF;AACD,aAAOyG,KAAP;AACD;;AAED;;;;;;;;iCAKcxG,K,EAAO;AACnB,aAAOA,MAAMD,GAAN,GAAY,CAAZ,IACLC,MAAMD,GAAN,IAAa,KAAK+G,QADb,IAEL9G,MAAMF,GAAN,GAAY,CAFP,IAGLE,MAAMF,GAAN,IAAa,KAAKuG,QAHpB;AAID;;;;;;kBAnKkBO,I;;;;;;;;;;;;;;;;;ICVAmB,K;AACnB;;;;AAIA,iBAAajI,GAAb,EAAkBC,GAAlB,EAAuB;AAAA;;AACrB,SAAKD,GAAL,GAAWA,GAAX;AACA,SAAKC,GAAL,GAAWA,GAAX;AACD;;AAED;;;;;;;;;2BAKQC,K,EAAO;AACb,aAAOA,SAAS,KAAKF,GAAL,KAAaE,MAAMF,GAA5B,IAAmC,KAAKC,GAAL,KAAaC,MAAMD,GAA7D;AACD;;;;;;kBAjBkBgI,K;;;;;;;;;;;;;;;;;ACArB;;;;;;AAMA;;;;;AAKO,IAAMC,kCAAa;AACxB9D,QAAM,CADkB;AAExBC,QAAM;AAFkB,CAAnB;;IAKM8D,K,WAAAA,K;AACX,iBAAa/C,UAAb,EAAyB;AAAA;;AACvB,SAAKgD,eAAL,GAAuBhD,WAAWuB,OAAlC;AACA,SAAKvD,KAAL,GAAagC,WAAWwB,WAAX,CAAuBnG,CAAvB,GAA2B2E,WAAWuB,OAAX,CAAmBlG,CAA3D;AACA,SAAK4C,MAAL,GAAc+B,WAAWwB,WAAX,CAAuBhG,CAAvB,GAA2BwE,WAAWuB,OAAX,CAAmB/F,CAA5D;AACA;AACD;;AAED;;;;;;;;yBAIMyH,O,EAAS;AACbA,cAAQC,SAAR,GAAoB,WAApB;AACAD,cAAQE,WAAR,GAAsB,SAAtB;AACAF,cAAQG,QAAR,CAAiB,KAAKJ,eAAL,CAAqB3H,CAAtC,EAAyC,KAAK2H,eAAL,CAAqBxH,CAA9D,EAAiE,KAAKwC,KAAtE,EAA6E,KAAKC,MAAlF;AACAgF,cAAQI,UAAR,CAAmB,KAAKL,eAAL,CAAqB3H,CAAxC,EAA2C,KAAK2H,eAAL,CAAqBxH,CAAhE,EAAmE,KAAKwC,KAAxE,EAA+E,KAAKC,MAApF;AACD;AACD;;;;;;;2BAIQ8C,K,EAAO,CAKd;AAJC;AACA;AACA;AACA;;;AAGF;;;;;;;oCAIiB;AACf,aAAO;AACL,mBAAW,KAAKiC,eADX;AAEL,uBAAe,KAAKM;AAFf,OAAP;AAID;;;;;;;;;;;;;;;;;;;ACtDH;;AACA;;;;AAEA,IAAMC,kBAAkB;AACtBvF,SAAO,EADe;AAEtBC,UAAQ;AAFc,CAAxB;;IAKqBuF,I;AACnB,gBAAahD,EAAb,EAAiBiD,WAAjB,EAA8B5G,IAA9B,EAAoCqB,UAApC,EAAgD;AAAA;;AAC9C,SAAKsC,EAAL,GAAUA,EAAV;AACA,SAAK3D,IAAL,GAAYA,IAAZ;AACA,SAAKqB,UAAL,GAAkBA,UAAlB;AACA,SAAKiB,IAAL,GAAYsE,WAAZ;AACA,SAAKtE,IAAL,CAAUC,OAAV,GAAoB,IAApB;AACA,SAAKP,QAAL,GAAgB,KAAKM,IAAL,CAAUxD,kBAAV,EAAhB;AACA,SAAK4B,KAAL,GAAa,EAAb,CAP8C,CAO9B;;AAEhB,SAAKmG,aAAL,GAAqB,CAArB;AACD;;AAED;;;;;;;;yBAIMT,O,EAAS;AACb;AACA;AACA;;AAEA,UAAM/G,MAAM,uBAAW,QAAX,CAAZ;AACA+G,cAAQU,SAAR,CAAkBzH,GAAlB,EAAuB,KAAK2C,QAAL,CAAcxD,CAArC,EAAwC,KAAKwD,QAAL,CAAcrD,CAAd,GAAkBF,KAAKC,KAAL,CAAWgI,gBAAgBtF,MAAhB,GAAyB,CAApC,CAA1D;AACD;;AAED;;;;;;;2BAIQ8C,K,EAAO;AACb,WAAK5B,IAAL,CAAUC,OAAV,GAAoB,KAApB;AACA,UAAMwE,WAAW,KAAK1F,UAAL,CAAgB0F,QAAhB,CAAyB,KAAKzE,IAA9B,EAAoC,CAApC,CAAjB;AACA,UAAI,CAACyE,QAAL,EAAe;AACb,aAAK/G,IAAL,CAAUgH,UAAV,CAAqB,IAArB;AACA;AACD;;AAED,UAAMC,SAAS,KAAK3E,IAAL,CAAU4E,SAAV,CAAoB,KAAKlF,QAAzB,CAAf;AACA,UAAMmF,iBAAiB;AACrB3I,WAAGuI,SAASjI,kBAAT,GAA8BN,CAA9B,GAAkCyI,OAAOzI,CADvB;AAErBG,WAAGoI,SAASjI,kBAAT,GAA8BH,CAA9B,GAAkCsI,OAAOtI;AAFvB,OAAvB;;AAKA,UAAMyI,OAAQ,KAAK1G,KAAL,GAAawD,KAAb,GAAqB,MAAtB,GAAgC,KAAK2C,aAAlD;AACA,UAAMQ,UAAU5I,KAAKuG,KAAL,CAAWoC,IAAX,CAAhB;AACA,WAAKP,aAAL,GAAqBO,OAAOC,OAA5B;;AAEA,UAAMC,eAAe,KAAKC,qBAAL,CAA2B,KAAKvF,QAAhC,EAA0CmF,cAA1C,EAA0DE,OAA1D,CAArB;AACA;AACA,UAAMG,mBAAmB,KAAKxH,IAAL,CAAUkB,IAAV,CAAeuE,iBAAf,CAAiC6B,YAAjC,CAAzB;;AAEA,UAAIE,gBAAJ,EAAsB;AACpB,aAAKlF,IAAL,GAAYkF,gBAAZ;AACA,aAAKlF,IAAL,CAAUC,OAAV,GAAoB,IAApB;AACA,aAAKP,QAAL,GAAgBsF,YAAhB;AACD,OAJD,MAIO;AACL,aAAKtH,IAAL,CAAUgH,UAAV,CAAqB,IAArB;AACD;AACF;;AAED;;;;;;;;;;0CAOuBS,O,EAASC,M,EAAQC,Q,EAAU;AAChD;AACA,UAAMC,KAAKF,OAAOlJ,CAAP,GAAWiJ,QAAQjJ,CAA9B;AACA,UAAMqJ,KAAKH,OAAO/I,CAAP,GAAW8I,QAAQ9I,CAA9B;AACA,UAAMmJ,MAAMrJ,KAAKsJ,IAAL,CAAUtJ,KAAKuJ,GAAL,CAASJ,EAAT,EAAa,CAAb,IAAkBnJ,KAAKuJ,GAAL,CAASH,EAAT,EAAa,CAAb,CAA5B,CAAZ;AACA,UAAMI,MAAMJ,KAAKC,GAAjB;AACA,UAAMI,MAAMN,KAAKE,GAAjB;;AAEA,UAAMK,SAASF,MAAMN,QAArB;AACA,UAAMS,SAASF,MAAMP,QAArB;;AAEA,UAAMU,QAAQZ,QAAQjJ,CAAR,GAAY4J,MAA1B;AACA,UAAME,QAAQb,QAAQ9I,CAAR,GAAYwJ,MAA1B;AACA,aAAO,EAAC3J,GAAG6J,KAAJ,EAAW1J,GAAG2J,KAAd,EAAP;AACD;;;;;;kBAlFkB3B,I;;;;;;;;;;;;;;;;;ICPA4B,U;AACnB,sBAAarH,IAAb,EAAmB;AAAA;;AACjB,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKsB,WAAL;AACD;;AAED;;;;;;;kCAGe;AACb,WAAKtB,IAAL,CAAUsH,KAAV;AACA,UAAIC,aAAa,KAAKvH,IAAL,CAAUwH,SAAV,EAAjB;AACAD,iBAAWtK,IAAX,GAAkB,CAAlB;AACAsK,iBAAWvK,SAAX,GAAuB,IAAvB;AACAuK,iBAAWpK,QAAX,GAAsBD,SAAtB;AACA,WAAKuK,QAAL,GAAgB,CAACF,UAAD,CAAhB;;AAEA,aAAO,KAAKE,QAAL,CAAcjJ,MAAd,GAAuB,CAA9B,EAAiC;AAC/B,YAAI+H,UAAU,KAAKkB,QAAL,CAAcC,KAAd,EAAd;AACA,YAAIC,kBAAkB,KAAK3H,IAAL,CAAU4H,2BAAV,CAAsCrB,OAAtC,CAAtB;AAF+B;AAAA;AAAA;;AAAA;AAG/B,+BAA0BoB,eAA1B,8HAA2C;AAAA,gBAAlCE,aAAkC;;AACzCA,0BAAc5K,IAAd,GAAqBsJ,QAAQtJ,IAAR,GAAe,CAApC;AACA4K,0BAAc7K,SAAd,GAA0B,IAA1B;AACA6K,0BAAc1K,QAAd,GAAyBoJ,OAAzB;AACA,iBAAKkB,QAAL,CAAc3F,IAAd,CAAmB+F,aAAnB;AACD;AAR8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAShC;AACF;;AAED;;;;;;;;;6BAMUC,W,EAAwB;AAAA,UAAXC,KAAW,uEAAH,CAAG;;AAChC,UAAIlC,WAAWiC,YAAY3K,QAA3B;AACA,aAAO,EAAE4K,KAAF,GAAU,CAAV,IAAelC,QAAtB,EAAgC;AAC9BA,mBAAWA,SAAS1I,QAApB;AACD;AACD,aAAO0I,QAAP;AACD;;;;;;kBAzCkBwB,U;;;;;;;;;;;;;;;;;ICDfW,M;;;;;;;4BACKC,S,EAAW;AAClBA,kBAAYA,aAAa,GAAzB;AACA,aAAO1K,KAAK2K,MAAL,KAAgBD,SAAvB;AACD;;;0CAEsB3E,G,EAAK6E,G,EAAK;AAC/B7E,YAAM/F,KAAK6K,IAAL,CAAU9E,GAAV,CAAN;AACA6E,YAAM5K,KAAKuG,KAAL,CAAWqE,GAAX,CAAN;AACA;AACA,aAAO5K,KAAKuG,KAAL,CAAWvG,KAAK2K,MAAL,MAAiBC,MAAM7E,GAAvB,CAAX,IAA0CA,GAAjD;AACD;;;0CAEsBA,G,EAAK6E,G,EAAK;AAC/B7E,YAAM/F,KAAK6K,IAAL,CAAU9E,GAAV,CAAN;AACA6E,YAAM5K,KAAKuG,KAAL,CAAWqE,GAAX,CAAN;AACA;AACA,aAAO5K,KAAKuG,KAAL,CAAWvG,KAAK2K,MAAL,MAAiBC,MAAM7E,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAArD;AACD;;;8CAE0B+E,K,EAAO;AAChC,UAAIzF,QAAQ,KAAK0F,qBAAL,CAA2B,CAA3B,EAA8BD,MAAM7J,MAApC,CAAZ;AACA,aAAO6J,MAAMzF,KAAN,CAAP;AACD;;;4BAEQyF,K,EAAO;AACd,UAAIE,eAAeF,MAAM7J,MAAzB;AACA,UAAIgK,uBAAJ;AAAA,UAAoBC,oBAApB;;AAEA;AACA,aAAOF,iBAAiB,CAAxB,EAA2B;AACzB;AACAE,sBAAclL,KAAKuG,KAAL,CAAWvG,KAAK2K,MAAL,KAAgBK,YAA3B,CAAd;AACAA,wBAAgB,CAAhB;;AAEA;AACAC,yBAAiBH,MAAME,YAAN,CAAjB;AACAF,cAAME,YAAN,IAAsBF,MAAMI,WAAN,CAAtB;AACAJ,cAAMI,WAAN,IAAqBD,cAArB;AACD;AACF;;;;;;kBAGY,IAAIR,MAAJ,E;;;;;;;;;;;;;qjBC3Cf;;AAEA;;;;;;AAMA;;;;IAEMU,Q;AACJ;;;;AAIA,oBAAa/J,MAAb,EAAqBG,IAArB,EAA2B;AAAA;;AACzB,SAAKH,MAAL,GAAcA,MAAd;AACA,SAAKG,IAAL,GAAYA,IAAZ;AACA,SAAKH,MAAL,CAAYsB,KAAZ,GAAoB,KAAKnB,IAAL,CAAUkB,IAAV,CAAe4D,UAAf,CAA0B3D,KAA9C;AACA,SAAKtB,MAAL,CAAYuB,MAAZ,GAAqB,KAAKpB,IAAL,CAAUkB,IAAV,CAAe4D,UAAf,CAA0B1D,MAA/C;AACA,SAAKgF,OAAL,GAAe,KAAKvG,MAAL,CAAYgK,UAAZ,CAAuB,IAAvB,CAAf;AACA,SAAKC,WAAL,GAAmB,IAAnB;;AAEA;AACA,SAAKjK,MAAL,CAAYO,OAAZ,GAAsB,KAAK2J,aAAL,CAAmBhI,IAAnB,CAAwB,IAAxB,CAAtB;AACA,SAAKlC,MAAL,CAAYmK,WAAZ,GAA0B,KAAKC,WAAL,CAAiBlI,IAAjB,CAAsB,IAAtB,CAA1B;AACA,SAAKlC,MAAL,CAAYqK,UAAZ,GAAyB,KAAKD,WAAL,CAAiBlI,IAAjB,CAAsB,IAAtB,CAAzB;AACD;;AAED;;;;;;;4BAGS;AACP,WAAKoI,QAAL,GAAgBvG,KAAKC,GAAL,EAAhB;AACA,WAAKiG,WAAL,GAAmBM,sBAAsB,KAAKC,IAAL,CAAUtI,IAAV,CAAe,IAAf,CAAtB,CAAnB;AACD;;;2BAEO;AACN,WAAK+H,WAAL,GAAmB,IAAnB;AACD;;;gCAEY;AACX,aAAO,KAAKA,WAAL,KAAqB,IAA5B;AACD;;AAED;;;;;;2BAGQ;AACN,UAAI,CAAC,KAAKA,WAAV,EAAuB;AACrB;AACD;;AAED,UAAMjG,MAAMD,KAAKC,GAAL,EAAZ;AACA,UAAMK,QAASL,MAAM,KAAKsG,QAA1B;;AAEA,WAAKnK,IAAL,CAAUmE,MAAV,CAAiBD,KAAjB;AACA,WAAKiG,QAAL,GAAgBtG,GAAhB;;AAEA,WAAKyG,MAAL;AACA,WAAKR,WAAL,GAAmBM,sBAAsB,KAAKC,IAAL,CAAUtI,IAAV,CAAe,IAAf,CAAtB,CAAnB;AACD;;AAED;;;;;;6BAGU;AAAA;;AACR,WAAKqE,OAAL,CAAamE,SAAb,CAAuB,CAAvB,EAA0B,CAA1B,EAA6B,KAAK1K,MAAL,CAAYsB,KAAzC,EAAgD,KAAKtB,MAAL,CAAYuB,MAA5D;AACA;AACA,UAAI,KAAKpB,IAAL,CAAUuB,SAAd,EAAyB;AACvB,YAAIiJ,SAAS,OAAb;AACA,YAAIC,OAAO,YAAX;AACA,YAAI,CAAC,KAAKzK,IAAL,CAAUuB,SAAV,CAAoB6B,KAAzB,EAAgC;AAC9BoH,mBAAS,KAAT;AACAC,iBAAO,YAAP;AACD;AACD,aAAKC,gBAAL,CAAsB,KAAK1K,IAAL,CAAUuB,SAAV,CAAoB4B,UAA1C,EAAsDqH,MAAtD,EAA8DC,IAA9D;AACD;;AAED;AACA,WAAKzK,IAAL,CAAUsB,MAAV,CAAiBT,OAAjB,CAAyB,UAACkC,KAAD,EAAW;AAClCA,cAAM4H,IAAN,CAAW,MAAKvE,OAAhB;AACD,OAFD;;AAIA;AACA,WAAKpG,IAAL,CAAUY,KAAV,CAAgBC,OAAhB,CAAwB,UAACC,IAAD,EAAU;AAChCA,aAAK6J,IAAL,CAAU,MAAKvE,OAAf;AACD,OAFD;AAGD;;AAED;;;;;;wCAGqB;AAAA;;AACnB,WAAKA,OAAL,CAAaC,SAAb,GAAyB,cAAzB;AACA,WAAKD,OAAL,CAAaE,WAAb,GAA2B,OAA3B;AACA,UAAMsE,eAAe,KAAK5K,IAAL,CAAUkB,IAAV,CAAe2J,QAAf,GAA0BxF,MAA1B,CAAiC,UAAC/C,IAAD;AAAA,eAAUA,KAAKhE,OAAf;AAAA,OAAjC,CAArB;AACAsM,mBAAa/J,OAAb,CAAqB,UAACyB,IAAD,EAAU;AAC7B,YAAIN,WAAWM,KAAKxD,kBAAL,EAAf;AACA,eAAKsH,OAAL,CAAaI,UAAb,CAAwBxE,SAASxD,CAAjC,EAAoCwD,SAASrD,CAA7C;AACA,eAAKyH,OAAL,CAAaG,QAAb,CAAsBvE,SAASxD,CAA/B,EAAkCwD,SAASrD,CAA3C;AACD,OAJD;;AAMA,WAAKqB,IAAL,CAAUsB,MAAV,CAAiBT,OAAjB,CAAyB,UAACkC,KAAD,EAAW;AAClC,eAAK2H,gBAAL,CAAsB3H,MAAM+H,aAAN,EAAtB,EAA6C,KAA7C;AACD,OAFD;AAGD;;AAED;;;;;;;kCAIeC,K,EAAO;AACpB,UAAI9H,gBAAgB;AAClBzE,WAAGuM,MAAMC,OAAN,GAAgBD,MAAMrD,MAAN,CAAauD,UADd;AAElBtM,WAAGoM,MAAMG,OAAN,GAAgBH,MAAMrD,MAAN,CAAayD;AAFd,OAApB;AAIA,WAAKnL,IAAL,CAAUoL,WAAV,CAAsBnI,aAAtB;AACD;;;gCAEY8H,K,EAAO;AAClB,UAAI9H,gBAAgB;AAClBzE,WAAGuM,MAAMC,OAAN,GAAgBD,MAAMrD,MAAN,CAAauD,UADd;AAElBtM,WAAGoM,MAAMG,OAAN,GAAgBH,MAAMrD,MAAN,CAAayD;AAFd,OAApB;AAIA,WAAKnL,IAAL,CAAUiK,WAAV,CAAsBhH,aAAtB;AACD;;;qCAEiBE,U,EAAYqH,M,EAAQC,I,EAAM;AAC1C,UAAIzI,WAAWmB,WAAWuB,OAA1B;AACA,UAAI2G,IAAIlI,WAAWwB,WAAX,CAAuBnG,CAAvB,GAA2BwD,SAASxD,CAA5C;AACA,UAAI8M,IAAInI,WAAWwB,WAAX,CAAuBhG,CAAvB,GAA2BqD,SAASrD,CAA5C;AACA,UAAI6L,MAAJ,EAAY;AACV,aAAKpE,OAAL,CAAaE,WAAb,GAA2BkE,MAA3B;AACA,aAAKpE,OAAL,CAAaI,UAAb,CAAwBxE,SAASxD,CAAjC,EAAoCwD,SAASrD,CAA7C,EAAgD0M,CAAhD,EAAmDC,CAAnD;AACD;AACD,UAAIb,IAAJ,EAAU;AACR,aAAKrE,OAAL,CAAaC,SAAb,GAAyBoE,IAAzB;AACA,aAAKrE,OAAL,CAAaG,QAAb,CAAsBvE,SAASxD,CAA/B,EAAkCwD,SAASrD,CAA3C,EAA8C0M,CAA9C,EAAiDC,CAAjD;AACD;AACF;;;;;;kBAGY1B,Q","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap af55fc448f790282a841","/**\n * @typedef {Object} Point\n * @property {number} x - The X Coordinate.\n * @property {number} y - The Y Coordinate.\n */\n\nimport Coord from './coord'\n\n/**\n * Size of the (square) cell edge.\n * @type {number}\n */\nexport const CELL_EDGE_SIZE = 20\n\n/**\n * Grid cell.\n */\nexport class Cell {\n  /**\n   * @param {number} row - Row number.\n   * @param {number} col - Column number.\n   */\n  constructor (row, col) {\n    this.coord = new Coord(row, col)\n    this.reachable = false\n    this.dist = undefined\n    this.nextStep = undefined\n    this.blocked = false\n  }\n\n  /**\n   * Check cell coordinates.\n   * @param {Coord} coord\n   * @return {Boolean}\n   */\n  isOnCoord (coord) {\n    return this.coord.equals(coord)\n  }\n\n  /**\n   * Get the position of the center of the cell in pixels.\n   * @return {Point}\n   */\n  getCenterPosition () {\n    let x = Math.round((this.coord.col * CELL_EDGE_SIZE) + (CELL_EDGE_SIZE / 2))\n    let y = Math.round((this.coord.row * CELL_EDGE_SIZE) + (CELL_EDGE_SIZE / 2))\n    return {x, y}\n  }\n\n  /**\n   * Get the top-left position of the cell in pixels.\n   * @return {Point}\n   */\n  getTopLeftPosition () {\n    let x = this.coord.col * CELL_EDGE_SIZE\n    let y = this.coord.row * CELL_EDGE_SIZE\n    return {x, y}\n  }\n\n  /**\n   * Get the bottom-right position of the cell in pixels.\n   * @return {Point}\n   */\n  getBottomRightPosition () {\n    let x = (this.coord.col + 1) * CELL_EDGE_SIZE\n    let y = (this.coord.row + 1) * CELL_EDGE_SIZE\n    return {x, y}\n  }\n\n  /**\n   * Get the offset of a point inside the cell from the cell's top-left corner.\n   * @param  {Point} pointInCell\n   * @return {Point} offset\n   */\n  getOffset (pointInCell) {\n    const zero = this.getTopLeftPosition()\n    return {\n      x: pointInCell.x - zero.x,\n      y: pointInCell.y - zero.y\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/cell.js","/* global Image */\n\n/**\n * List of images to load.\n * @type {Object}\n */\nconst imageUrls = {\n  'tower-1': '../images/tower-1.png',\n  'goon-1': '../images/goon-1.png'\n}\n\n/**\n * Global image cache.\n * @type {Object}\n */\nexport const imageCache = {}\n\n/**\n * Load the images on the cache and call the callback when ready.\n * @param  {function} onLoadComplete\n */\nexport function loadImageCache (onLoadComplete) {\n  for (let key in imageUrls) {\n    let url = imageUrls[key]\n    let img = new Image()\n    img.onload = () => {\n      imageCache[key] = img\n      if (Object.keys(imageCache).length === Object.keys(imageUrls).length) {\n        onLoadComplete()\n      }\n    }\n    img.src = url\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/image-cache.js","import {loadImageCache} from './image-cache.js'\nimport Game from './game.js'\nimport Renderer from './renderer.js'\n\nloadImageCache(init)\n\nfunction init () {\n  const canvas = document.getElementById('canvas')\n  const game = new Game()\n  const renderer = new Renderer(canvas, game)\n  renderer.start()\n  initCtrlPanel(game, renderer)\n}\n\nfunction initCtrlPanel (game, renderer) {\n  document.getElementById('spawn').onclick = function (e) {\n    e.stopPropagation()\n    e.preventDefault()\n\n    const x = document.getElementById('x').value\n    const y = document.getElementById('y').value\n    game.spawnGoon(x, y)\n  }\n\n  document.getElementById('speedUpdate').onclick = function (e) {\n    e.stopPropagation()\n    e.preventDefault()\n\n    const speed = parseInt(document.getElementById('speed').value)\n    game.goons.forEach(goon => {goon.speed = speed})\n  }\n\n  document.getElementById('pause').onclick = function (e) {\n    e.stopPropagation()\n    e.preventDefault()\n\n    if (renderer.isRunning()) {\n      renderer.stop()\n    } else {\n      renderer.start()\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/**\n * @typedef {Object} Point\n * @property {number} x - The X Coordinate.\n * @property {number} y - The Y Coordinate.\n */\n\nimport Grid from './grid'\nimport {Tower, TOWER_SIZE} from './tower'\nimport Goon from './goon'\nimport PathFinder from './path-finder'\nimport random from './random'\n\nexport default class Game {\n  constructor () {\n    this.grid = new Grid({width: 1000, height: 600})\n    this.pathFinder = new PathFinder(this.grid)\n    this.towers = []\n    this.goons = []\n    this.highlight = undefined\n    this.spawnedGoons = 0\n    this.spawnCells = this.getSpawnCells()\n\n    this.intervalId = window.setInterval(this.spawnGoons.bind(this), 800)\n  }\n\n  /**\n   * When a user click a cell.\n   * @param  {Point} position - Cell upper-left position.\n   */\n  onUserClick (position) {\n    const towerCells = this.grid.getCellsAround(position, TOWER_SIZE.rows, TOWER_SIZE.cols)\n    // occupied ?\n    if (!towerCells || towerCells.some(cell => cell.blocked || cell.hasGoon)) {\n      return\n    }\n    // 1: block\n    towerCells.forEach(cell => { cell.blocked = true })\n    // 2: recalculate paths\n    this.pathFinder.recalculate()\n    // 3: check for trapped goons and spawn locations\n    const doNotTrapCells = this.goons.map(goon => goon.cell)\n      .concat(this.spawnCells)\n    const isInvalidPosition = doNotTrapCells.some(cell => !cell.reachable)\n    // 4: if trapped, rollback\n    if (isInvalidPosition) {\n      towerCells.forEach(cell => { cell.blocked = false })\n      this.pathFinder.recalculate()\n      return\n    }\n\n    const towerBoundaries = this._getCellsBoudaries(towerCells)\n    const tower = new Tower(towerBoundaries)\n    this.towers.push(tower)\n  }\n\n  onMouseMove (position) {\n    this.mousePosition = position\n  }\n\n  updateHighlight () {\n    if (!this.mousePosition) {\n      return\n    }\n    const towerCells = this.grid.getCellsAround(this.mousePosition, TOWER_SIZE.rows, TOWER_SIZE.cols)\n    if (!towerCells) {\n      this.highlight = undefined\n      return\n    }\n    const towerBoundaries = this._getCellsBoudaries(towerCells)\n    const isOcuppied = towerCells.some(cell => cell.blocked || cell.hasGoon)\n    this.highlight = {\n      boundaries: towerBoundaries,\n      valid: !isOcuppied\n    }\n  }\n\n  /**\n   * Spawn a new goon.\n   */\n  spawnGoons () {\n    const NUMBER_OF_GOONS_TO_SPAWN = 10\n    const location = random.getRandomElementFromArray(this.spawnCells).coord\n    this.spawnGoon(location.row, location.col)\n    if (++this.spawnedGoons >= NUMBER_OF_GOONS_TO_SPAWN) {\n      window.clearInterval(this.intervalId)\n    }\n  }\n\n  spawnGoon (row, col) {\n    const spawnCell = this.grid.get(row, col)\n    const id = Date.now()\n    const goon = new Goon(id, spawnCell, this, this.pathFinder)\n    this.goons.push(goon)\n  }\n\n  removeGoon (goon) {\n    const index = this.goons.findIndex((aGoon) => aGoon.id === goon.id)\n    if (index >= 0) {\n      this.goons.splice(index, 1)\n    }\n  }\n\n  /**\n   * Update the state of the game entities.\n   * @param  {number} delta - ms since last update.\n   */\n  update (delta) {\n    this.goons.forEach((goon) => goon.update(delta))\n    this.updateHighlight()\n  }\n\n  getSpawnCells () {\n    const middle = Math.round(this.grid.rowCount / 2)\n    let count = Math.min(10, Math.round(this.grid.rowCount / 3))\n    let row = middle - Math.round(count / 2)\n    const cells = []\n    while (count-- > 0) {\n      cells.push(\n        this.grid.get(row++, 0)\n      )\n    }\n    return cells\n  }\n\n  _getCellsBoudaries (cells) {\n    return {\n      topLeft: cells[0].getTopLeftPosition(),\n      bottomRight: cells[cells.length - 1].getBottomRightPosition()\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/game.js","/**\n * @typedef {Object} CellData\n * @property {number} x - The X Coordinate.\n * @property {number} y - The Y Coordinate.\n * @property {number} dist - Number of steps until target.\n * @property {number} nextStep - Next cell on the path to target.\n */\n\nimport {Cell, CELL_EDGE_SIZE} from './cell'\n\nexport default class Grid {\n  constructor (canvasSize) {\n    this.canvasSize = canvasSize\n    this.colCount = Math.floor(canvasSize.width / CELL_EDGE_SIZE)\n    this.rowCount = Math.floor(canvasSize.height / CELL_EDGE_SIZE)\n    this.init()\n  }\n\n  init () {\n    this.grid = new Array(this.rowCount)\n    for (var row = 0; row < this.rowCount; row++) {\n      this.grid[row] = Array(this.colCount)\n      for (var col = 0; col < this.colCount; col++) {\n        this.grid[row][col] = new Cell(row, col)\n      }\n    }\n    // flatten all cells on a single array\n    this.allCells = [].concat.apply([], this.grid)\n  }\n\n  /**\n   * Reset grid data.\n   */\n  reset () {\n    for (var row = 0; row < this.rowCount; row++) {\n      for (var col = 0; col < this.colCount; col++) {\n        this.grid[row][col].reachable = false\n        this.grid[row][col].dist = undefined\n        this.grid[row][col].nextStep = undefined\n      }\n    }\n  }\n\n  /**\n   * Get cell at position.\n   * @param  {number} x - X coordinate.\n   * @param  {number} y - Y coordinate.\n   * @return {Cell}\n   */\n  get (row, col) {\n    try {\n      return this.grid[row][col]\n    } catch (any) {\n      return undefined\n    }\n  }\n\n  /**\n   * Get target cell.\n   * @return {Cell}\n   */\n  getTarget () {\n    let row = Math.round(this.rowCount / 2)\n    let col = this.colCount - 1\n    return this.get(row, col)\n  }\n\n  /**\n   * Get the unvisited neighbour cells of the position.\n   * @param  {Cell} cell\n   * @return {Cell[]}\n   */\n  getUnvisitedNeighboursCells (cell) {\n    const coord = cell.coord\n    const grid = this\n    return [\n      {row: coord.row, col: coord.col - 1},\n      {row: coord.row - 1, col: coord.col},\n      {row: coord.row, col: coord.col + 1},\n      {row: coord.row + 1, col: coord.col}\n    ].filter(coord => (\n      !this._isOutOfGrid(coord)\n    )).map(coord => (\n      grid.get(coord.row, coord.col)\n    )).filter(cell => (\n      cell.dist === undefined &&\n      !cell.blocked\n    ))\n  }\n\n  /**\n   * Get the cell that contains the provided position.\n   * @param  {Point} point\n   * @return {Cell}\n   */\n  getCellAtPosition (point) {\n    if (point.x < 0 ||\n      point.x > this.canvasSize.width ||\n      point.y < 0 ||\n      point.y > this.canvasSize.height\n    ) {\n      return undefined\n    }\n    const col = Math.floor(point.x / CELL_EDGE_SIZE)\n    const row = Math.floor(point.y / CELL_EDGE_SIZE)\n    return this.get(row, col)\n  }\n\n  /**\n   * Get the cells that contains the boundaries area.\n   * @param  {Boundaries} boundaries\n   * @return {Cell[]}\n   */\n  getCellsInBoundaries (boundaries) {\n    const topLeftCell = this.getCellAtPosition(boundaries.topLeft)\n    const bottomRightCell = this.getCellAtPosition(boundaries.bottomRight)\n    const cells = []\n    for (let row = topLeftCell.coord.row; row <= bottomRightCell.coord.row; row++) {\n      for (let col = topLeftCell.coord.col; col <= bottomRightCell.coord.col; col++) {\n        cells.push(this.get(row, col))\n      }\n    }\n    return cells\n  }\n\n  /**\n   * Return an array containing all cells.\n   * @return {Cell[]}\n   */\n  getCells () {\n    return this.allCells\n  }\n\n  /**\n   * Return a block of cells containg the point approximately in the center\n   * @param  {Point} point - Point contained in the block,\n   * @param  {number} rowCount - Number of rows in the block.\n   * @param  {number} colCount - Number of cols in the block.\n   * @return {Cell[]}\n   */\n  getCellsAround (point, rowCount, colCount) {\n    const center = this.getCellAtPosition(point)\n    if (!center) {\n      return undefined\n    }\n    const topRow = center.coord.row - Math.floor(rowCount / 2)\n    const bottomRow = topRow + rowCount - 1\n    const leftCol = center.coord.col - Math.floor(colCount / 2)\n    const rightCol = leftCol + colCount - 1\n    if (this._isOutOfGrid({row: topRow, col: leftCol}) ||\n      this._isOutOfGrid({row: bottomRow, col: rightCol})) {\n      return undefined\n    }\n\n    const cells = []\n    for (let row = topRow; row <= bottomRow; row++) {\n      for (let col = leftCol; col <= rightCol; col++) {\n        cells.push(this.get(row, col))\n      }\n    }\n    return cells\n  }\n\n  /**\n   * Check if a coordinate is out of the grid.\n   * @param  {Coord} coord\n   * @return {Boolean}       [description]\n   */\n  _isOutOfGrid (coord) {\n    return coord.col < 0 ||\n      coord.col >= this.colCount ||\n      coord.row < 0 ||\n      coord.row >= this.rowCount\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/grid.js","export default class Coord {\n  /**\n   * @param {number} row\n   * @param {number} col\n   */\n  constructor (row, col) {\n    this.row = row\n    this.col = col\n  }\n\n  /**\n   * Compare two coordinates.\n   * @param {Coord} coord\n   * @return {Boolean}\n   */\n  equals (coord) {\n    return coord && this.row === coord.row && this.col === coord.col\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/coord.js","/**\n * @typedef {Object} Point\n * @property {number} x - The X Coordinate.\n * @property {number} y - The Y Coordinate.\n */\n\n/**\n * @typedef {Object} Boundaries\n * @property {Point} topLeft - top-left point of the object.\n * @property {Point} bottomRight - bottom-right point of the object.\n */\nexport const TOWER_SIZE = {\n  rows: 2,\n  cols: 2\n}\n\nexport class Tower {\n  constructor (boundaries) {\n    this.topLeftPosition = boundaries.topLeft\n    this.width = boundaries.bottomRight.x - boundaries.topLeft.x\n    this.height = boundaries.bottomRight.y - boundaries.topLeft.y\n    // TODO fireRange = calculate tower range\n  }\n\n  /**\n   * Draw the tower on position.\n   * @param  {CanvasRenderingContext2D} context - Canvas renderering context.\n   */\n  draw (context) {\n    context.fillStyle = 'lightgray'\n    context.strokeStyle = 'dimgray'\n    context.fillRect(this.topLeftPosition.x, this.topLeftPosition.y, this.width, this.height)\n    context.strokeRect(this.topLeftPosition.x, this.topLeftPosition.y, this.width, this.height)\n  }\n  /**\n   * Update tower state.\n   * @param  {number} delta - ms since last update.\n   */\n  update (delta) {\n    // TODO \n    // targets = getGoonsInFireRange\n    // targets[0].damage(x)\n    // startReloading\n  }\n\n  /**\n   * Get to top-left and bottom-right points of the tower.\n   * @return {Boundaries}\n   */\n  getBoundaries () {\n    return {\n      'topLeft': this.topLeftPosition,\n      'bottomRight': this.bottomRightPosition\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tower.js","import {imageCache} from './image-cache.js'\nimport {CELL_EDGE_SIZE} from './cell'\n\nconst GOON_IMAGE_SIZE = {\n  width: 14,\n  height: 20\n}\n\nexport default class Goon {\n  constructor (id, initialCell, game, pathFinder) {\n    this.id = id\n    this.game = game\n    this.pathFinder = pathFinder\n    this.cell = initialCell\n    this.cell.hasGoon = true\n    this.position = this.cell.getTopLeftPosition()\n    this.speed = 20 // px/sec\n\n    this._residualStep = 0\n  }\n\n  /**\n   * Draw the goon on position.\n   * @param  {CanvasRenderingContext2D} context - Canvas renderering context.\n   */\n  draw (context) {\n    // context.fillStyle = 'gold'\n    // const cellOrigin = this.cell.getTopLeftPosition()\n    // context.fillRect(cellOrigin.x, cellOrigin.y, CELL_EDGE_SIZE, CELL_EDGE_SIZE)\n\n    const img = imageCache['goon-1']\n    context.drawImage(img, this.position.x, this.position.y - Math.round(GOON_IMAGE_SIZE.height / 2))\n  }\n\n  /**\n   * Update goon state.\n   * @param  {number} delta - ms since last update.\n   */\n  update (delta) {\n    this.cell.hasGoon = false\n    const nextCell = this.pathFinder.nextCell(this.cell, 1)\n    if (!nextCell) {\n      this.game.removeGoon(this)\n      return\n    }\n\n    const offset = this.cell.getOffset(this.position)\n    const targetPosition = {\n      x: nextCell.getTopLeftPosition().x + offset.x,\n      y: nextCell.getTopLeftPosition().y + offset.y\n    }\n\n    const step = (this.speed * delta / 1000.0) + this._residualStep\n    const intStep = Math.floor(step)\n    this._residualStep = step - intStep\n\n    const nextPosition = this.calculateNextPosition(this.position, targetPosition, intStep)\n    // Might happen that step is not enought to change cell\n    const nextPositionCell = this.game.grid.getCellAtPosition(nextPosition)\n\n    if (nextPositionCell) {\n      this.cell = nextPositionCell\n      this.cell.hasGoon = true\n      this.position = nextPosition\n    } else {\n      this.game.removeGoon(this)\n    }\n  }\n\n  /**\n   * Given the current and target position and the size of a step, calculate the new position after one step.\n   * @param  {Point} current - Current position.\n   * @param  {Point} target - Target position.\n   * @param  {number} stepSize - Size of the step (in pixels).\n   * @return {Point} Position after one step.\n   */\n  calculateNextPosition (current, target, stepSize) {\n    // TODO: check this logic for negative dy\n    const dx = target.x - current.x\n    const dy = target.y - current.y\n    const hyp = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2))\n    const sin = dy / hyp\n    const cos = dx / hyp\n\n    const dyStep = sin * stepSize\n    const dxStep = cos * stepSize\n\n    const nextX = current.x + dxStep\n    const nextY = current.y + dyStep\n    return {x: nextX, y: nextY}\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/goon.js","\nexport default class PathFinder {\n  constructor (grid) {\n    this.grid = grid\n    this.recalculate()\n  }\n\n  /**\n   * Recalculate all paths\n   */\n  recalculate () {\n    this.grid.reset()\n    let targetCell = this.grid.getTarget()\n    targetCell.dist = 0\n    targetCell.reachable = true\n    targetCell.nextStep = undefined\n    this.frontier = [targetCell]\n\n    while (this.frontier.length > 0) {\n      let current = this.frontier.shift()\n      let neighboursCells = this.grid.getUnvisitedNeighboursCells(current)\n      for (let neighbourCell of neighboursCells) {\n        neighbourCell.dist = current.dist + 1\n        neighbourCell.reachable = true\n        neighbourCell.nextStep = current\n        this.frontier.push(neighbourCell)\n      }\n    }\n  }\n\n  /**\n   * Get the next position in the path to the target.\n   * @param  {Point} currentPosition - Current position.\n   * @param  {Number} steps - Number of steps to perform.\n   * @return {Point}\n   */\n  nextCell (currentCell, steps = 1) {\n    let nextCell = currentCell.nextStep\n    while (--steps > 0 && nextCell) {\n      nextCell = nextCell.nextStep\n    }\n    return nextCell\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/path-finder.js","class Random {\n  yesOrNo (yesChance) {\n    yesChance = yesChance || 0.5\n    return Math.random() < yesChance\n  }\n\n  getRandomIntExclusive (min, max) {\n    min = Math.ceil(min)\n    max = Math.floor(max)\n    // The maximum is exclusive and the minimum is inclusive\n    return Math.floor(Math.random() * (max - min)) + min\n  }\n\n  getRandomIntInclusive (min, max) {\n    min = Math.ceil(min)\n    max = Math.floor(max)\n    // The maximum is inclusive and the minimum is inclusive\n    return Math.floor(Math.random() * (max - min + 1)) + min\n  }\n\n  getRandomElementFromArray (array) {\n    var index = this.getRandomIntExclusive(0, array.length)\n    return array[index]\n  }\n\n  shuffle (array) {\n    let currentIndex = array.length\n    let temporaryValue, randomIndex\n\n    // While there remain elements to shuffle...\n    while (currentIndex !== 0) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex)\n      currentIndex -= 1\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex]\n      array[currentIndex] = array[randomIndex]\n      array[randomIndex] = temporaryValue\n    }\n  }\n}\n\nexport default new Random()\n\n\n\n// WEBPACK FOOTER //\n// ./src/random.js","/* global requestAnimationFrame */\n\n/**\n * @typedef {Object} Point\n * @property {number} x - The X Coordinate.\n * @property {number} y - The Y Coordinate.\n */\n\nimport {CELL_EDGE_SIZE} from './cell'\n\nclass Renderer {\n  /**\n   * Grid constructor\n   * @param  {HTMLCanvasElement} canvas - HTML canvas.\n   */\n  constructor (canvas, game) {\n    this.canvas = canvas\n    this.game = game\n    this.canvas.width = this.game.grid.canvasSize.width\n    this.canvas.height = this.game.grid.canvasSize.height\n    this.context = this.canvas.getContext('2d')\n    this.animationId = null\n\n    // bind events\n    this.canvas.onclick = this.onCanvasClick.bind(this)\n    this.canvas.onmousemove = this.onMouseMove.bind(this)\n    this.canvas.onmouseout = this.onMouseMove.bind(this)\n  }\n\n  /**\n   * Start the game loop.\n   */\n  start () {\n    this.lastTick = Date.now()\n    this.animationId = requestAnimationFrame(this.tick.bind(this))\n  }\n\n  stop () {\n    this.animationId = null\n  }\n\n  isRunning () {\n    return this.animationId !== null\n  }\n\n  /**\n   * Update state, render and restart the game loop every X ms.\n   */\n  tick () {\n    if (!this.animationId) {\n      return\n    }\n\n    const now = Date.now()\n    const delta = (now - this.lastTick)\n\n    this.game.update(delta)\n    this.lastTick = now\n\n    this.render()\n    this.animationId = requestAnimationFrame(this.tick.bind(this))\n  }\n\n  /**\n   * Draw the grid.\n   */\n  render () {\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height)\n    // 0: highlight\n    if (this.game.highlight) {\n      let stroke = 'green'\n      let fill = 'lightgreen'\n      if (!this.game.highlight.valid) {\n        stroke = 'red'\n        fill = 'lightcoral'\n      }\n      this._paintBoundaries(this.game.highlight.boundaries, stroke, fill)\n    }\n\n    // 1st layer: towers\n    this.game.towers.forEach((tower) => {\n      tower.draw(this.context)\n    })\n\n    // 2nd layer: goons\n    this.game.goons.forEach((goon) => {\n      goon.draw(this.context)\n    })\n  }\n\n  /**\n   * DEBUG: paint a blue square on blocked cells\n   */\n  paintBlockedCells () {\n    this.context.fillStyle = 'lightskyblue'\n    this.context.strokeStyle = 'azure'\n    const blockedCells = this.game.grid.getCells().filter((cell) => cell.blocked)\n    blockedCells.forEach((cell) => {\n      let position = cell.getTopLeftPosition()\n      this.context.strokeRect(position.x, position.y, CELL_EDGE_SIZE, CELL_EDGE_SIZE)\n      this.context.fillRect(position.x, position.y, CELL_EDGE_SIZE, CELL_EDGE_SIZE)\n    })\n\n    this.game.towers.forEach((tower) => {\n      this._paintBoundaries(tower.getBoundaries(), 'red')\n    })\n  }\n\n  /**\n   * Trigger onclick on canvas click.\n   * @param {MouseEvent} event\n   */\n  onCanvasClick (event) {\n    var mousePosition = {\n      x: event.clientX - event.target.offsetLeft,\n      y: event.clientY - event.target.offsetTop\n    }\n    this.game.onUserClick(mousePosition)\n  }\n\n  onMouseMove (event) {\n    var mousePosition = {\n      x: event.clientX - event.target.offsetLeft,\n      y: event.clientY - event.target.offsetTop\n    }\n    this.game.onMouseMove(mousePosition)\n  }\n\n  _paintBoundaries (boundaries, stroke, fill) {\n    let position = boundaries.topLeft\n    let w = boundaries.bottomRight.x - position.x\n    let h = boundaries.bottomRight.y - position.y\n    if (stroke) {\n      this.context.strokeStyle = stroke\n      this.context.strokeRect(position.x, position.y, w, h)\n    }\n    if (fill) {\n      this.context.fillStyle = fill\n      this.context.fillRect(position.x, position.y, w, h)\n    }\n  }\n}\n\nexport default Renderer\n\n\n\n// WEBPACK FOOTER //\n// ./src/renderer.js"],"sourceRoot":""}