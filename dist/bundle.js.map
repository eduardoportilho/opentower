{"version":3,"sources":["webpack:///webpack/bootstrap 89d7721b543865594f98","webpack:///./src/image-cache.js","webpack:///./src/cell.js","webpack:///./src/geometry-utils.js","webpack:///./src/game-config.js","webpack:///./src/index.js","webpack:///./src/game.js","webpack:///./src/grid.js","webpack:///./src/coord.js","webpack:///./src/tower.js","webpack:///./src/drawing-utils.js","webpack:///./src/goon-wave.js","webpack:///./src/goon.js","webpack:///./src/path-finder.js","webpack:///./src/random.js","webpack:///./src/renderer.js"],"names":["loadImageCache","imageUrls","imageCache","onLoadComplete","key","url","img","Image","onload","Object","keys","length","src","CELL_EDGE_SIZE","Cell","row","col","coord","reachable","dist","undefined","nextStep","blocked","isTarget","equals","x","Math","round","y","pointInCell","zero","getTopLeftPosition","calculateDistance","pointA","pointB","dx","dy","sqrt","pow","getPointInLine","origin","anyPointInLine","distance","hyp","sin","cos","dyStep","dxStep","nextX","nextY","getAngleRadians","asin","initialCash","waves","intervalAfterWave","numberOfGoons","intervalBetweenSpawns","goonSpeed","goonLife","goonBounty","init","canvas","document","getElementById","game","renderer","start","initCtrlPanel","onclick","e","stopPropagation","preventDefault","parseInt","value","spawnGoon","speed","goons","forEach","goon","isRunning","stop","Game","grid","width","height","pathFinder","towers","highlight","spawnedGoonCount","spawnCells","getSpawnCells","cash","updateCashDisplay","goonsInside","updateGoonsInsideDisplay","goonWave","position","cost","towerCells","getCellsAround","sizeInCells","rows","cols","some","cell","hasGoon","recalculate","doNotTrapCells","map","concat","isInvalidPosition","towerBoundaries","_getCellsBoudaries","tower","push","mousePosition","isOcuppied","boundaries","valid","spawnCell","getRandomElementFromArray","setInitialCell","bounty","removeGoon","index","findIndex","aGoon","id","splice","delta","update","updateHighlight","textContent","middle","rowCount","count","min","cells","get","topLeft","bottomRight","getBottomRightPosition","Grid","canvasSize","colCount","floor","Array","allCells","apply","any","filter","_isOutOfGrid","point","topLeftCell","getCellAtPosition","bottomRightCell","center","topRow","bottomRow","leftCol","rightCol","Coord","Tower","topLeftPosition","centerPosition","reloadTime","fireRange","damage","timeUntilReloaded","canonAngle","PI","context","fillStyle","strokeStyle","basePct","baseWidth","baseHeight","baseX","baseY","fillRect","strokeRect","rotPct","rotRadius","rotCenterX","rotCenterY","canonPct","canonWidth","canonHeight","canonX","canonY","save","translate","rotate","restore","isLoaded","shoot","reload","getClosestGoonInRange","life","towerCenter","goonsInRange","goonDist","sort","a","b","bottomRightPosition","buildSquarePath","roundRect","circle","startPosition","edgeSize","path","Path2D","startCorner","corners","moveTo","corner","lineTo","ctx","fill","stroke","radius","tl","tr","br","bl","defaultRadius","side","beginPath","quadraticCurveTo","closePath","arc","GoonWave","config","slice","currentWave","timeUntilNexWave","timeUntilNextSpawn","goonsLeft","startOrStopWave","deployGoons","shift","newGoon","Date","now","GOON_IMAGE_SIZE","Goon","fullLife","_residualStep","drawImage","drawLifeBar","greenWidth","max","redWidth","greenX","redX","updatePosition","updateLife","killGoon","nextCell","Error","offset","getOffset","targetPosition","step","intStep","nextPosition","nextPositionCell","goonArrived","PathFinder","reset","targetCell","getTarget","frontier","current","neighboursCells","getUnvisitedNeighboursCells","neighbourCell","currentCell","steps","Random","yesChance","random","ceil","array","getRandomIntExclusive","currentIndex","temporaryValue","randomIndex","Renderer","getContext","animationId","onCanvasClick","bind","onmousemove","onMouseMove","onmouseout","lastTick","requestAnimationFrame","tick","render","clearRect","_paintBoundaries","draw","blockedCells","getCells","getBoundaries","event","clientX","target","offsetLeft","clientY","offsetTop","onUserClick","w","h"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 89d7721b543865594f98","/* global Image */\n\n/**\n * List of images to load.\n * @type {Object}\n */\nconst imageUrls = {\n  'tower-1': '../images/tower-1.png',\n  'goon-1': '../images/goon-1.png'\n}\n\n/**\n * Global image cache.\n * @type {Object}\n */\nexport const imageCache = {}\n\n/**\n * Load the images on the cache and call the callback when ready.\n * @param  {function} onLoadComplete\n */\nexport function loadImageCache (onLoadComplete) {\n  for (let key in imageUrls) {\n    let url = imageUrls[key]\n    let img = new Image()\n    img.onload = () => {\n      imageCache[key] = img\n      if (Object.keys(imageCache).length === Object.keys(imageUrls).length) {\n        onLoadComplete()\n      }\n    }\n    img.src = url\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/image-cache.js","/**\n * @typedef {Object} Point\n * @property {number} x - The X Coordinate.\n * @property {number} y - The Y Coordinate.\n */\n\nimport Coord from './coord'\n\n/**\n * Size of the (square) cell edge.\n * @type {number}\n */\nexport const CELL_EDGE_SIZE = 20\n\n/**\n * Grid cell.\n */\nexport class Cell {\n  /**\n   * @param {number} row - Row number.\n   * @param {number} col - Column number.\n   */\n  constructor (row, col) {\n    this.coord = new Coord(row, col)\n    this.reachable = false\n    this.dist = undefined\n    this.nextStep = undefined\n    this.blocked = false\n    this.isTarget = false\n  }\n\n  /**\n   * Check cell coordinates.\n   * @param {Coord} coord\n   * @return {Boolean}\n   */\n  isOnCoord (coord) {\n    return this.coord.equals(coord)\n  }\n\n  /**\n   * Get the position of the center of the cell in pixels.\n   * @return {Point}\n   */\n  getCenterPosition () {\n    let x = Math.round((this.coord.col * CELL_EDGE_SIZE) + (CELL_EDGE_SIZE / 2))\n    let y = Math.round((this.coord.row * CELL_EDGE_SIZE) + (CELL_EDGE_SIZE / 2))\n    return {x, y}\n  }\n\n  /**\n   * Get the top-left position of the cell in pixels.\n   * @return {Point}\n   */\n  getTopLeftPosition () {\n    let x = this.coord.col * CELL_EDGE_SIZE\n    let y = this.coord.row * CELL_EDGE_SIZE\n    return {x, y}\n  }\n\n  /**\n   * Get the bottom-right position of the cell in pixels.\n   * @return {Point}\n   */\n  getBottomRightPosition () {\n    let x = (this.coord.col + 1) * CELL_EDGE_SIZE\n    let y = (this.coord.row + 1) * CELL_EDGE_SIZE\n    return {x, y}\n  }\n\n  /**\n   * Get the offset of a point inside the cell from the cell's top-left corner.\n   * @param  {Point} pointInCell\n   * @return {Point} offset\n   */\n  getOffset (pointInCell) {\n    const zero = this.getTopLeftPosition()\n    return {\n      x: pointInCell.x - zero.x,\n      y: pointInCell.y - zero.y\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/cell.js","/**\n * Calculate the distance between 2 points.\n * @param  {Point} pointA\n * @param  {Point} pointB\n * @return {number} distance\n */\nexport const calculateDistance = (pointA, pointB) => {\n  const dx = pointB.x - pointA.x\n  const dy = pointB.y - pointA.y\n  return Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2))\n}\n\n/**\n * Let L be the line formed by the 2 given points `origin` and `anyPointInLine`.\n * Return the point in L with the given distance to `origin`.\n * @param  {Point} origin - Origin point.\n * @param  {Point} anyPointInLine - Another poin in the desired line (define direction).\n * @param  {number} distance - Distance from origin to the returned point in pixels.\n * @return {Point} Point in L with the given distance to `origin`.\n */\nexport const getPointInLine = (origin, anyPointInLine, distance) => {\n  const hyp = calculateDistance(origin, anyPointInLine)\n  const dx = anyPointInLine.x - origin.x\n  const dy = anyPointInLine.y - origin.y\n  const sin = dy / hyp\n  const cos = dx / hyp\n\n  const dyStep = sin * distance\n  const dxStep = cos * distance\n\n  const nextX = origin.x + dxStep\n  const nextY = origin.y + dyStep\n  return {x: nextX, y: nextY}\n}\n\n/**\n * Return the angle between the line conecting 2 points and the horizontal axis.\n *\n * Angle signal:\n *  B     |     B\n *    (-) | (-)\n * -------A-------\n *    (+) | (+)\n *  B     |     B\n *\n * @param  {Point} pointA\n * @param  {Point} pointB\n * @return {number} Angle in radians.\n */\nexport const getAngleRadians = (pointA, pointB) => {\n  const dy = pointB.y - pointA.y\n  const hyp = calculateDistance(pointA, pointB)\n  const sin = dy / hyp\n  return Math.asin(sin)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/geometry-utils.js","export default {\n  initialCash: 50,\n  waves: [\n    {\n      intervalAfterWave: 20000,\n      numberOfGoons: 5,\n      intervalBetweenSpawns: 1500,\n      goonSpeed: 20,\n      goonLife: 100,\n      goonBounty: 20\n    },\n    {\n      intervalAfterWave: 20000,\n      numberOfGoons: 10,\n      intervalBetweenSpawns: 1500,\n      goonSpeed: 20,\n      goonLife: 100,\n      goonBounty: 20\n    },\n    {\n      intervalAfterWave: 20000,\n      numberOfGoons: 10,\n      intervalBetweenSpawns: 1500,\n      goonSpeed: 25,\n      goonLife: 120,\n      goonBounty: 20\n    },\n    {\n      intervalAfterWave: 20000,\n      numberOfGoons: 10,\n      intervalBetweenSpawns: 1000,\n      goonSpeed: 25,\n      goonLife: 120,\n      goonBounty: 20\n    }\n  ]\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/game-config.js","import {loadImageCache} from './image-cache.js'\nimport Game from './game.js'\nimport Renderer from './renderer.js'\n\nloadImageCache(init)\n\nfunction init () {\n  const canvas = document.getElementById('canvas')\n  const game = new Game()\n  // TODO game as the object root: create render and delegate\n  const renderer = new Renderer(canvas, game)\n  renderer.start()\n  initCtrlPanel(game, renderer)\n}\n\nfunction initCtrlPanel (game, renderer) {\n  document.getElementById('spawn').onclick = function (e) {\n    e.stopPropagation()\n    e.preventDefault()\n\n    const x = parseInt(document.getElementById('x').value)\n    const y = parseInt(document.getElementById('y').value)\n    game.spawnGoon(x, y)\n  }\n\n  document.getElementById('speedUpdate').onclick = function (e) {\n    e.stopPropagation()\n    e.preventDefault()\n\n    const speed = parseInt(document.getElementById('speed').value)\n    game.goons.forEach(goon => { goon.speed = speed })\n  }\n\n  document.getElementById('pause').onclick = function (e) {\n    e.stopPropagation()\n    e.preventDefault()\n\n    if (renderer.isRunning()) {\n      renderer.stop()\n    } else {\n      renderer.start()\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/**\n * @typedef {Object} Point\n * @property {number} x - The X Coordinate.\n * @property {number} y - The Y Coordinate.\n */\n\nimport Grid from './grid'\nimport Tower from './tower'\nimport GoonWave from './goon-wave'\nimport PathFinder from './path-finder'\nimport random from './random'\nimport gameConfig from './game-config.js'\n\nexport default class Game {\n  constructor () {\n    this.grid = new Grid({width: 1000, height: 600})\n    this.pathFinder = new PathFinder(this.grid)\n    this.towers = []\n    this.goons = []\n    this.highlight = undefined\n    this.spawnedGoonCount = 0\n    this.spawnCells = this.getSpawnCells()\n\n    this.cash = gameConfig.initialCash\n    this.updateCashDisplay()\n\n    this.goonsInside = 0\n    this.updateGoonsInsideDisplay()\n\n    this.goonWave = new GoonWave(this)\n  }\n\n  /**\n   * When a user click a cell.\n   * @param  {Point} position - Cell upper-left position.\n   */\n  onUserClick (position) {\n    if (this.cash < Tower.cost) {\n      // no money, no tower\n      return\n    }\n    const towerCells = this.grid.getCellsAround(position, Tower.sizeInCells.rows, Tower.sizeInCells.cols)\n    // occupied ?\n    if (!towerCells || towerCells.some(cell => cell.blocked || cell.hasGoon)) {\n      return\n    }\n    // 1: block\n    towerCells.forEach(cell => { cell.blocked = true })\n    // 2: recalculate paths\n    this.pathFinder.recalculate()\n    // 3: check for trapped goons and spawn locations\n    const doNotTrapCells = this.goons.map(goon => goon.cell)\n      .concat(this.spawnCells)\n    const isInvalidPosition = doNotTrapCells.some(cell => !cell.reachable)\n    // 4: if trapped, rollback\n    if (isInvalidPosition) {\n      towerCells.forEach(cell => { cell.blocked = false })\n      this.pathFinder.recalculate()\n      return\n    }\n\n    const towerBoundaries = this._getCellsBoudaries(towerCells)\n    const tower = new Tower(towerBoundaries, this)\n    this.towers.push(tower)\n    this.cash -= Tower.cost\n    this.updateCashDisplay()\n  }\n\n  onMouseMove (position) {\n    this.mousePosition = position\n  }\n\n  updateHighlight () {\n    if (!this.mousePosition) {\n      return\n    }\n    const towerCells = this.grid.getCellsAround(\n      this.mousePosition,\n      Tower.sizeInCells.rows,\n      Tower.sizeInCells.cols\n    )\n    if (!towerCells) {\n      this.highlight = undefined\n      return\n    }\n    const towerBoundaries = this._getCellsBoudaries(towerCells)\n    const isOcuppied = towerCells.some(cell => cell.blocked || cell.hasGoon)\n    this.highlight = {\n      boundaries: towerBoundaries,\n      valid: !isOcuppied\n    }\n  }\n\n  /**\n   * Spawn a new goon.\n   */\n  spawnGoon (goon) {\n    const spawnCell = random.getRandomElementFromArray(this.spawnCells)\n    goon.setInitialCell(spawnCell)\n    this.goons.push(goon)\n  }\n\n  killGoon (goon) {\n    this.cash += goon.bounty\n    this.removeGoon(goon)\n    this.updateCashDisplay()\n  }\n\n  goonArrived (goon) {\n    this.goonsInside++\n    this.updateGoonsInsideDisplay()\n    this.removeGoon(goon)\n  }\n\n  removeGoon (goon) {\n    const index = this.goons.findIndex((aGoon) => aGoon.id === goon.id)\n    if (index >= 0) {\n      this.goons.splice(index, 1)\n    }\n  }\n\n  /**\n   * Update the state of the game entities.\n   * @param  {number} delta - ms since last update.\n   */\n  update (delta) {\n    this.goonWave.update(delta)\n    this.towers.forEach((tower) => tower.update(delta))\n    this.goons.forEach((goon) => goon.update(delta))\n    this.updateHighlight()\n  }\n\n  updateCashDisplay () {\n    document.getElementById('cash').textContent = this.cash\n  }\n\n  updateGoonsInsideDisplay () {\n    document.getElementById('goons-inside').textContent = this.goonsInside\n  }\n\n  getSpawnCells () {\n    const middle = Math.round(this.grid.rowCount / 2)\n    let count = Math.min(10, Math.round(this.grid.rowCount / 3))\n    let row = middle - Math.round(count / 2)\n    const cells = []\n    while (count-- > 0) {\n      cells.push(\n        this.grid.get(row++, 0)\n      )\n    }\n    return cells\n  }\n\n  _getCellsBoudaries (cells) {\n    return {\n      topLeft: cells[0].getTopLeftPosition(),\n      bottomRight: cells[cells.length - 1].getBottomRightPosition()\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/game.js","/**\n * @typedef {Object} CellData\n * @property {number} x - The X Coordinate.\n * @property {number} y - The Y Coordinate.\n * @property {number} dist - Number of steps until target.\n * @property {number} nextStep - Next cell on the path to target.\n */\n\nimport {Cell, CELL_EDGE_SIZE} from './cell'\n\nexport default class Grid {\n  constructor (canvasSize) {\n    this.canvasSize = canvasSize\n    this.colCount = Math.floor(canvasSize.width / CELL_EDGE_SIZE)\n    this.rowCount = Math.floor(canvasSize.height / CELL_EDGE_SIZE)\n    this.init()\n  }\n\n  init () {\n    this.grid = new Array(this.rowCount)\n    for (var row = 0; row < this.rowCount; row++) {\n      this.grid[row] = Array(this.colCount)\n      for (var col = 0; col < this.colCount; col++) {\n        this.grid[row][col] = new Cell(row, col)\n      }\n    }\n    // flatten all cells on a single array\n    this.allCells = [].concat.apply([], this.grid)\n  }\n\n  /**\n   * Reset grid data.\n   */\n  reset () {\n    for (var row = 0; row < this.rowCount; row++) {\n      for (var col = 0; col < this.colCount; col++) {\n        this.grid[row][col].reachable = false\n        this.grid[row][col].dist = undefined\n        this.grid[row][col].nextStep = undefined\n      }\n    }\n  }\n\n  /**\n   * Get cell at position.\n   * @param  {number} x - X coordinate.\n   * @param  {number} y - Y coordinate.\n   * @return {Cell}\n   */\n  get (row, col) {\n    try {\n      return this.grid[row][col]\n    } catch (any) {\n      return undefined\n    }\n  }\n\n  /**\n   * Get target cell.\n   * @return {Cell}\n   */\n  getTarget () {\n    let row = Math.round(this.rowCount / 2)\n    let col = this.colCount - 1\n    return this.get(row, col)\n  }\n\n  /**\n   * Get the unvisited neighbour cells of the position.\n   * @param  {Cell} cell\n   * @return {Cell[]}\n   */\n  getUnvisitedNeighboursCells (cell) {\n    const coord = cell.coord\n    const grid = this\n    return [\n      {row: coord.row, col: coord.col - 1},\n      {row: coord.row - 1, col: coord.col},\n      {row: coord.row, col: coord.col + 1},\n      {row: coord.row + 1, col: coord.col}\n    ].filter(coord => (\n      !this._isOutOfGrid(coord)\n    )).map(coord => (\n      grid.get(coord.row, coord.col)\n    )).filter(cell => (\n      cell.dist === undefined &&\n      !cell.blocked\n    ))\n  }\n\n  /**\n   * Get the cell that contains the provided position.\n   * @param  {Point} point\n   * @return {Cell}\n   */\n  getCellAtPosition (point) {\n    if (point.x < 0 ||\n      point.x > this.canvasSize.width ||\n      point.y < 0 ||\n      point.y > this.canvasSize.height\n    ) {\n      return undefined\n    }\n    const col = Math.floor(point.x / CELL_EDGE_SIZE)\n    const row = Math.floor(point.y / CELL_EDGE_SIZE)\n    return this.get(row, col)\n  }\n\n  /**\n   * Get the cells that contains the boundaries area.\n   * @param  {Boundaries} boundaries\n   * @return {Cell[]}\n   */\n  getCellsInBoundaries (boundaries) {\n    const topLeftCell = this.getCellAtPosition(boundaries.topLeft)\n    const bottomRightCell = this.getCellAtPosition(boundaries.bottomRight)\n    const cells = []\n    for (let row = topLeftCell.coord.row; row <= bottomRightCell.coord.row; row++) {\n      for (let col = topLeftCell.coord.col; col <= bottomRightCell.coord.col; col++) {\n        cells.push(this.get(row, col))\n      }\n    }\n    return cells\n  }\n\n  /**\n   * Return an array containing all cells.\n   * @return {Cell[]}\n   */\n  getCells () {\n    return this.allCells\n  }\n\n  /**\n   * Return a block of cells containg the point approximately in the center\n   * @param  {Point} point - Point contained in the block,\n   * @param  {number} rowCount - Number of rows in the block.\n   * @param  {number} colCount - Number of cols in the block.\n   * @return {Cell[]}\n   */\n  getCellsAround (point, rowCount, colCount) {\n    const center = this.getCellAtPosition(point)\n    if (!center) {\n      return undefined\n    }\n    const topRow = center.coord.row - Math.floor(rowCount / 2)\n    const bottomRow = topRow + rowCount - 1\n    const leftCol = center.coord.col - Math.floor(colCount / 2)\n    const rightCol = leftCol + colCount - 1\n    if (this._isOutOfGrid({row: topRow, col: leftCol}) ||\n      this._isOutOfGrid({row: bottomRow, col: rightCol})) {\n      return undefined\n    }\n\n    const cells = []\n    for (let row = topRow; row <= bottomRow; row++) {\n      for (let col = leftCol; col <= rightCol; col++) {\n        cells.push(this.get(row, col))\n      }\n    }\n    return cells\n  }\n\n  /**\n   * Check if a coordinate is out of the grid.\n   * @param  {Coord} coord\n   * @return {Boolean}       [description]\n   */\n  _isOutOfGrid (coord) {\n    return coord.col < 0 ||\n      coord.col >= this.colCount ||\n      coord.row < 0 ||\n      coord.row >= this.rowCount\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/grid.js","export default class Coord {\n  /**\n   * @param {number} row\n   * @param {number} col\n   */\n  constructor (row, col) {\n    this.row = row\n    this.col = col\n  }\n\n  /**\n   * Compare two coordinates.\n   * @param {Coord} coord\n   * @return {Boolean}\n   */\n  equals (coord) {\n    return coord && this.row === coord.row && this.col === coord.col\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/coord.js","import {calculateDistance, getAngleRadians} from './geometry-utils'\nimport {roundRect, circle} from './drawing-utils'\n/**\n * @typedef {Object} Point\n * @property {number} x - The X Coordinate.\n * @property {number} y - The Y Coordinate.\n */\n\n/**\n * @typedef {Object} Boundaries\n * @property {Point} topLeft - top-left point of the object.\n * @property {Point} bottomRight - bottom-right point of the object.\n */\n\nexport default class Tower {\n  constructor (boundaries, game) {\n    this.game = game\n    this.topLeftPosition = boundaries.topLeft\n    this.width = boundaries.bottomRight.x - boundaries.topLeft.x\n    this.height = boundaries.bottomRight.y - boundaries.topLeft.y\n    this.centerPosition = {\n      x: Math.round(boundaries.topLeft.x + (this.width / 2)),\n      y: Math.round(boundaries.topLeft.y + (this.height / 2))\n    }\n    // shooting consts\n    this.reloadTime = 2000\n    this.fireRange = 150\n    this.damage = 5\n\n    // shoting props\n    this.timeUntilReloaded = 0\n    this.canonAngle = Math.PI\n  }\n\n  /**\n   * Draw the tower on position.\n   * @param  {CanvasRenderingContext2D} context - Canvas renderering context.\n   */\n  draw (context) {\n    // grass\n    let x = this.topLeftPosition.x\n    let y = this.topLeftPosition.y\n    let width = this.width\n    let height = this.height\n    context.fillStyle = '#B8E986'\n    context.strokeStyle = '#7ED321'\n    roundRect(context, x, y, width, height, true, true)\n\n    // base\n    const basePct = 3 / 5\n    const baseWidth = Math.round(width * basePct)\n    const baseHeight = Math.round(height * basePct)\n    const baseX = x + Math.round((width - baseWidth) / 2)\n    const baseY = y + Math.round((height - baseHeight) / 2)\n    context.fillStyle = '#D3D3D3'\n    context.strokeStyle = '#979797'\n    context.fillRect(baseX, baseY, baseWidth, baseHeight)\n    context.strokeRect(baseX, baseY, baseWidth, baseHeight)\n\n    // Rotatory device\n    const rotPct = 2 / 5\n    const rotRadius = Math.round(width * rotPct / 2)\n    const rotCenterX = x + Math.round(width / 2)\n    const rotCenterY = y + Math.round(height / 2)\n    context.fillStyle = '#9B9B9B'\n    context.strokeStyle = '#979797'\n    circle(context, rotCenterX, rotCenterY, rotRadius, true, true)\n\n    // canon\n    const canonPct = 22 / 50\n    const canonWidth = Math.round(width * canonPct)\n    const canonHeight = 8\n    const canonX = 0\n    const canonY = 0 - Math.round(canonHeight / 2)\n    context.save()\n    context.translate(rotCenterX, rotCenterY)\n    context.rotate(this.canonAngle)\n    context.fillStyle = '#9B9B9B'\n    context.strokeStyle = '#979797'\n    context.fillRect(canonX, canonY, canonWidth, canonHeight)\n    context.restore()\n  }\n\n  /**\n   * Update tower state.\n   * @param  {number} delta - ms since last update.\n   */\n  update (delta) {\n    if (this.isLoaded()) {\n      this.shoot()\n    } else {\n      this.reload(delta)\n    }\n  }\n\n  reload (delta) {\n    this.timeUntilReloaded -= delta\n  }\n\n  shoot () {\n    const goon = this.getClosestGoonInRange()\n    if (goon) {\n      goon.life -= this.damage\n      this.timeUntilReloaded = this.reloadTime\n      this.canonAngle = getAngleRadians(this.centerPosition, goon.position)\n      if (goon.position.x < this.centerPosition.x) {\n        this.canonAngle = Math.PI - this.canonAngle\n      }\n    }\n  }\n\n  isLoaded () {\n    return this.timeUntilReloaded <= 0\n  }\n\n  getClosestGoonInRange () {\n    let towerCenter = this.centerPosition\n    const goonsInRange = this.game.goons\n      .map(goon => {\n        const dist = calculateDistance(towerCenter, goon.position)\n        return {goon, dist}\n      })\n      .filter(goonDist => goonDist.dist <= this.fireRange)\n      .sort((a, b) => a.dist - b.dist)\n    return goonsInRange.length > 0 ? goonsInRange[0].goon : undefined\n  }\n\n  /**\n   * Get to top-left and bottom-right points of the tower.\n   * @return {Boundaries}\n   */\n  getBoundaries () {\n    return {\n      'topLeft': this.topLeftPosition,\n      'bottomRight': this.bottomRightPosition\n    }\n  }\n}\nTower.cost = 10\nTower.sizeInCells = {\n  rows: 2,\n  cols: 2\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tower.js","/* global Path2D */\n\n/**\n * @typedef {Object} Point\n * @property {number} x - The X Coordinate.\n * @property {number} y - The Y Coordinate.\n */\n\n/**\n * Build a square path.\n * @param  {Point} startPosition\n * @param  {number} edgeSize\n * @return {Path2D}\n */\nexport function buildSquarePath (startPosition, edgeSize) {\n  const path = new Path2D()\n  const startCorner = [startPosition.x, startPosition.y]\n  const corners = [\n    [startPosition.x + edgeSize, startPosition.y],\n    [startPosition.x + edgeSize, startPosition.y + edgeSize],\n    [startPosition.x, startPosition.y + edgeSize],\n    [startPosition.x, startPosition.y]\n  ]\n  path.moveTo(...startCorner)\n  corners.forEach((corner) => {\n    path.lineTo(...corner)\n  })\n  return path\n}\n\n/**\n * Draws a rounded rectangle using the current state of the canvas.\n * If you omit the last three params, it will draw a rectangle\n * outline with a 5 pixel border radius\n * @param {CanvasRenderingContext2D} ctx\n * @param {Number} x The top left x coordinate\n * @param {Number} y The top left y coordinate\n * @param {Number} width The width of the rectangle\n * @param {Number} height The height of the rectangle\n * @param {Boolean} [fill = false] Whether to fill the rectangle.\n * @param {Boolean} [stroke = true] Whether to stroke the rectangle.\n * @param {Number} [radius = 5] The corner radius; It can also be an object\n *                 to specify different radii for corners\n * @param {Number} [radius.tl = 0] Top left\n * @param {Number} [radius.tr = 0] Top right\n * @param {Number} [radius.br = 0] Bottom right\n * @param {Number} [radius.bl = 0] Bottom left\n */\nexport function roundRect (ctx, x, y, width, height, fill, stroke, radius) {\n  if (typeof stroke === 'undefined') {\n    stroke = true\n  }\n  if (typeof radius === 'undefined') {\n    radius = 5\n  }\n  if (typeof radius === 'number') {\n    radius = {tl: radius, tr: radius, br: radius, bl: radius}\n  } else {\n    const defaultRadius = {tl: 0, tr: 0, br: 0, bl: 0}\n    for (var side in defaultRadius) {\n      radius[side] = radius[side] || defaultRadius[side]\n    }\n  }\n  ctx.beginPath()\n  ctx.moveTo(x + radius.tl, y)\n  ctx.lineTo(x + width - radius.tr, y)\n  ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr)\n  ctx.lineTo(x + width, y + height - radius.br)\n  ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height)\n  ctx.lineTo(x + radius.bl, y + height)\n  ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl)\n  ctx.lineTo(x, y + radius.tl)\n  ctx.quadraticCurveTo(x, y, x + radius.tl, y)\n  ctx.closePath()\n  if (fill) {\n    ctx.fill()\n  }\n  if (stroke) {\n    ctx.stroke()\n  }\n}\n\nexport function circle (ctx, x, y, radius, fill, stroke) {\n  ctx.beginPath()\n  ctx.arc(x, y, radius, 0, 2 * Math.PI)\n  fill && ctx.fill()\n  stroke && ctx.stroke()\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/drawing-utils.js","import Goon from './goon'\nimport gameConfig from './game-config.js'\n\nexport default class GoonWave {\n  constructor (game) {\n    this.game = game\n    this.config = gameConfig.waves.slice(0)\n\n    this.currentWave = null\n    this.timeUntilNexWave = 0\n    this.timeUntilNextSpawn = 0\n    this.goonsLeft = 0\n  }\n\n  update (delta) {\n    this.startOrStopWave(delta)\n    this.deployGoons(delta)\n  }\n\n  startOrStopWave (delta) {\n    if (this.currentWave) {\n      // no more goons, end wave\n      if (this.goonsLeft === 0) {\n        this.timeUntilNexWave = this.currentWave.intervalAfterWave\n        this.currentWave = null\n      }\n    } else {\n      this.timeUntilNexWave -= delta\n      // interval ended, start wave\n      if (this.timeUntilNexWave <= 0) {\n        if (this.config.length === 0) {\n          // no more waves, quit\n          return\n        }\n        this.currentWave = this.config.shift()\n        this.timeUntilNextSpawn = this.currentWave.intervalBetweenSpawns\n        this.goonsLeft = this.currentWave.numberOfGoons\n      }\n    }\n  }\n\n  deployGoons (delta) {\n    // is wave running?\n    if (!this.currentWave || this.goonsLeft === 0) {\n      return\n    }\n    // is in interval between spawns? wait...\n    if (this.timeUntilNextSpawn > 0) {\n      this.timeUntilNextSpawn -= delta\n      return\n    }\n\n    // spawn!\n    this.timeUntilNextSpawn = this.currentWave.intervalBetweenSpawns\n    this.goonsLeft--\n    this.game.spawnGoon(this.newGoon())\n  }\n\n  newGoon () {\n    const id = Date.now()\n    const goon = new Goon(\n      id,\n      this.game,\n      this.currentWave.goonSpeed,\n      this.currentWave.goonLife,\n      this.currentWave.goonBounty\n    )\n    return goon\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/goon-wave.js","import {imageCache} from './image-cache.js'\nimport {getPointInLine} from './geometry-utils'\n\nconst GOON_IMAGE_SIZE = {\n  width: 14,\n  height: 20\n}\n\nexport default class Goon {\n  constructor (id, game, speed, life, bounty) {\n    this.id = id\n    this.game = game\n    this.pathFinder = this.game.pathFinder\n    this.speed = speed // px/sec\n    this.fullLife = life\n    this.life = life\n    this.bounty = bounty\n\n    // store the decimals lost in the last step to maintain constant speed\n    this._residualStep = 0\n  }\n\n  setInitialCell (cell) {\n    this.cell = cell\n    this.cell.hasGoon = true\n    this.position = this.cell.getTopLeftPosition()\n  }\n\n  /**\n   * Draw the goon on position.\n   * @param  {CanvasRenderingContext2D} context - Canvas renderering context.\n   */\n  draw (context) {\n    // _Paint cell base:\n    // context.fillStyle = 'gold'\n    // const cellOrigin = this.cell.getTopLeftPosition()\n    // context.fillRect(cellOrigin.x, cellOrigin.y, CELL_EDGE_SIZE, CELL_EDGE_SIZE)\n\n    const img = imageCache['goon-1']\n    context.drawImage(img, this.position.x, this.position.y - Math.round(GOON_IMAGE_SIZE.height / 2))\n    this.drawLifeBar(context)\n  }\n\n  drawLifeBar (context) {\n    const height = 4\n    const width = 20\n    const greenWidth = Math.max(0, Math.round(width * this.life / this.fullLife))\n    const redWidth = width - greenWidth\n\n    const y = this.position.y - width\n    const greenX = this.position.x\n    const redX = this.position.x + greenWidth\n\n    context.fillStyle = 'green'\n    context.fillRect(greenX, y, greenWidth, height)\n    context.fillStyle = 'red'\n    context.fillRect(redX, y, redWidth, height)\n  }\n\n  /**\n   * Update goon state.\n   * @param  {number} delta - ms since last update.\n   */\n  update (delta) {\n    this.updatePosition(delta)\n    this.updateLife(delta)\n  }\n\n  updateLife (delta) {\n    if (this.life <= 0) {\n      this.game.killGoon(this)\n    }\n  }\n\n  updatePosition (delta) {\n    this.cell.hasGoon = false\n    const nextCell = this.pathFinder.nextCell(this.cell, 1)\n    if (!nextCell) {\n      throw new Error('Goon traped!')\n      // this.game.goonArrived(this)\n      // return\n    }\n\n    const offset = this.cell.getOffset(this.position)\n    const targetPosition = {\n      x: nextCell.getTopLeftPosition().x + offset.x,\n      y: nextCell.getTopLeftPosition().y + offset.y\n    }\n\n    const step = (this.speed * delta / 1000.0) + this._residualStep\n    const intStep = Math.floor(step)\n    this._residualStep = step - intStep\n\n    const nextPosition = getPointInLine(this.position, targetPosition, intStep)\n    // Might happen that step is not enought to change cell\n    const nextPositionCell = this.game.grid.getCellAtPosition(nextPosition)\n\n    if (nextPositionCell.isTarget) {\n      this.game.goonArrived(this)\n    } else {\n      this.cell = nextPositionCell\n      this.cell.hasGoon = true\n      this.position = nextPosition\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/goon.js","\nexport default class PathFinder {\n  constructor (grid) {\n    this.grid = grid\n    this.recalculate()\n  }\n\n  /**\n   * Recalculate all paths\n   */\n  recalculate () {\n    this.grid.reset()\n    let targetCell = this.grid.getTarget()\n    targetCell.dist = 0\n    targetCell.reachable = true\n    targetCell.isTarget = true\n    targetCell.nextStep = undefined\n    this.frontier = [targetCell]\n\n    while (this.frontier.length > 0) {\n      let current = this.frontier.shift()\n      let neighboursCells = this.grid.getUnvisitedNeighboursCells(current)\n      for (let neighbourCell of neighboursCells) {\n        neighbourCell.dist = current.dist + 1\n        neighbourCell.reachable = true\n        neighbourCell.nextStep = current\n        this.frontier.push(neighbourCell)\n      }\n    }\n  }\n\n  /**\n   * Get the next position in the path to the target.\n   * @param  {Point} currentPosition - Current position.\n   * @param  {Number} steps - Number of steps to perform.\n   * @return {Point}\n   */\n  nextCell (currentCell, steps = 1) {\n    let nextCell = currentCell.nextStep\n    while (--steps > 0 && nextCell) {\n      nextCell = nextCell.nextStep\n    }\n    return nextCell\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/path-finder.js","class Random {\n  yesOrNo (yesChance) {\n    yesChance = yesChance || 0.5\n    return Math.random() < yesChance\n  }\n\n  getRandomIntExclusive (min, max) {\n    min = Math.ceil(min)\n    max = Math.floor(max)\n    // The maximum is exclusive and the minimum is inclusive\n    return Math.floor(Math.random() * (max - min)) + min\n  }\n\n  getRandomIntInclusive (min, max) {\n    min = Math.ceil(min)\n    max = Math.floor(max)\n    // The maximum is inclusive and the minimum is inclusive\n    return Math.floor(Math.random() * (max - min + 1)) + min\n  }\n\n  getRandomElementFromArray (array) {\n    var index = this.getRandomIntExclusive(0, array.length)\n    return array[index]\n  }\n\n  shuffle (array) {\n    let currentIndex = array.length\n    let temporaryValue, randomIndex\n\n    // While there remain elements to shuffle...\n    while (currentIndex !== 0) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex)\n      currentIndex -= 1\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex]\n      array[currentIndex] = array[randomIndex]\n      array[randomIndex] = temporaryValue\n    }\n  }\n}\n\nexport default new Random()\n\n\n\n// WEBPACK FOOTER //\n// ./src/random.js","/* global requestAnimationFrame */\n\n/**\n * @typedef {Object} Point\n * @property {number} x - The X Coordinate.\n * @property {number} y - The Y Coordinate.\n */\n\nimport {CELL_EDGE_SIZE} from './cell'\n\nclass Renderer {\n  /**\n   * Grid constructor\n   * @param  {HTMLCanvasElement} canvas - HTML canvas.\n   */\n  constructor (canvas, game) {\n    this.canvas = canvas\n    this.game = game\n    this.canvas.width = this.game.grid.canvasSize.width\n    this.canvas.height = this.game.grid.canvasSize.height\n    this.context = this.canvas.getContext('2d')\n    this.animationId = null\n\n    // bind events\n    this.canvas.onclick = this.onCanvasClick.bind(this)\n    this.canvas.onmousemove = this.onMouseMove.bind(this)\n    this.canvas.onmouseout = this.onMouseMove.bind(this)\n  }\n\n  /**\n   * Start the game loop.\n   */\n  start () {\n    this.lastTick = Date.now()\n    this.animationId = requestAnimationFrame(this.tick.bind(this))\n  }\n\n  stop () {\n    this.animationId = null\n  }\n\n  isRunning () {\n    return this.animationId !== null\n  }\n\n  /**\n   * Update state, render and restart the game loop every X ms.\n   */\n  tick () {\n    if (!this.animationId) {\n      return\n    }\n\n    const now = Date.now()\n    const delta = (now - this.lastTick)\n\n    this.game.update(delta)\n    this.lastTick = now\n\n    this.render()\n    this.animationId = requestAnimationFrame(this.tick.bind(this))\n  }\n\n  /**\n   * Draw the grid.\n   */\n  render () {\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height)\n    // 0: highlight\n    if (this.game.highlight) {\n      let stroke = 'green'\n      let fill = 'lightgreen'\n      if (!this.game.highlight.valid) {\n        stroke = 'red'\n        fill = 'lightcoral'\n      }\n      this._paintBoundaries(this.game.highlight.boundaries, stroke, fill)\n    }\n\n    // 1st layer: towers\n    this.game.towers.forEach((tower) => {\n      tower.draw(this.context)\n    })\n\n    // 2nd layer: goons\n    this.game.goons.forEach((goon) => {\n      goon.draw(this.context)\n    })\n  }\n\n  /**\n   * DEBUG: paint a blue square on blocked cells\n   */\n  paintBlockedCells () {\n    this.context.fillStyle = 'lightskyblue'\n    this.context.strokeStyle = 'azure'\n    const blockedCells = this.game.grid.getCells().filter((cell) => cell.blocked)\n    blockedCells.forEach((cell) => {\n      let position = cell.getTopLeftPosition()\n      this.context.strokeRect(position.x, position.y, CELL_EDGE_SIZE, CELL_EDGE_SIZE)\n      this.context.fillRect(position.x, position.y, CELL_EDGE_SIZE, CELL_EDGE_SIZE)\n    })\n\n    this.game.towers.forEach((tower) => {\n      this._paintBoundaries(tower.getBoundaries(), 'red')\n    })\n  }\n\n  /**\n   * Trigger onclick on canvas click.\n   * @param {MouseEvent} event\n   */\n  onCanvasClick (event) {\n    var mousePosition = {\n      x: event.clientX - event.target.offsetLeft,\n      y: event.clientY - event.target.offsetTop\n    }\n    this.game.onUserClick(mousePosition)\n  }\n\n  onMouseMove (event) {\n    var mousePosition = {\n      x: event.clientX - event.target.offsetLeft,\n      y: event.clientY - event.target.offsetTop\n    }\n    this.game.onMouseMove(mousePosition)\n  }\n\n  _paintBoundaries (boundaries, stroke, fill) {\n    let position = boundaries.topLeft\n    let w = boundaries.bottomRight.x - position.x\n    let h = boundaries.bottomRight.y - position.y\n    if (stroke) {\n      this.context.strokeStyle = stroke\n      this.context.strokeRect(position.x, position.y, w, h)\n    }\n    if (fill) {\n      this.context.fillStyle = fill\n      this.context.fillRect(position.x, position.y, w, h)\n    }\n  }\n}\n\nexport default Renderer\n\n\n\n// WEBPACK FOOTER //\n// ./src/renderer.js"],"sourceRoot":""}