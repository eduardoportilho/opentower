{"version":3,"sources":["webpack:///webpack/bootstrap 5ffbbb1f54f9ec963e91","webpack:///./src/image-cache.js","webpack:///./src/cell.js","webpack:///./src/geometry-utils.js","webpack:///./src/index.js","webpack:///./src/game.js","webpack:///./src/grid.js","webpack:///./src/coord.js","webpack:///./src/tower.js","webpack:///./src/drawing-utils.js","webpack:///./src/goon.js","webpack:///./src/path-finder.js","webpack:///./src/random.js","webpack:///./src/renderer.js"],"names":["loadImageCache","imageUrls","imageCache","onLoadComplete","key","url","img","Image","onload","Object","keys","length","src","CELL_EDGE_SIZE","Cell","row","col","coord","reachable","dist","undefined","nextStep","blocked","equals","x","Math","round","y","pointInCell","zero","getTopLeftPosition","calculateDistance","pointA","pointB","dx","dy","sqrt","pow","getPointInLine","origin","anyPointInLine","distance","hyp","sin","cos","dyStep","dxStep","nextX","nextY","init","canvas","document","getElementById","game","renderer","start","initCtrlPanel","onclick","e","stopPropagation","preventDefault","parseInt","value","spawnGoon","speed","goons","forEach","goon","isRunning","stop","Game","grid","width","height","pathFinder","towers","highlight","spawnedGoons","spawnCells","getSpawnCells","intervalId","window","setInterval","spawnGoons","bind","position","towerCells","getCellsAround","rows","cols","some","cell","hasGoon","recalculate","doNotTrapCells","map","concat","isInvalidPosition","towerBoundaries","_getCellsBoudaries","tower","push","mousePosition","isOcuppied","boundaries","valid","NUMBER_OF_GOONS_TO_SPAWN","location","getRandomElementFromArray","clearInterval","spawnCell","get","id","Date","now","index","findIndex","aGoon","splice","delta","update","updateHighlight","middle","rowCount","count","min","cells","topLeft","bottomRight","getBottomRightPosition","Grid","canvasSize","colCount","floor","Array","allCells","apply","any","filter","_isOutOfGrid","point","topLeftCell","getCellAtPosition","bottomRightCell","center","topRow","bottomRow","leftCol","rightCol","Coord","TOWER_SIZE","Tower","topLeftPosition","centerPosition","reloadTime","fireRange","damage","timeUntilReloaded","canonAngle","context","fillStyle","strokeStyle","basePct","baseWidth","baseHeight","baseX","baseY","fillRect","strokeRect","rotPct","rotRadius","rotCenterX","rotCenterY","canonAngleRad","PI","canonPct","canonWidth","canonHeight","canonX","canonY","save","translate","rotate","restore","isLoaded","shoot","reload","getClosestGoonInRange","life","towerCenter","goonsInRange","goonDist","sort","a","b","bottomRightPosition","buildSquarePath","roundRect","circle","startPosition","edgeSize","path","Path2D","startCorner","corners","moveTo","corner","lineTo","ctx","fill","stroke","radius","tl","tr","br","bl","defaultRadius","side","beginPath","quadraticCurveTo","closePath","arc","GOON_IMAGE_SIZE","Goon","initialCell","_residualStep","drawImage","drawLifeBar","greenWidth","max","redWidth","greenX","redX","updatePosition","updateLife","removeGoon","nextCell","offset","getOffset","targetPosition","step","intStep","nextPosition","nextPositionCell","PathFinder","reset","targetCell","getTarget","frontier","current","shift","neighboursCells","getUnvisitedNeighboursCells","neighbourCell","currentCell","steps","Random","yesChance","random","ceil","array","getRandomIntExclusive","currentIndex","temporaryValue","randomIndex","Renderer","getContext","animationId","onCanvasClick","onmousemove","onMouseMove","onmouseout","lastTick","requestAnimationFrame","tick","render","clearRect","_paintBoundaries","draw","blockedCells","getCells","getBoundaries","event","clientX","target","offsetLeft","clientY","offsetTop","onUserClick","w","h"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5ffbbb1f54f9ec963e91","/* global Image */\n\n/**\n * List of images to load.\n * @type {Object}\n */\nconst imageUrls = {\n  'tower-1': '../images/tower-1.png',\n  'goon-1': '../images/goon-1.png'\n}\n\n/**\n * Global image cache.\n * @type {Object}\n */\nexport const imageCache = {}\n\n/**\n * Load the images on the cache and call the callback when ready.\n * @param  {function} onLoadComplete\n */\nexport function loadImageCache (onLoadComplete) {\n  for (let key in imageUrls) {\n    let url = imageUrls[key]\n    let img = new Image()\n    img.onload = () => {\n      imageCache[key] = img\n      if (Object.keys(imageCache).length === Object.keys(imageUrls).length) {\n        onLoadComplete()\n      }\n    }\n    img.src = url\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/image-cache.js","/**\n * @typedef {Object} Point\n * @property {number} x - The X Coordinate.\n * @property {number} y - The Y Coordinate.\n */\n\nimport Coord from './coord'\n\n/**\n * Size of the (square) cell edge.\n * @type {number}\n */\nexport const CELL_EDGE_SIZE = 20\n\n/**\n * Grid cell.\n */\nexport class Cell {\n  /**\n   * @param {number} row - Row number.\n   * @param {number} col - Column number.\n   */\n  constructor (row, col) {\n    this.coord = new Coord(row, col)\n    this.reachable = false\n    this.dist = undefined\n    this.nextStep = undefined\n    this.blocked = false\n  }\n\n  /**\n   * Check cell coordinates.\n   * @param {Coord} coord\n   * @return {Boolean}\n   */\n  isOnCoord (coord) {\n    return this.coord.equals(coord)\n  }\n\n  /**\n   * Get the position of the center of the cell in pixels.\n   * @return {Point}\n   */\n  getCenterPosition () {\n    let x = Math.round((this.coord.col * CELL_EDGE_SIZE) + (CELL_EDGE_SIZE / 2))\n    let y = Math.round((this.coord.row * CELL_EDGE_SIZE) + (CELL_EDGE_SIZE / 2))\n    return {x, y}\n  }\n\n  /**\n   * Get the top-left position of the cell in pixels.\n   * @return {Point}\n   */\n  getTopLeftPosition () {\n    let x = this.coord.col * CELL_EDGE_SIZE\n    let y = this.coord.row * CELL_EDGE_SIZE\n    return {x, y}\n  }\n\n  /**\n   * Get the bottom-right position of the cell in pixels.\n   * @return {Point}\n   */\n  getBottomRightPosition () {\n    let x = (this.coord.col + 1) * CELL_EDGE_SIZE\n    let y = (this.coord.row + 1) * CELL_EDGE_SIZE\n    return {x, y}\n  }\n\n  /**\n   * Get the offset of a point inside the cell from the cell's top-left corner.\n   * @param  {Point} pointInCell\n   * @return {Point} offset\n   */\n  getOffset (pointInCell) {\n    const zero = this.getTopLeftPosition()\n    return {\n      x: pointInCell.x - zero.x,\n      y: pointInCell.y - zero.y\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/cell.js","/**\n * Calculate the distance between 2 points.\n * @param  {Point} pointA\n * @param  {Point} pointB\n * @return {number} distance\n */\nexport const calculateDistance = (pointA, pointB) => {\n  const dx = pointB.x - pointA.x\n  const dy = pointB.y - pointA.y\n  return Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2))\n}\n\n/**\n * Let L be the line formed by the 2 given points `origin` and `anyPointInLine`.\n * Return the point in L with the given distance to `origin`.\n * @param  {Point} origin - Origin point.\n * @param  {Point} anyPointInLine - Another poin in the desired line (define direction).\n * @param  {number} distance - Distance from origin to the returned point in pixels.\n * @return {Point} Point in L with the given distance to `origin`.\n */\nexport const getPointInLine = (origin, anyPointInLine, distance) => {\n  const hyp = calculateDistance(origin, anyPointInLine)\n  const dx = anyPointInLine.x - origin.x\n  const dy = anyPointInLine.y - origin.y\n  const sin = dy / hyp\n  const cos = dx / hyp\n\n  const dyStep = sin * distance\n  const dxStep = cos * distance\n\n  const nextX = origin.x + dxStep\n  const nextY = origin.y + dyStep\n  return {x: nextX, y: nextY}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/geometry-utils.js","import {loadImageCache} from './image-cache.js'\nimport Game from './game.js'\nimport Renderer from './renderer.js'\n\nloadImageCache(init)\n\nfunction init () {\n  const canvas = document.getElementById('canvas')\n  const game = new Game()\n  const renderer = new Renderer(canvas, game)\n  renderer.start()\n  initCtrlPanel(game, renderer)\n}\n\nfunction initCtrlPanel (game, renderer) {\n  document.getElementById('spawn').onclick = function (e) {\n    e.stopPropagation()\n    e.preventDefault()\n\n    const x = parseInt(document.getElementById('x').value)\n    const y = parseInt(document.getElementById('y').value)\n    game.spawnGoon(x, y)\n  }\n\n  document.getElementById('speedUpdate').onclick = function (e) {\n    e.stopPropagation()\n    e.preventDefault()\n\n    const speed = parseInt(document.getElementById('speed').value)\n    game.goons.forEach(goon => { goon.speed = speed })\n  }\n\n  document.getElementById('pause').onclick = function (e) {\n    e.stopPropagation()\n    e.preventDefault()\n\n    if (renderer.isRunning()) {\n      renderer.stop()\n    } else {\n      renderer.start()\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/**\n * @typedef {Object} Point\n * @property {number} x - The X Coordinate.\n * @property {number} y - The Y Coordinate.\n */\n\nimport Grid from './grid'\nimport {Tower, TOWER_SIZE} from './tower'\nimport Goon from './goon'\nimport PathFinder from './path-finder'\nimport random from './random'\n\nexport default class Game {\n  constructor () {\n    this.grid = new Grid({width: 1000, height: 600})\n    this.pathFinder = new PathFinder(this.grid)\n    this.towers = []\n    this.goons = []\n    this.highlight = undefined\n    this.spawnedGoons = 0\n    this.spawnCells = this.getSpawnCells()\n\n    this.intervalId = window.setInterval(this.spawnGoons.bind(this), 800)\n  }\n\n  /**\n   * When a user click a cell.\n   * @param  {Point} position - Cell upper-left position.\n   */\n  onUserClick (position) {\n    const towerCells = this.grid.getCellsAround(position, TOWER_SIZE.rows, TOWER_SIZE.cols)\n    // occupied ?\n    if (!towerCells || towerCells.some(cell => cell.blocked || cell.hasGoon)) {\n      return\n    }\n    // 1: block\n    towerCells.forEach(cell => { cell.blocked = true })\n    // 2: recalculate paths\n    this.pathFinder.recalculate()\n    // 3: check for trapped goons and spawn locations\n    const doNotTrapCells = this.goons.map(goon => goon.cell)\n      .concat(this.spawnCells)\n    const isInvalidPosition = doNotTrapCells.some(cell => !cell.reachable)\n    // 4: if trapped, rollback\n    if (isInvalidPosition) {\n      towerCells.forEach(cell => { cell.blocked = false })\n      this.pathFinder.recalculate()\n      return\n    }\n\n    const towerBoundaries = this._getCellsBoudaries(towerCells)\n    const tower = new Tower(towerBoundaries, this)\n    this.towers.push(tower)\n  }\n\n  onMouseMove (position) {\n    this.mousePosition = position\n  }\n\n  updateHighlight () {\n    if (!this.mousePosition) {\n      return\n    }\n    const towerCells = this.grid.getCellsAround(this.mousePosition, TOWER_SIZE.rows, TOWER_SIZE.cols)\n    if (!towerCells) {\n      this.highlight = undefined\n      return\n    }\n    const towerBoundaries = this._getCellsBoudaries(towerCells)\n    const isOcuppied = towerCells.some(cell => cell.blocked || cell.hasGoon)\n    this.highlight = {\n      boundaries: towerBoundaries,\n      valid: !isOcuppied\n    }\n  }\n\n  /**\n   * Spawn a new goon.\n   */\n  spawnGoons () {\n    const NUMBER_OF_GOONS_TO_SPAWN = 10\n    const location = random.getRandomElementFromArray(this.spawnCells).coord\n    this.spawnGoon(location.row, location.col)\n    if (++this.spawnedGoons >= NUMBER_OF_GOONS_TO_SPAWN) {\n      window.clearInterval(this.intervalId)\n    }\n  }\n\n  spawnGoon (row, col) {\n    const spawnCell = this.grid.get(row, col)\n    const id = Date.now()\n    const goon = new Goon(id, spawnCell, this, this.pathFinder)\n    this.goons.push(goon)\n  }\n\n  removeGoon (goon) {\n    const index = this.goons.findIndex((aGoon) => aGoon.id === goon.id)\n    if (index >= 0) {\n      this.goons.splice(index, 1)\n    }\n  }\n\n  /**\n   * Update the state of the game entities.\n   * @param  {number} delta - ms since last update.\n   */\n  update (delta) {\n    this.towers.forEach((tower) => tower.update(delta))\n    this.goons.forEach((goon) => goon.update(delta))\n    this.updateHighlight()\n  }\n\n  getSpawnCells () {\n    const middle = Math.round(this.grid.rowCount / 2)\n    let count = Math.min(10, Math.round(this.grid.rowCount / 3))\n    let row = middle - Math.round(count / 2)\n    const cells = []\n    while (count-- > 0) {\n      cells.push(\n        this.grid.get(row++, 0)\n      )\n    }\n    return cells\n  }\n\n  _getCellsBoudaries (cells) {\n    return {\n      topLeft: cells[0].getTopLeftPosition(),\n      bottomRight: cells[cells.length - 1].getBottomRightPosition()\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/game.js","/**\n * @typedef {Object} CellData\n * @property {number} x - The X Coordinate.\n * @property {number} y - The Y Coordinate.\n * @property {number} dist - Number of steps until target.\n * @property {number} nextStep - Next cell on the path to target.\n */\n\nimport {Cell, CELL_EDGE_SIZE} from './cell'\n\nexport default class Grid {\n  constructor (canvasSize) {\n    this.canvasSize = canvasSize\n    this.colCount = Math.floor(canvasSize.width / CELL_EDGE_SIZE)\n    this.rowCount = Math.floor(canvasSize.height / CELL_EDGE_SIZE)\n    this.init()\n  }\n\n  init () {\n    this.grid = new Array(this.rowCount)\n    for (var row = 0; row < this.rowCount; row++) {\n      this.grid[row] = Array(this.colCount)\n      for (var col = 0; col < this.colCount; col++) {\n        this.grid[row][col] = new Cell(row, col)\n      }\n    }\n    // flatten all cells on a single array\n    this.allCells = [].concat.apply([], this.grid)\n  }\n\n  /**\n   * Reset grid data.\n   */\n  reset () {\n    for (var row = 0; row < this.rowCount; row++) {\n      for (var col = 0; col < this.colCount; col++) {\n        this.grid[row][col].reachable = false\n        this.grid[row][col].dist = undefined\n        this.grid[row][col].nextStep = undefined\n      }\n    }\n  }\n\n  /**\n   * Get cell at position.\n   * @param  {number} x - X coordinate.\n   * @param  {number} y - Y coordinate.\n   * @return {Cell}\n   */\n  get (row, col) {\n    try {\n      return this.grid[row][col]\n    } catch (any) {\n      return undefined\n    }\n  }\n\n  /**\n   * Get target cell.\n   * @return {Cell}\n   */\n  getTarget () {\n    let row = Math.round(this.rowCount / 2)\n    let col = this.colCount - 1\n    return this.get(row, col)\n  }\n\n  /**\n   * Get the unvisited neighbour cells of the position.\n   * @param  {Cell} cell\n   * @return {Cell[]}\n   */\n  getUnvisitedNeighboursCells (cell) {\n    const coord = cell.coord\n    const grid = this\n    return [\n      {row: coord.row, col: coord.col - 1},\n      {row: coord.row - 1, col: coord.col},\n      {row: coord.row, col: coord.col + 1},\n      {row: coord.row + 1, col: coord.col}\n    ].filter(coord => (\n      !this._isOutOfGrid(coord)\n    )).map(coord => (\n      grid.get(coord.row, coord.col)\n    )).filter(cell => (\n      cell.dist === undefined &&\n      !cell.blocked\n    ))\n  }\n\n  /**\n   * Get the cell that contains the provided position.\n   * @param  {Point} point\n   * @return {Cell}\n   */\n  getCellAtPosition (point) {\n    if (point.x < 0 ||\n      point.x > this.canvasSize.width ||\n      point.y < 0 ||\n      point.y > this.canvasSize.height\n    ) {\n      return undefined\n    }\n    const col = Math.floor(point.x / CELL_EDGE_SIZE)\n    const row = Math.floor(point.y / CELL_EDGE_SIZE)\n    return this.get(row, col)\n  }\n\n  /**\n   * Get the cells that contains the boundaries area.\n   * @param  {Boundaries} boundaries\n   * @return {Cell[]}\n   */\n  getCellsInBoundaries (boundaries) {\n    const topLeftCell = this.getCellAtPosition(boundaries.topLeft)\n    const bottomRightCell = this.getCellAtPosition(boundaries.bottomRight)\n    const cells = []\n    for (let row = topLeftCell.coord.row; row <= bottomRightCell.coord.row; row++) {\n      for (let col = topLeftCell.coord.col; col <= bottomRightCell.coord.col; col++) {\n        cells.push(this.get(row, col))\n      }\n    }\n    return cells\n  }\n\n  /**\n   * Return an array containing all cells.\n   * @return {Cell[]}\n   */\n  getCells () {\n    return this.allCells\n  }\n\n  /**\n   * Return a block of cells containg the point approximately in the center\n   * @param  {Point} point - Point contained in the block,\n   * @param  {number} rowCount - Number of rows in the block.\n   * @param  {number} colCount - Number of cols in the block.\n   * @return {Cell[]}\n   */\n  getCellsAround (point, rowCount, colCount) {\n    const center = this.getCellAtPosition(point)\n    if (!center) {\n      return undefined\n    }\n    const topRow = center.coord.row - Math.floor(rowCount / 2)\n    const bottomRow = topRow + rowCount - 1\n    const leftCol = center.coord.col - Math.floor(colCount / 2)\n    const rightCol = leftCol + colCount - 1\n    if (this._isOutOfGrid({row: topRow, col: leftCol}) ||\n      this._isOutOfGrid({row: bottomRow, col: rightCol})) {\n      return undefined\n    }\n\n    const cells = []\n    for (let row = topRow; row <= bottomRow; row++) {\n      for (let col = leftCol; col <= rightCol; col++) {\n        cells.push(this.get(row, col))\n      }\n    }\n    return cells\n  }\n\n  /**\n   * Check if a coordinate is out of the grid.\n   * @param  {Coord} coord\n   * @return {Boolean}       [description]\n   */\n  _isOutOfGrid (coord) {\n    return coord.col < 0 ||\n      coord.col >= this.colCount ||\n      coord.row < 0 ||\n      coord.row >= this.rowCount\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/grid.js","export default class Coord {\n  /**\n   * @param {number} row\n   * @param {number} col\n   */\n  constructor (row, col) {\n    this.row = row\n    this.col = col\n  }\n\n  /**\n   * Compare two coordinates.\n   * @param {Coord} coord\n   * @return {Boolean}\n   */\n  equals (coord) {\n    return coord && this.row === coord.row && this.col === coord.col\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/coord.js","import {calculateDistance} from './geometry-utils'\nimport {roundRect, circle} from './drawing-utils'\n/**\n * @typedef {Object} Point\n * @property {number} x - The X Coordinate.\n * @property {number} y - The Y Coordinate.\n */\n\n/**\n * @typedef {Object} Boundaries\n * @property {Point} topLeft - top-left point of the object.\n * @property {Point} bottomRight - bottom-right point of the object.\n */\nexport const TOWER_SIZE = {\n  rows: 2,\n  cols: 2\n}\n\nexport class Tower {\n  constructor (boundaries, game) {\n    this.game = game\n    this.topLeftPosition = boundaries.topLeft\n    this.width = boundaries.bottomRight.x - boundaries.topLeft.x\n    this.height = boundaries.bottomRight.y - boundaries.topLeft.y\n    this.centerPosition = {\n      x: Math.round(boundaries.topLeft.x + (this.width / 2)),\n      y: Math.round(boundaries.topLeft.y + (this.height / 2))\n    }\n    // shooting consts\n    this.reloadTime = 2000\n    this.fireRange = 150\n    this.damage = 5\n\n    // shoting props\n    this.timeUntilReloaded = 0\n    this.canonAngle = 180\n  }\n\n  /**\n   * Draw the tower on position.\n   * @param  {CanvasRenderingContext2D} context - Canvas renderering context.\n   */\n  draw (context) {\n    // grass\n    let x = this.topLeftPosition.x\n    let y = this.topLeftPosition.y\n    let width = this.width\n    let height = this.height\n    context.fillStyle = '#B8E986'\n    context.strokeStyle = '#7ED321'\n    roundRect(context, x, y, width, height, true, true)\n\n    // base\n    const basePct = 3 / 5\n    const baseWidth = Math.round(width * basePct)\n    const baseHeight = Math.round(height * basePct)\n    const baseX = x + Math.round((width - baseWidth) / 2)\n    const baseY = y + Math.round((height - baseHeight) / 2)\n    context.fillStyle = '#D3D3D3'\n    context.strokeStyle = '#979797'\n    context.fillRect(baseX, baseY, baseWidth, baseHeight)\n    context.strokeRect(baseX, baseY, baseWidth, baseHeight)\n\n    // Rotatory device\n    const rotPct = 2 / 5\n    const rotRadius = Math.round(width * rotPct / 2)\n    const rotCenterX = x + Math.round(width / 2)\n    const rotCenterY = y + Math.round(height / 2)\n    context.fillStyle = '#9B9B9B'\n    context.strokeStyle = '#979797'\n    circle(context, rotCenterX, rotCenterY, rotRadius, true, true)\n\n    // canon\n    const canonAngleRad = (Math.PI / 180) * this.canonAngle\n    const canonPct = 22 / 50\n    const canonWidth = Math.round(width * canonPct)\n    const canonHeight = 8\n    const canonX = 0\n    const canonY = 0 - Math.round(canonHeight / 2)\n    context.save()\n    context.translate(rotCenterX, rotCenterY)\n    context.rotate(canonAngleRad)\n    context.fillStyle = '#9B9B9B'\n    context.strokeStyle = '#979797'\n    context.fillRect(canonX, canonY, canonWidth, canonHeight)\n    context.restore()\n  }\n\n  /**\n   * Update tower state.\n   * @param  {number} delta - ms since last update.\n   */\n  update (delta) {\n    if (this.isLoaded()) {\n      this.shoot()\n    } else {\n      this.reload(delta)\n    }\n  }\n\n  reload (delta) {\n    this.timeUntilReloaded -= delta\n  }\n\n  shoot () {\n    const goon = this.getClosestGoonInRange()\n    if (goon) {\n      goon.life -= this.damage\n      this.timeUntilReloaded = this.reloadTime\n    }\n  }\n\n  isLoaded () {\n    return this.timeUntilReloaded <= 0\n  }\n\n  getClosestGoonInRange () {\n    let towerCenter = this.centerPosition\n    const goonsInRange = this.game.goons\n      .map(goon => {\n        const dist = calculateDistance(towerCenter, goon.position)\n        return {goon, dist}\n      })\n      .filter(goonDist => goonDist.dist <= this.fireRange)\n      .sort((a, b) => a.dist - b.dist)\n    return goonsInRange.length > 0 ? goonsInRange[0].goon : undefined\n  }\n\n  /**\n   * Get to top-left and bottom-right points of the tower.\n   * @return {Boundaries}\n   */\n  getBoundaries () {\n    return {\n      'topLeft': this.topLeftPosition,\n      'bottomRight': this.bottomRightPosition\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tower.js","/* global Path2D */\n\n/**\n * @typedef {Object} Point\n * @property {number} x - The X Coordinate.\n * @property {number} y - The Y Coordinate.\n */\n\n/**\n * Build a square path.\n * @param  {Point} startPosition\n * @param  {number} edgeSize\n * @return {Path2D}\n */\nexport function buildSquarePath (startPosition, edgeSize) {\n  const path = new Path2D()\n  const startCorner = [startPosition.x, startPosition.y]\n  const corners = [\n    [startPosition.x + edgeSize, startPosition.y],\n    [startPosition.x + edgeSize, startPosition.y + edgeSize],\n    [startPosition.x, startPosition.y + edgeSize],\n    [startPosition.x, startPosition.y]\n  ]\n  path.moveTo(...startCorner)\n  corners.forEach((corner) => {\n    path.lineTo(...corner)\n  })\n  return path\n}\n\n/**\n * Draws a rounded rectangle using the current state of the canvas.\n * If you omit the last three params, it will draw a rectangle\n * outline with a 5 pixel border radius\n * @param {CanvasRenderingContext2D} ctx\n * @param {Number} x The top left x coordinate\n * @param {Number} y The top left y coordinate\n * @param {Number} width The width of the rectangle\n * @param {Number} height The height of the rectangle\n * @param {Boolean} [fill = false] Whether to fill the rectangle.\n * @param {Boolean} [stroke = true] Whether to stroke the rectangle.\n * @param {Number} [radius = 5] The corner radius; It can also be an object\n *                 to specify different radii for corners\n * @param {Number} [radius.tl = 0] Top left\n * @param {Number} [radius.tr = 0] Top right\n * @param {Number} [radius.br = 0] Bottom right\n * @param {Number} [radius.bl = 0] Bottom left\n */\nexport function roundRect (ctx, x, y, width, height, fill, stroke, radius) {\n  if (typeof stroke === 'undefined') {\n    stroke = true\n  }\n  if (typeof radius === 'undefined') {\n    radius = 5\n  }\n  if (typeof radius === 'number') {\n    radius = {tl: radius, tr: radius, br: radius, bl: radius}\n  } else {\n    const defaultRadius = {tl: 0, tr: 0, br: 0, bl: 0}\n    for (var side in defaultRadius) {\n      radius[side] = radius[side] || defaultRadius[side]\n    }\n  }\n  ctx.beginPath()\n  ctx.moveTo(x + radius.tl, y)\n  ctx.lineTo(x + width - radius.tr, y)\n  ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr)\n  ctx.lineTo(x + width, y + height - radius.br)\n  ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height)\n  ctx.lineTo(x + radius.bl, y + height)\n  ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl)\n  ctx.lineTo(x, y + radius.tl)\n  ctx.quadraticCurveTo(x, y, x + radius.tl, y)\n  ctx.closePath()\n  if (fill) {\n    ctx.fill()\n  }\n  if (stroke) {\n    ctx.stroke()\n  }\n}\n\nexport function circle (ctx, x, y, radius, fill, stroke) {\n  ctx.beginPath()\n  ctx.arc(x, y, radius, 0, 2 * Math.PI)\n  fill && ctx.fill()\n  stroke && ctx.stroke()\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/drawing-utils.js","import {imageCache} from './image-cache.js'\nimport {getPointInLine} from './geometry-utils'\n\nconst GOON_IMAGE_SIZE = {\n  width: 14,\n  height: 20\n}\n\nexport default class Goon {\n  constructor (id, initialCell, game, pathFinder) {\n    this.id = id\n    this.game = game\n    this.pathFinder = pathFinder\n    this.cell = initialCell\n    this.cell.hasGoon = true\n    this.position = this.cell.getTopLeftPosition()\n    this.speed = 20 // px/sec\n    this.life = 100\n\n    // store the decimals lost in the last step to maintain constant speed\n    this._residualStep = 0\n  }\n\n  /**\n   * Draw the goon on position.\n   * @param  {CanvasRenderingContext2D} context - Canvas renderering context.\n   */\n  draw (context) {\n    // _Paint cell base:\n    // context.fillStyle = 'gold'\n    // const cellOrigin = this.cell.getTopLeftPosition()\n    // context.fillRect(cellOrigin.x, cellOrigin.y, CELL_EDGE_SIZE, CELL_EDGE_SIZE)\n\n    const img = imageCache['goon-1']\n    context.drawImage(img, this.position.x, this.position.y - Math.round(GOON_IMAGE_SIZE.height / 2))\n    this.drawLifeBar(context)\n  }\n\n  drawLifeBar (context) {\n    const height = 4\n    const width = 20\n    const greenWidth = Math.max(0, Math.round(width * this.life / 100))\n    const redWidth = width - greenWidth\n\n    const y = this.position.y - 20\n    const greenX = this.position.x\n    const redX = this.position.x + greenWidth\n\n    context.fillStyle = 'green'\n    context.fillRect(greenX, y, greenWidth, height)\n    context.fillStyle = 'red'\n    context.fillRect(redX, y, redWidth, height)\n  }\n\n  /**\n   * Update goon state.\n   * @param  {number} delta - ms since last update.\n   */\n  update (delta) {\n    this.updatePosition(delta)\n    this.updateLife(delta)\n  }\n\n  updateLife (delta) {\n    if (this.life <= 0) {\n      this.game.removeGoon(this)\n    }\n  }\n\n  updatePosition (delta) {\n    this.cell.hasGoon = false\n    const nextCell = this.pathFinder.nextCell(this.cell, 1)\n    if (!nextCell) {\n      this.game.removeGoon(this)\n      return\n    }\n\n    const offset = this.cell.getOffset(this.position)\n    const targetPosition = {\n      x: nextCell.getTopLeftPosition().x + offset.x,\n      y: nextCell.getTopLeftPosition().y + offset.y\n    }\n\n    const step = (this.speed * delta / 1000.0) + this._residualStep\n    const intStep = Math.floor(step)\n    this._residualStep = step - intStep\n\n    const nextPosition = getPointInLine(this.position, targetPosition, intStep)\n    // Might happen that step is not enought to change cell\n    const nextPositionCell = this.game.grid.getCellAtPosition(nextPosition)\n\n    if (nextPositionCell) {\n      this.cell = nextPositionCell\n      this.cell.hasGoon = true\n      this.position = nextPosition\n    } else {\n      this.game.removeGoon(this)\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/goon.js","\nexport default class PathFinder {\n  constructor (grid) {\n    this.grid = grid\n    this.recalculate()\n  }\n\n  /**\n   * Recalculate all paths\n   */\n  recalculate () {\n    this.grid.reset()\n    let targetCell = this.grid.getTarget()\n    targetCell.dist = 0\n    targetCell.reachable = true\n    targetCell.nextStep = undefined\n    this.frontier = [targetCell]\n\n    while (this.frontier.length > 0) {\n      let current = this.frontier.shift()\n      let neighboursCells = this.grid.getUnvisitedNeighboursCells(current)\n      for (let neighbourCell of neighboursCells) {\n        neighbourCell.dist = current.dist + 1\n        neighbourCell.reachable = true\n        neighbourCell.nextStep = current\n        this.frontier.push(neighbourCell)\n      }\n    }\n  }\n\n  /**\n   * Get the next position in the path to the target.\n   * @param  {Point} currentPosition - Current position.\n   * @param  {Number} steps - Number of steps to perform.\n   * @return {Point}\n   */\n  nextCell (currentCell, steps = 1) {\n    let nextCell = currentCell.nextStep\n    while (--steps > 0 && nextCell) {\n      nextCell = nextCell.nextStep\n    }\n    return nextCell\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/path-finder.js","class Random {\n  yesOrNo (yesChance) {\n    yesChance = yesChance || 0.5\n    return Math.random() < yesChance\n  }\n\n  getRandomIntExclusive (min, max) {\n    min = Math.ceil(min)\n    max = Math.floor(max)\n    // The maximum is exclusive and the minimum is inclusive\n    return Math.floor(Math.random() * (max - min)) + min\n  }\n\n  getRandomIntInclusive (min, max) {\n    min = Math.ceil(min)\n    max = Math.floor(max)\n    // The maximum is inclusive and the minimum is inclusive\n    return Math.floor(Math.random() * (max - min + 1)) + min\n  }\n\n  getRandomElementFromArray (array) {\n    var index = this.getRandomIntExclusive(0, array.length)\n    return array[index]\n  }\n\n  shuffle (array) {\n    let currentIndex = array.length\n    let temporaryValue, randomIndex\n\n    // While there remain elements to shuffle...\n    while (currentIndex !== 0) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex)\n      currentIndex -= 1\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex]\n      array[currentIndex] = array[randomIndex]\n      array[randomIndex] = temporaryValue\n    }\n  }\n}\n\nexport default new Random()\n\n\n\n// WEBPACK FOOTER //\n// ./src/random.js","/* global requestAnimationFrame */\n\n/**\n * @typedef {Object} Point\n * @property {number} x - The X Coordinate.\n * @property {number} y - The Y Coordinate.\n */\n\nimport {CELL_EDGE_SIZE} from './cell'\n\nclass Renderer {\n  /**\n   * Grid constructor\n   * @param  {HTMLCanvasElement} canvas - HTML canvas.\n   */\n  constructor (canvas, game) {\n    this.canvas = canvas\n    this.game = game\n    this.canvas.width = this.game.grid.canvasSize.width\n    this.canvas.height = this.game.grid.canvasSize.height\n    this.context = this.canvas.getContext('2d')\n    this.animationId = null\n\n    // bind events\n    this.canvas.onclick = this.onCanvasClick.bind(this)\n    this.canvas.onmousemove = this.onMouseMove.bind(this)\n    this.canvas.onmouseout = this.onMouseMove.bind(this)\n  }\n\n  /**\n   * Start the game loop.\n   */\n  start () {\n    this.lastTick = Date.now()\n    this.animationId = requestAnimationFrame(this.tick.bind(this))\n  }\n\n  stop () {\n    this.animationId = null\n  }\n\n  isRunning () {\n    return this.animationId !== null\n  }\n\n  /**\n   * Update state, render and restart the game loop every X ms.\n   */\n  tick () {\n    if (!this.animationId) {\n      return\n    }\n\n    const now = Date.now()\n    const delta = (now - this.lastTick)\n\n    this.game.update(delta)\n    this.lastTick = now\n\n    this.render()\n    this.animationId = requestAnimationFrame(this.tick.bind(this))\n  }\n\n  /**\n   * Draw the grid.\n   */\n  render () {\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height)\n    // 0: highlight\n    if (this.game.highlight) {\n      let stroke = 'green'\n      let fill = 'lightgreen'\n      if (!this.game.highlight.valid) {\n        stroke = 'red'\n        fill = 'lightcoral'\n      }\n      this._paintBoundaries(this.game.highlight.boundaries, stroke, fill)\n    }\n\n    // 1st layer: towers\n    this.game.towers.forEach((tower) => {\n      tower.draw(this.context)\n    })\n\n    // 2nd layer: goons\n    this.game.goons.forEach((goon) => {\n      goon.draw(this.context)\n    })\n  }\n\n  /**\n   * DEBUG: paint a blue square on blocked cells\n   */\n  paintBlockedCells () {\n    this.context.fillStyle = 'lightskyblue'\n    this.context.strokeStyle = 'azure'\n    const blockedCells = this.game.grid.getCells().filter((cell) => cell.blocked)\n    blockedCells.forEach((cell) => {\n      let position = cell.getTopLeftPosition()\n      this.context.strokeRect(position.x, position.y, CELL_EDGE_SIZE, CELL_EDGE_SIZE)\n      this.context.fillRect(position.x, position.y, CELL_EDGE_SIZE, CELL_EDGE_SIZE)\n    })\n\n    this.game.towers.forEach((tower) => {\n      this._paintBoundaries(tower.getBoundaries(), 'red')\n    })\n  }\n\n  /**\n   * Trigger onclick on canvas click.\n   * @param {MouseEvent} event\n   */\n  onCanvasClick (event) {\n    var mousePosition = {\n      x: event.clientX - event.target.offsetLeft,\n      y: event.clientY - event.target.offsetTop\n    }\n    this.game.onUserClick(mousePosition)\n  }\n\n  onMouseMove (event) {\n    var mousePosition = {\n      x: event.clientX - event.target.offsetLeft,\n      y: event.clientY - event.target.offsetTop\n    }\n    this.game.onMouseMove(mousePosition)\n  }\n\n  _paintBoundaries (boundaries, stroke, fill) {\n    let position = boundaries.topLeft\n    let w = boundaries.bottomRight.x - position.x\n    let h = boundaries.bottomRight.y - position.y\n    if (stroke) {\n      this.context.strokeStyle = stroke\n      this.context.strokeRect(position.x, position.y, w, h)\n    }\n    if (fill) {\n      this.context.fillStyle = fill\n      this.context.fillRect(position.x, position.y, w, h)\n    }\n  }\n}\n\nexport default Renderer\n\n\n\n// WEBPACK FOOTER //\n// ./src/renderer.js"],"sourceRoot":""}