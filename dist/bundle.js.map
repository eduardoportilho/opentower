{"version":3,"sources":["webpack:///webpack/bootstrap e1fbc1d8dccfaad9522f","webpack:///./src/index.js","webpack:///./src/image-cache.js","webpack:///./src/game.js","webpack:///./src/cell.js","webpack:///./src/geometry-utils.js","webpack:///./src/game-config.js","webpack:///./src/grid.js","webpack:///./src/coord.js","webpack:///./src/tower.js","webpack:///./src/drawing-utils.js","webpack:///./src/goon-wave.js","webpack:///./src/goon.js","webpack:///./src/path-finder.js","webpack:///./src/random.js","webpack:///./src/score-board.js","webpack:///./src/renderer.js"],"names":["init","canvas","document","getElementById","scoreBoard","game","start","initDebugPanel","onclick","e","stopPropagation","preventDefault","x","parseInt","value","y","spawnGoon","speed","goons","forEach","goon","renderer","isRunning","stop","loadImageCache","imageUrls","imageCache","onLoadComplete","key","url","img","Image","onload","Object","keys","length","src","initGame","getGame","gameSingleton","Game","Error","towers","highlight","undefined","spawnedGoonCount","cash","initialCash","goonsInside","grid","width","height","pathFinder","goonWave","cellsWhereGoonCanSpawn","getCellsWhereGoonCanSpawn","gameInitialized","_init","won","updateWaveNumber","wavesEnded","position","cost","towerCells","getCellsAround","sizeInCells","rows","cols","some","cell","blocked","hasGoon","recalculate","doNotTrapCells","map","concat","isInvalidPosition","reachable","towerBoundaries","_getCellsBoudaries","tower","push","mousePosition","isOcuppied","boundaries","valid","spawnCell","getRandomElementFromArray","setInitialCell","bounty","removeGoon","endGame","index","findIndex","aGoon","id","splice","delta","update","updateHighlight","middle","Math","round","rowCount","count","min","row","cells","get","topLeft","getTopLeftPosition","bottomRight","getBottomRightPosition","CELL_EDGE_SIZE","Cell","col","coord","dist","nextStep","isTarget","equals","pointInCell","zero","calculateDistance","pointA","pointB","dx","dy","sqrt","pow","getPointInLine","origin","anyPointInLine","distance","hyp","sin","cos","dyStep","dxStep","nextX","nextY","getAngleRadians","asin","waves","intervalAfterWave","numberOfGoons","intervalBetweenSpawns","goonSpeed","goonLife","goonBounty","Grid","canvasSize","colCount","floor","Array","allCells","apply","any","filter","_isOutOfGrid","point","topLeftCell","getCellAtPosition","bottomRightCell","center","topRow","bottomRow","leftCol","rightCol","Coord","Tower","topLeftPosition","centerPosition","reloadTime","fireRange","damage","timeUntilReloaded","canonAngle","PI","context","fillStyle","strokeStyle","basePct","baseWidth","baseHeight","baseX","baseY","fillRect","strokeRect","rotPct","rotRadius","rotCenterX","rotCenterY","canonPct","canonWidth","canonHeight","canonX","canonY","save","translate","rotate","restore","isLoaded","shoot","reload","getClosestGoonInRange","life","towerCenter","goonsInRange","goonDist","sort","a","b","bottomRightPosition","buildSquarePath","roundRect","circle","startPosition","edgeSize","path","Path2D","startCorner","corners","moveTo","corner","lineTo","ctx","fill","stroke","radius","tl","tr","br","bl","defaultRadius","side","beginPath","quadraticCurveTo","closePath","arc","GoonWave","config","slice","currentWave","waveNumber","timeUntilNexWave","timeUntilNextSpawn","goonsLeft","startOrStopWave","deployGoons","onWavesEnd","shift","newGoon","Date","now","GOON_IMAGE_SIZE","Goon","fullLife","_residualStep","drawImage","drawLifeBar","greenWidth","max","redWidth","greenX","redX","updatePosition","updateLife","killGoon","nextCell","offset","getOffset","targetPosition","step","intStep","nextPosition","nextPositionCell","goonArrived","PathFinder","reset","targetCell","getTarget","frontier","current","neighboursCells","getUnvisitedNeighboursCells","neighbourCell","currentCell","steps","Random","yesChance","random","ceil","array","getRandomIntExclusive","currentIndex","temporaryValue","randomIndex","ScoreBoard","containerEl","cashDisplay","querySelector","goonsInsideDisplay","waveNumberDisplay","textContent","updateCash","updateGoonsInside","Renderer","getContext","animationId","onCanvasClick","bind","onmousemove","onMouseMove","onmouseout","lastTick","requestAnimationFrame","tick","render","clearRect","_paintBoundaries","draw","blockedCells","getCells","getBoundaries","event","clientX","target","offsetLeft","clientY","offsetTop","onUserClick","w","h"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e1fbc1d8dccfaad9522f","import {loadImageCache} from './image-cache.js'\nimport {initGame, getGame} from './game.js'\n\nloadImageCache(init)\n\nfunction init () {\n  const canvas = document.getElementById('canvas')\n  const scoreBoard = document.getElementById('scoreBoard')\n\n  const game = initGame(canvas, scoreBoard)\n  game.start()\n\n  initDebugPanel()\n}\n\nfunction initDebugPanel () {\n  document.getElementById('spawn').onclick = function (e) {\n    e.stopPropagation()\n    e.preventDefault()\n\n    const x = parseInt(document.getElementById('x').value)\n    const y = parseInt(document.getElementById('y').value)\n    getGame().spawnGoon(x, y)\n  }\n\n  document.getElementById('speedUpdate').onclick = function (e) {\n    e.stopPropagation()\n    e.preventDefault()\n\n    const speed = parseInt(document.getElementById('speed').value)\n    getGame().goons.forEach(goon => { goon.speed = speed })\n  }\n\n  document.getElementById('pause').onclick = function (e) {\n    e.stopPropagation()\n    e.preventDefault()\n    const game = getGame()\n\n    if (game.renderer.isRunning()) {\n      game.stop()\n    } else {\n      game.start()\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/* global Image */\n\n/**\n * List of images to load.\n * @type {Object}\n */\nconst imageUrls = {\n  'tower-1': '../images/tower-1.png',\n  'goon-1': '../images/goon-1.png'\n}\n\n/**\n * Global image cache.\n * @type {Object}\n */\nexport const imageCache = {}\n\n/**\n * Load the images on the cache and call the callback when ready.\n * @param  {function} onLoadComplete\n */\nexport function loadImageCache (onLoadComplete) {\n  for (let key in imageUrls) {\n    let url = imageUrls[key]\n    let img = new Image()\n    img.onload = () => {\n      imageCache[key] = img\n      if (Object.keys(imageCache).length === Object.keys(imageUrls).length) {\n        onLoadComplete()\n      }\n    }\n    img.src = url\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/image-cache.js","/**\n * @typedef {Object} Point\n * @property {number} x - The X Coordinate.\n * @property {number} y - The Y Coordinate.\n */\n\nimport Grid from './grid'\nimport Tower from './tower'\nimport GoonWave from './goon-wave'\nimport PathFinder from './path-finder'\nimport random from './random'\nimport gameConfig from './game-config.js'\nimport ScoreBoard from './score-board.js'\nimport Renderer from './renderer.js'\n\nlet gameSingleton\n\nexport function initGame (canvas, scoreBoard) {\n  if (!gameSingleton) {\n    gameSingleton = new Game(canvas, scoreBoard)\n  }\n  return gameSingleton\n}\n\nexport function getGame () {\n  if (!gameSingleton) {\n    throw new Error('Game not initialized')\n  }\n  return gameSingleton\n}\n\nclass Game {\n  constructor (canvas, scoreBoard) {\n    this.canvas = canvas\n    this.scoreBoard = scoreBoard\n    this.towers = []\n    this.goons = []\n    this.highlight = undefined\n    this.spawnedGoonCount = 0\n    this.cash = gameConfig.initialCash\n    this.goonsInside = 0\n  }\n\n  _init () {\n    this.grid = new Grid({width: 1000, height: 600})\n    this.pathFinder = new PathFinder(this.grid)\n    this.goonWave = new GoonWave()\n    this.scoreBoard = new ScoreBoard(this.scoreBoard)\n    this.renderer = new Renderer(this.canvas)\n    this.cellsWhereGoonCanSpawn = this.getCellsWhereGoonCanSpawn()\n    this.gameInitialized = true\n  }\n\n  start () {\n    if (!this.gameInitialized) {\n      this._init()\n    }\n    this.renderer.start()\n  }\n\n  stop () {\n    this.renderer.stop()\n  }\n\n  endGame (won) {\n    this.stop()\n    this.scoreBoard.updateWaveNumber(won ? 'You won!' : 'You lost!')\n  }\n\n  onWaveEnd () {\n    this.wavesEnded = true\n  }\n\n  /**\n   * When a user click a cell.\n   * @param  {Point} position - Cell upper-left position.\n   */\n  onUserClick (position) {\n    if (this.cash < Tower.cost) {\n      // no money, no tower\n      return\n    }\n    const towerCells = this.grid.getCellsAround(position, Tower.sizeInCells.rows, Tower.sizeInCells.cols)\n    // occupied ?\n    if (!towerCells || towerCells.some(cell => cell.blocked || cell.hasGoon)) {\n      return\n    }\n    // 1: block\n    towerCells.forEach(cell => { cell.blocked = true })\n    // 2: recalculate paths\n    this.pathFinder.recalculate()\n    // 3: check for trapped goons and spawn locations\n    const doNotTrapCells = this.goons.map(goon => goon.cell)\n      .concat(this.cellsWhereGoonCanSpawn)\n    const isInvalidPosition = doNotTrapCells.some(cell => !cell.reachable)\n    // 4: if trapped, rollback\n    if (isInvalidPosition) {\n      towerCells.forEach(cell => { cell.blocked = false })\n      this.pathFinder.recalculate()\n      return\n    }\n\n    const towerBoundaries = this._getCellsBoudaries(towerCells)\n    const tower = new Tower(towerBoundaries)\n    this.towers.push(tower)\n    this.cash -= Tower.cost\n  }\n\n  onMouseMove (position) {\n    this.mousePosition = position\n  }\n\n  updateHighlight () {\n    if (!this.mousePosition) {\n      return\n    }\n    const towerCells = this.grid.getCellsAround(\n      this.mousePosition,\n      Tower.sizeInCells.rows,\n      Tower.sizeInCells.cols\n    )\n    if (!towerCells) {\n      this.highlight = undefined\n      return\n    }\n    const towerBoundaries = this._getCellsBoudaries(towerCells)\n    const isOcuppied = towerCells.some(cell => cell.blocked || cell.hasGoon)\n    this.highlight = {\n      boundaries: towerBoundaries,\n      valid: !isOcuppied\n    }\n  }\n\n  /**\n   * Spawn a new goon.\n   */\n  spawnGoon (goon) {\n    const spawnCell = random.getRandomElementFromArray(this.cellsWhereGoonCanSpawn)\n    goon.setInitialCell(spawnCell)\n    this.goons.push(goon)\n  }\n\n  killGoon (goon) {\n    this.cash += goon.bounty\n    this.removeGoon(goon)\n  }\n\n  goonArrived (goon) {\n    this.goonsInside++\n    this.removeGoon(goon)\n\n    if (this.goonsInside >= 5) {\n      this.endGame(false)\n    }\n  }\n\n  removeGoon (goon) {\n    const index = this.goons.findIndex((aGoon) => aGoon.id === goon.id)\n    if (index >= 0) {\n      this.goons.splice(index, 1)\n    }\n    if (this.goons.length <= 0 && this.wavesEnded) {\n      this.endGame(true)\n    }\n  }\n\n  /**\n   * Update the state of the game entities.\n   * @param  {number} delta - ms since last update.\n   */\n  update (delta) {\n    this.goonWave.update(delta)\n    this.towers.forEach((tower) => tower.update(delta))\n    this.goons.forEach((goon) => goon.update(delta))\n    this.updateHighlight()\n    this.scoreBoard.update()\n  }\n\n  getCellsWhereGoonCanSpawn () {\n    const middle = Math.round(this.grid.rowCount / 2)\n    let count = Math.min(10, Math.round(this.grid.rowCount / 3))\n    let row = middle - Math.round(count / 2)\n    const cells = []\n    while (count-- > 0) {\n      cells.push(\n        this.grid.get(row++, 0)\n      )\n    }\n    return cells\n  }\n\n  _getCellsBoudaries (cells) {\n    return {\n      topLeft: cells[0].getTopLeftPosition(),\n      bottomRight: cells[cells.length - 1].getBottomRightPosition()\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/game.js","/**\n * @typedef {Object} Point\n * @property {number} x - The X Coordinate.\n * @property {number} y - The Y Coordinate.\n */\n\nimport Coord from './coord'\n\n/**\n * Size of the (square) cell edge.\n * @type {number}\n */\nexport const CELL_EDGE_SIZE = 20\n\n/**\n * Grid cell.\n */\nexport class Cell {\n  /**\n   * @param {number} row - Row number.\n   * @param {number} col - Column number.\n   */\n  constructor (row, col) {\n    this.coord = new Coord(row, col)\n    this.reachable = false\n    this.dist = undefined\n    this.nextStep = undefined\n    this.blocked = false\n    this.isTarget = false\n  }\n\n  /**\n   * Check cell coordinates.\n   * @param {Coord} coord\n   * @return {Boolean}\n   */\n  isOnCoord (coord) {\n    return this.coord.equals(coord)\n  }\n\n  /**\n   * Get the position of the center of the cell in pixels.\n   * @return {Point}\n   */\n  getCenterPosition () {\n    let x = Math.round((this.coord.col * CELL_EDGE_SIZE) + (CELL_EDGE_SIZE / 2))\n    let y = Math.round((this.coord.row * CELL_EDGE_SIZE) + (CELL_EDGE_SIZE / 2))\n    return {x, y}\n  }\n\n  /**\n   * Get the top-left position of the cell in pixels.\n   * @return {Point}\n   */\n  getTopLeftPosition () {\n    let x = this.coord.col * CELL_EDGE_SIZE\n    let y = this.coord.row * CELL_EDGE_SIZE\n    return {x, y}\n  }\n\n  /**\n   * Get the bottom-right position of the cell in pixels.\n   * @return {Point}\n   */\n  getBottomRightPosition () {\n    let x = (this.coord.col + 1) * CELL_EDGE_SIZE\n    let y = (this.coord.row + 1) * CELL_EDGE_SIZE\n    return {x, y}\n  }\n\n  /**\n   * Get the offset of a point inside the cell from the cell's top-left corner.\n   * @param  {Point} pointInCell\n   * @return {Point} offset\n   */\n  getOffset (pointInCell) {\n    const zero = this.getTopLeftPosition()\n    return {\n      x: pointInCell.x - zero.x,\n      y: pointInCell.y - zero.y\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/cell.js","/**\n * Calculate the distance between 2 points.\n * @param  {Point} pointA\n * @param  {Point} pointB\n * @return {number} distance\n */\nexport const calculateDistance = (pointA, pointB) => {\n  const dx = pointB.x - pointA.x\n  const dy = pointB.y - pointA.y\n  return Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2))\n}\n\n/**\n * Let L be the line formed by the 2 given points `origin` and `anyPointInLine`.\n * Return the point in L with the given distance to `origin`.\n * @param  {Point} origin - Origin point.\n * @param  {Point} anyPointInLine - Another poin in the desired line (define direction).\n * @param  {number} distance - Distance from origin to the returned point in pixels.\n * @return {Point} Point in L with the given distance to `origin`.\n */\nexport const getPointInLine = (origin, anyPointInLine, distance) => {\n  const hyp = calculateDistance(origin, anyPointInLine)\n  const dx = anyPointInLine.x - origin.x\n  const dy = anyPointInLine.y - origin.y\n  const sin = dy / hyp\n  const cos = dx / hyp\n\n  const dyStep = sin * distance\n  const dxStep = cos * distance\n\n  const nextX = origin.x + dxStep\n  const nextY = origin.y + dyStep\n  return {x: nextX, y: nextY}\n}\n\n/**\n * Return the angle between the line conecting 2 points and the horizontal axis.\n *\n * Angle signal:\n *  B     |     B\n *    (-) | (-)\n * -------A-------\n *    (+) | (+)\n *  B     |     B\n *\n * @param  {Point} pointA\n * @param  {Point} pointB\n * @return {number} Angle in radians.\n */\nexport const getAngleRadians = (pointA, pointB) => {\n  const dy = pointB.y - pointA.y\n  const hyp = calculateDistance(pointA, pointB)\n  const sin = dy / hyp\n  return Math.asin(sin)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/geometry-utils.js","export default {\n  initialCash: 50,\n  waves: [\n    {\n      intervalAfterWave: 20000,\n      numberOfGoons: 5,\n      intervalBetweenSpawns: 1500,\n      goonSpeed: 20,\n      goonLife: 100,\n      goonBounty: 20\n    },\n    {\n      intervalAfterWave: 20000,\n      numberOfGoons: 10,\n      intervalBetweenSpawns: 1500,\n      goonSpeed: 20,\n      goonLife: 100,\n      goonBounty: 20\n    },\n    {\n      intervalAfterWave: 20000,\n      numberOfGoons: 10,\n      intervalBetweenSpawns: 1500,\n      goonSpeed: 25,\n      goonLife: 120,\n      goonBounty: 20\n    },\n    {\n      intervalAfterWave: 20000,\n      numberOfGoons: 10,\n      intervalBetweenSpawns: 1000,\n      goonSpeed: 25,\n      goonLife: 120,\n      goonBounty: 20\n    }\n  ]\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/game-config.js","/**\n * @typedef {Object} CellData\n * @property {number} x - The X Coordinate.\n * @property {number} y - The Y Coordinate.\n * @property {number} dist - Number of steps until target.\n * @property {number} nextStep - Next cell on the path to target.\n */\n\nimport {Cell, CELL_EDGE_SIZE} from './cell'\n\nexport default class Grid {\n  constructor (canvasSize) {\n    this.canvasSize = canvasSize\n    this.colCount = Math.floor(canvasSize.width / CELL_EDGE_SIZE)\n    this.rowCount = Math.floor(canvasSize.height / CELL_EDGE_SIZE)\n    this.init()\n  }\n\n  init () {\n    this.grid = new Array(this.rowCount)\n    for (var row = 0; row < this.rowCount; row++) {\n      this.grid[row] = Array(this.colCount)\n      for (var col = 0; col < this.colCount; col++) {\n        this.grid[row][col] = new Cell(row, col)\n      }\n    }\n    // flatten all cells on a single array\n    this.allCells = [].concat.apply([], this.grid)\n  }\n\n  /**\n   * Reset grid data.\n   */\n  reset () {\n    for (var row = 0; row < this.rowCount; row++) {\n      for (var col = 0; col < this.colCount; col++) {\n        this.grid[row][col].reachable = false\n        this.grid[row][col].dist = undefined\n        this.grid[row][col].nextStep = undefined\n      }\n    }\n  }\n\n  /**\n   * Get cell at position.\n   * @param  {number} x - X coordinate.\n   * @param  {number} y - Y coordinate.\n   * @return {Cell}\n   */\n  get (row, col) {\n    try {\n      return this.grid[row][col]\n    } catch (any) {\n      return undefined\n    }\n  }\n\n  /**\n   * Get target cell.\n   * @return {Cell}\n   */\n  getTarget () {\n    let row = Math.round(this.rowCount / 2)\n    let col = this.colCount - 1\n    return this.get(row, col)\n  }\n\n  /**\n   * Get the unvisited neighbour cells of the position.\n   * @param  {Cell} cell\n   * @return {Cell[]}\n   */\n  getUnvisitedNeighboursCells (cell) {\n    const coord = cell.coord\n    const grid = this\n    return [\n      {row: coord.row, col: coord.col - 1},\n      {row: coord.row - 1, col: coord.col},\n      {row: coord.row, col: coord.col + 1},\n      {row: coord.row + 1, col: coord.col}\n    ].filter(coord => (\n      !this._isOutOfGrid(coord)\n    )).map(coord => (\n      grid.get(coord.row, coord.col)\n    )).filter(cell => (\n      cell.dist === undefined &&\n      !cell.blocked\n    ))\n  }\n\n  /**\n   * Get the cell that contains the provided position.\n   * @param  {Point} point\n   * @return {Cell}\n   */\n  getCellAtPosition (point) {\n    if (point.x < 0 ||\n      point.x > this.canvasSize.width ||\n      point.y < 0 ||\n      point.y > this.canvasSize.height\n    ) {\n      return undefined\n    }\n    const col = Math.floor(point.x / CELL_EDGE_SIZE)\n    const row = Math.floor(point.y / CELL_EDGE_SIZE)\n    return this.get(row, col)\n  }\n\n  /**\n   * Get the cells that contains the boundaries area.\n   * @param  {Boundaries} boundaries\n   * @return {Cell[]}\n   */\n  getCellsInBoundaries (boundaries) {\n    const topLeftCell = this.getCellAtPosition(boundaries.topLeft)\n    const bottomRightCell = this.getCellAtPosition(boundaries.bottomRight)\n    const cells = []\n    for (let row = topLeftCell.coord.row; row <= bottomRightCell.coord.row; row++) {\n      for (let col = topLeftCell.coord.col; col <= bottomRightCell.coord.col; col++) {\n        cells.push(this.get(row, col))\n      }\n    }\n    return cells\n  }\n\n  /**\n   * Return an array containing all cells.\n   * @return {Cell[]}\n   */\n  getCells () {\n    return this.allCells\n  }\n\n  /**\n   * Return a block of cells containg the point approximately in the center\n   * @param  {Point} point - Point contained in the block,\n   * @param  {number} rowCount - Number of rows in the block.\n   * @param  {number} colCount - Number of cols in the block.\n   * @return {Cell[]}\n   */\n  getCellsAround (point, rowCount, colCount) {\n    const center = this.getCellAtPosition(point)\n    if (!center) {\n      return undefined\n    }\n    const topRow = center.coord.row - Math.floor(rowCount / 2)\n    const bottomRow = topRow + rowCount - 1\n    const leftCol = center.coord.col - Math.floor(colCount / 2)\n    const rightCol = leftCol + colCount - 1\n    if (this._isOutOfGrid({row: topRow, col: leftCol}) ||\n      this._isOutOfGrid({row: bottomRow, col: rightCol})) {\n      return undefined\n    }\n\n    const cells = []\n    for (let row = topRow; row <= bottomRow; row++) {\n      for (let col = leftCol; col <= rightCol; col++) {\n        cells.push(this.get(row, col))\n      }\n    }\n    return cells\n  }\n\n  /**\n   * Check if a coordinate is out of the grid.\n   * @param  {Coord} coord\n   * @return {Boolean}       [description]\n   */\n  _isOutOfGrid (coord) {\n    return coord.col < 0 ||\n      coord.col >= this.colCount ||\n      coord.row < 0 ||\n      coord.row >= this.rowCount\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/grid.js","export default class Coord {\n  /**\n   * @param {number} row\n   * @param {number} col\n   */\n  constructor (row, col) {\n    this.row = row\n    this.col = col\n  }\n\n  /**\n   * Compare two coordinates.\n   * @param {Coord} coord\n   * @return {Boolean}\n   */\n  equals (coord) {\n    return coord && this.row === coord.row && this.col === coord.col\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/coord.js","import {calculateDistance, getAngleRadians} from './geometry-utils'\nimport {roundRect, circle} from './drawing-utils'\nimport {getGame} from './game.js'\n/**\n * @typedef {Object} Point\n * @property {number} x - The X Coordinate.\n * @property {number} y - The Y Coordinate.\n */\n\n/**\n * @typedef {Object} Boundaries\n * @property {Point} topLeft - top-left point of the object.\n * @property {Point} bottomRight - bottom-right point of the object.\n */\n\nexport default class Tower {\n  constructor (boundaries) {\n    this.game = getGame()\n    this.topLeftPosition = boundaries.topLeft\n    this.width = boundaries.bottomRight.x - boundaries.topLeft.x\n    this.height = boundaries.bottomRight.y - boundaries.topLeft.y\n    this.centerPosition = {\n      x: Math.round(boundaries.topLeft.x + (this.width / 2)),\n      y: Math.round(boundaries.topLeft.y + (this.height / 2))\n    }\n    // shooting consts\n    this.reloadTime = 2000\n    this.fireRange = 150\n    this.damage = 5\n\n    // shoting props\n    this.timeUntilReloaded = 0\n    this.canonAngle = Math.PI\n  }\n\n  /**\n   * Draw the tower on position.\n   * @param  {CanvasRenderingContext2D} context - Canvas renderering context.\n   */\n  draw (context) {\n    // grass\n    let x = this.topLeftPosition.x\n    let y = this.topLeftPosition.y\n    let width = this.width\n    let height = this.height\n    context.fillStyle = '#B8E986'\n    context.strokeStyle = '#7ED321'\n    roundRect(context, x, y, width, height, true, true)\n\n    // base\n    const basePct = 3 / 5\n    const baseWidth = Math.round(width * basePct)\n    const baseHeight = Math.round(height * basePct)\n    const baseX = x + Math.round((width - baseWidth) / 2)\n    const baseY = y + Math.round((height - baseHeight) / 2)\n    context.fillStyle = '#D3D3D3'\n    context.strokeStyle = '#979797'\n    context.fillRect(baseX, baseY, baseWidth, baseHeight)\n    context.strokeRect(baseX, baseY, baseWidth, baseHeight)\n\n    // Rotatory device\n    const rotPct = 2 / 5\n    const rotRadius = Math.round(width * rotPct / 2)\n    const rotCenterX = x + Math.round(width / 2)\n    const rotCenterY = y + Math.round(height / 2)\n    context.fillStyle = '#9B9B9B'\n    context.strokeStyle = '#979797'\n    circle(context, rotCenterX, rotCenterY, rotRadius, true, true)\n\n    // canon\n    const canonPct = 22 / 50\n    const canonWidth = Math.round(width * canonPct)\n    const canonHeight = 8\n    const canonX = 0\n    const canonY = 0 - Math.round(canonHeight / 2)\n    context.save()\n    context.translate(rotCenterX, rotCenterY)\n    context.rotate(this.canonAngle)\n    context.fillStyle = '#9B9B9B'\n    context.strokeStyle = '#979797'\n    context.fillRect(canonX, canonY, canonWidth, canonHeight)\n    context.restore()\n  }\n\n  /**\n   * Update tower state.\n   * @param  {number} delta - ms since last update.\n   */\n  update (delta) {\n    if (this.isLoaded()) {\n      this.shoot()\n    } else {\n      this.reload(delta)\n    }\n  }\n\n  reload (delta) {\n    this.timeUntilReloaded -= delta\n  }\n\n  shoot () {\n    const goon = this.getClosestGoonInRange()\n    if (goon) {\n      goon.life -= this.damage\n      this.timeUntilReloaded = this.reloadTime\n      this.canonAngle = getAngleRadians(this.centerPosition, goon.position)\n      if (goon.position.x < this.centerPosition.x) {\n        this.canonAngle = Math.PI - this.canonAngle\n      }\n    }\n  }\n\n  isLoaded () {\n    return this.timeUntilReloaded <= 0\n  }\n\n  getClosestGoonInRange () {\n    let towerCenter = this.centerPosition\n    const goonsInRange = this.game.goons\n      .map(goon => {\n        const dist = calculateDistance(towerCenter, goon.position)\n        return {goon, dist}\n      })\n      .filter(goonDist => goonDist.dist <= this.fireRange)\n      .sort((a, b) => a.dist - b.dist)\n    return goonsInRange.length > 0 ? goonsInRange[0].goon : undefined\n  }\n\n  /**\n   * Get to top-left and bottom-right points of the tower.\n   * @return {Boundaries}\n   */\n  getBoundaries () {\n    return {\n      'topLeft': this.topLeftPosition,\n      'bottomRight': this.bottomRightPosition\n    }\n  }\n}\nTower.cost = 10\nTower.sizeInCells = {\n  rows: 2,\n  cols: 2\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tower.js","/* global Path2D */\n\n/**\n * @typedef {Object} Point\n * @property {number} x - The X Coordinate.\n * @property {number} y - The Y Coordinate.\n */\n\n/**\n * Build a square path.\n * @param  {Point} startPosition\n * @param  {number} edgeSize\n * @return {Path2D}\n */\nexport function buildSquarePath (startPosition, edgeSize) {\n  const path = new Path2D()\n  const startCorner = [startPosition.x, startPosition.y]\n  const corners = [\n    [startPosition.x + edgeSize, startPosition.y],\n    [startPosition.x + edgeSize, startPosition.y + edgeSize],\n    [startPosition.x, startPosition.y + edgeSize],\n    [startPosition.x, startPosition.y]\n  ]\n  path.moveTo(...startCorner)\n  corners.forEach((corner) => {\n    path.lineTo(...corner)\n  })\n  return path\n}\n\n/**\n * Draws a rounded rectangle using the current state of the canvas.\n * If you omit the last three params, it will draw a rectangle\n * outline with a 5 pixel border radius\n * @param {CanvasRenderingContext2D} ctx\n * @param {Number} x The top left x coordinate\n * @param {Number} y The top left y coordinate\n * @param {Number} width The width of the rectangle\n * @param {Number} height The height of the rectangle\n * @param {Boolean} [fill = false] Whether to fill the rectangle.\n * @param {Boolean} [stroke = true] Whether to stroke the rectangle.\n * @param {Number} [radius = 5] The corner radius; It can also be an object\n *                 to specify different radii for corners\n * @param {Number} [radius.tl = 0] Top left\n * @param {Number} [radius.tr = 0] Top right\n * @param {Number} [radius.br = 0] Bottom right\n * @param {Number} [radius.bl = 0] Bottom left\n */\nexport function roundRect (ctx, x, y, width, height, fill, stroke, radius) {\n  if (typeof stroke === 'undefined') {\n    stroke = true\n  }\n  if (typeof radius === 'undefined') {\n    radius = 5\n  }\n  if (typeof radius === 'number') {\n    radius = {tl: radius, tr: radius, br: radius, bl: radius}\n  } else {\n    const defaultRadius = {tl: 0, tr: 0, br: 0, bl: 0}\n    for (var side in defaultRadius) {\n      radius[side] = radius[side] || defaultRadius[side]\n    }\n  }\n  ctx.beginPath()\n  ctx.moveTo(x + radius.tl, y)\n  ctx.lineTo(x + width - radius.tr, y)\n  ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr)\n  ctx.lineTo(x + width, y + height - radius.br)\n  ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height)\n  ctx.lineTo(x + radius.bl, y + height)\n  ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl)\n  ctx.lineTo(x, y + radius.tl)\n  ctx.quadraticCurveTo(x, y, x + radius.tl, y)\n  ctx.closePath()\n  if (fill) {\n    ctx.fill()\n  }\n  if (stroke) {\n    ctx.stroke()\n  }\n}\n\nexport function circle (ctx, x, y, radius, fill, stroke) {\n  ctx.beginPath()\n  ctx.arc(x, y, radius, 0, 2 * Math.PI)\n  fill && ctx.fill()\n  stroke && ctx.stroke()\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/drawing-utils.js","import Goon from './goon'\nimport gameConfig from './game-config.js'\nimport {getGame} from './game.js'\n\nexport default class GoonWave {\n  constructor () {\n    this.game = getGame()\n    this.config = gameConfig.waves.slice(0)\n\n    this.currentWave = null\n    this.waveNumber = 0\n    this.timeUntilNexWave = 0\n    this.timeUntilNextSpawn = 0\n    this.goonsLeft = 0\n  }\n\n  update (delta) {\n    this.startOrStopWave(delta)\n    this.deployGoons(delta)\n  }\n\n  startOrStopWave (delta) {\n    if (this.currentWave) {\n      // no more goons, end wave\n      if (this.goonsLeft === 0) {\n        this.timeUntilNexWave = this.currentWave.intervalAfterWave\n        this.currentWave = null\n      }\n    } else {\n      this.timeUntilNexWave -= delta\n      // interval ended, start wave\n      if (this.timeUntilNexWave <= 0) {\n        if (this.config.length === 0) {\n          this.game.onWavesEnd()\n          return\n        }\n        this.currentWave = this.config.shift()\n        this.waveNumber++\n        this.timeUntilNextSpawn = this.currentWave.intervalBetweenSpawns\n        this.goonsLeft = this.currentWave.numberOfGoons\n      }\n    }\n  }\n\n  deployGoons (delta) {\n    // is wave running?\n    if (!this.currentWave || this.goonsLeft === 0) {\n      return\n    }\n    // is in interval between spawns? wait...\n    if (this.timeUntilNextSpawn > 0) {\n      this.timeUntilNextSpawn -= delta\n      return\n    }\n\n    // spawn!\n    this.timeUntilNextSpawn = this.currentWave.intervalBetweenSpawns\n    this.goonsLeft--\n    this.game.spawnGoon(this.newGoon())\n  }\n\n  newGoon () {\n    const id = Date.now()\n    const goon = new Goon(\n      id,\n      this.currentWave.goonSpeed,\n      this.currentWave.goonLife,\n      this.currentWave.goonBounty\n    )\n    return goon\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/goon-wave.js","import {imageCache} from './image-cache.js'\nimport {getPointInLine} from './geometry-utils'\nimport {getGame} from './game.js'\n\nconst GOON_IMAGE_SIZE = {\n  width: 14,\n  height: 20\n}\n\nexport default class Goon {\n  constructor (id, speed, life, bounty) {\n    this.id = id\n    this.game = getGame()\n    this.pathFinder = this.game.pathFinder\n    this.speed = speed // px/sec\n    this.fullLife = life\n    this.life = life\n    this.bounty = bounty\n\n    // store the decimals lost in the last step to maintain constant speed\n    this._residualStep = 0\n  }\n\n  setInitialCell (cell) {\n    this.cell = cell\n    this.cell.hasGoon = true\n    this.position = this.cell.getTopLeftPosition()\n  }\n\n  /**\n   * Draw the goon on position.\n   * @param  {CanvasRenderingContext2D} context - Canvas renderering context.\n   */\n  draw (context) {\n    // _Paint cell base:\n    // context.fillStyle = 'gold'\n    // const cellOrigin = this.cell.getTopLeftPosition()\n    // context.fillRect(cellOrigin.x, cellOrigin.y, CELL_EDGE_SIZE, CELL_EDGE_SIZE)\n\n    const img = imageCache['goon-1']\n    context.drawImage(img, this.position.x, this.position.y - Math.round(GOON_IMAGE_SIZE.height / 2))\n    this.drawLifeBar(context)\n  }\n\n  drawLifeBar (context) {\n    const height = 4\n    const width = 20\n    const greenWidth = Math.max(0, Math.round(width * this.life / this.fullLife))\n    const redWidth = width - greenWidth\n\n    const y = this.position.y - width\n    const greenX = this.position.x\n    const redX = this.position.x + greenWidth\n\n    context.fillStyle = 'green'\n    context.fillRect(greenX, y, greenWidth, height)\n    context.fillStyle = 'red'\n    context.fillRect(redX, y, redWidth, height)\n  }\n\n  /**\n   * Update goon state.\n   * @param  {number} delta - ms since last update.\n   */\n  update (delta) {\n    this.updatePosition(delta)\n    this.updateLife(delta)\n  }\n\n  updateLife (delta) {\n    if (this.life <= 0) {\n      this.game.killGoon(this)\n    }\n  }\n\n  updatePosition (delta) {\n    this.cell.hasGoon = false\n    const nextCell = this.pathFinder.nextCell(this.cell, 1)\n    if (!nextCell) {\n      throw new Error('Goon traped!')\n      // this.game.goonArrived(this)\n      // return\n    }\n\n    const offset = this.cell.getOffset(this.position)\n    const targetPosition = {\n      x: nextCell.getTopLeftPosition().x + offset.x,\n      y: nextCell.getTopLeftPosition().y + offset.y\n    }\n\n    const step = (this.speed * delta / 1000.0) + this._residualStep\n    const intStep = Math.floor(step)\n    this._residualStep = step - intStep\n\n    const nextPosition = getPointInLine(this.position, targetPosition, intStep)\n    // Might happen that step is not enought to change cell\n    const nextPositionCell = this.game.grid.getCellAtPosition(nextPosition)\n\n    if (nextPositionCell.isTarget) {\n      this.game.goonArrived(this)\n    } else {\n      this.cell = nextPositionCell\n      this.cell.hasGoon = true\n      this.position = nextPosition\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/goon.js","export default class PathFinder {\n  constructor (grid) {\n    this.grid = grid\n    this.recalculate()\n  }\n\n  /**\n   * Recalculate all paths\n   */\n  recalculate () {\n    this.grid.reset()\n    let targetCell = this.grid.getTarget()\n    targetCell.dist = 0\n    targetCell.reachable = true\n    targetCell.isTarget = true\n    targetCell.nextStep = undefined\n    this.frontier = [targetCell]\n\n    while (this.frontier.length > 0) {\n      let current = this.frontier.shift()\n      let neighboursCells = this.grid.getUnvisitedNeighboursCells(current)\n      for (let neighbourCell of neighboursCells) {\n        neighbourCell.dist = current.dist + 1\n        neighbourCell.reachable = true\n        neighbourCell.nextStep = current\n        this.frontier.push(neighbourCell)\n      }\n    }\n  }\n\n  /**\n   * Get the next position in the path to the target.\n   * @param  {Point} currentPosition - Current position.\n   * @param  {Number} steps - Number of steps to perform.\n   * @return {Point}\n   */\n  nextCell (currentCell, steps = 1) {\n    let nextCell = currentCell.nextStep\n    while (--steps > 0 && nextCell) {\n      nextCell = nextCell.nextStep\n    }\n    return nextCell\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/path-finder.js","class Random {\n  yesOrNo (yesChance) {\n    yesChance = yesChance || 0.5\n    return Math.random() < yesChance\n  }\n\n  getRandomIntExclusive (min, max) {\n    min = Math.ceil(min)\n    max = Math.floor(max)\n    // The maximum is exclusive and the minimum is inclusive\n    return Math.floor(Math.random() * (max - min)) + min\n  }\n\n  getRandomIntInclusive (min, max) {\n    min = Math.ceil(min)\n    max = Math.floor(max)\n    // The maximum is inclusive and the minimum is inclusive\n    return Math.floor(Math.random() * (max - min + 1)) + min\n  }\n\n  getRandomElementFromArray (array) {\n    var index = this.getRandomIntExclusive(0, array.length)\n    return array[index]\n  }\n\n  shuffle (array) {\n    let currentIndex = array.length\n    let temporaryValue, randomIndex\n\n    // While there remain elements to shuffle...\n    while (currentIndex !== 0) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex)\n      currentIndex -= 1\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex]\n      array[currentIndex] = array[randomIndex]\n      array[randomIndex] = temporaryValue\n    }\n  }\n}\n\nexport default new Random()\n\n\n\n// WEBPACK FOOTER //\n// ./src/random.js","import {getGame} from './game.js'\n\nexport default class ScoreBoard {\n  constructor (containerEl) {\n    this.game = getGame()\n    this.cashDisplay = containerEl.querySelector('#cashDisplay')\n    this.goonsInsideDisplay = containerEl.querySelector('#goonsInsideDisplay')\n    this.waveNumberDisplay = containerEl.querySelector('#waveNumberDisplay')\n    this.update()\n  }\n\n  updateCash (cash) {\n    if (this.cash !== cash) {\n      this.cash = cash\n      this.cashDisplay.textContent = cash\n    }\n  }\n\n  updateGoonsInside (goonsInside) {\n    if (this.goonsInside !== goonsInside) {\n      this.goonsInside = goonsInside\n      this.goonsInsideDisplay.textContent = goonsInside\n    }\n  }\n\n  updateWaveNumber (waveNumber) {\n    if (this.waveNumber !== waveNumber) {\n      this.waveNumber = waveNumber\n      this.waveNumberDisplay.textContent = waveNumber\n    }\n  }\n\n  update () {\n    this.updateCash(this.game.cash)\n    this.updateGoonsInside(this.game.goonsInside)\n    this.updateWaveNumber(this.game.goonWave.waveNumber)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/score-board.js","/* global requestAnimationFrame */\nimport {getGame} from './game.js'\n\n/**\n * @typedef {Object} Point\n * @property {number} x - The X Coordinate.\n * @property {number} y - The Y Coordinate.\n */\n\nimport {CELL_EDGE_SIZE} from './cell'\n\nclass Renderer {\n  /**\n   * Grid constructor\n   * @param  {Game} game - Main game controller.\n   * @param  {HTMLCanvasElement} canvas - HTML canvas.\n   */\n  constructor (canvas) {\n    this.canvas = canvas\n    this.game = getGame()\n    this.canvas.width = this.game.grid.canvasSize.width\n    this.canvas.height = this.game.grid.canvasSize.height\n    this.context = this.canvas.getContext('2d')\n    this.animationId = null\n\n    // bind events\n    this.canvas.onclick = this.onCanvasClick.bind(this)\n    this.canvas.onmousemove = this.onMouseMove.bind(this)\n    this.canvas.onmouseout = this.onMouseMove.bind(this)\n  }\n\n  /**\n   * Start the game loop.\n   */\n  start () {\n    this.lastTick = Date.now()\n    this.animationId = requestAnimationFrame(this.tick.bind(this))\n  }\n\n  stop () {\n    this.animationId = null\n  }\n\n  isRunning () {\n    return this.animationId !== null\n  }\n\n  /**\n   * Update state, render and restart the game loop every X ms.\n   */\n  tick () {\n    if (!this.animationId) {\n      return\n    }\n\n    const now = Date.now()\n    const delta = (now - this.lastTick)\n\n    this.game.update(delta)\n    this.lastTick = now\n\n    this.render()\n    this.animationId = requestAnimationFrame(this.tick.bind(this))\n  }\n\n  /**\n   * Draw the grid.\n   */\n  render () {\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height)\n    // 0: highlight\n    if (this.game.highlight) {\n      let stroke = 'green'\n      let fill = 'lightgreen'\n      if (!this.game.highlight.valid) {\n        stroke = 'red'\n        fill = 'lightcoral'\n      }\n      this._paintBoundaries(this.game.highlight.boundaries, stroke, fill)\n    }\n\n    // 1st layer: towers\n    this.game.towers.forEach((tower) => {\n      tower.draw(this.context)\n    })\n\n    // 2nd layer: goons\n    this.game.goons.forEach((goon) => {\n      goon.draw(this.context)\n    })\n  }\n\n  /**\n   * DEBUG: paint a blue square on blocked cells\n   */\n  paintBlockedCells () {\n    this.context.fillStyle = 'lightskyblue'\n    this.context.strokeStyle = 'azure'\n    const blockedCells = this.game.grid.getCells().filter((cell) => cell.blocked)\n    blockedCells.forEach((cell) => {\n      let position = cell.getTopLeftPosition()\n      this.context.strokeRect(position.x, position.y, CELL_EDGE_SIZE, CELL_EDGE_SIZE)\n      this.context.fillRect(position.x, position.y, CELL_EDGE_SIZE, CELL_EDGE_SIZE)\n    })\n\n    this.game.towers.forEach((tower) => {\n      this._paintBoundaries(tower.getBoundaries(), 'red')\n    })\n  }\n\n  /**\n   * Trigger onclick on canvas click.\n   * @param {MouseEvent} event\n   */\n  onCanvasClick (event) {\n    var mousePosition = {\n      x: event.clientX - event.target.offsetLeft,\n      y: event.clientY - event.target.offsetTop\n    }\n    this.game.onUserClick(mousePosition)\n  }\n\n  onMouseMove (event) {\n    var mousePosition = {\n      x: event.clientX - event.target.offsetLeft,\n      y: event.clientY - event.target.offsetTop\n    }\n    this.game.onMouseMove(mousePosition)\n  }\n\n  _paintBoundaries (boundaries, stroke, fill) {\n    let position = boundaries.topLeft\n    let w = boundaries.bottomRight.x - position.x\n    let h = boundaries.bottomRight.y - position.y\n    if (stroke) {\n      this.context.strokeStyle = stroke\n      this.context.strokeRect(position.x, position.y, w, h)\n    }\n    if (fill) {\n      this.context.fillStyle = fill\n      this.context.fillRect(position.x, position.y, w, h)\n    }\n  }\n}\n\nexport default Renderer\n\n\n\n// WEBPACK FOOTER //\n// ./src/renderer.js"],"sourceRoot":""}